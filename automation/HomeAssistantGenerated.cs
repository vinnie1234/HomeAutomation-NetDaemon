//------------------------------------------------------------------------------
// <auto-generated>
// Generated using NetDaemon CodeGenerator nd-codegen v25.18.1.0
//   At: 2025-10-27T20:31:43.3930354+01:00
//
// *** Make sure the version of the codegen tool and your nugets NetDaemon.* have the same version.***
// You can use following command to keep it up to date with the latest version:
//   dotnet tool update NetDaemon.HassModel.CodeGen
//
// To update this file with latest entities run this command in your project directory:
//   dotnet tool run nd-codegen
//
// In the template projects we provided a convenience powershell script that will update
// the codegen and nugets to latest versions update_all_dependencies.ps1.
//
// For more information: https://netdaemon.xyz/docs/user/hass_model/hass_model_codegen
// For more information about NetDaemon: https://netdaemon.xyz/
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.Extensions.DependencyInjection;
using System.Text.Json;
using System.Text.Json.Serialization;
using NetDaemon.HassModel;
using NetDaemon.HassModel.Entities;
using NetDaemon.HassModel.Entities.Core;

namespace HomeAssistantGenerated;
public static class GeneratedExtensions
{
    ///<summary>Registers all injectable generated types in the serviceCollection</summary>
    public static IServiceCollection AddHomeAssistantGenerated(this IServiceCollection serviceCollection)
    {
        serviceCollection.AddTransient<IEntityFactory, GeneratedEntityFactory>();
        serviceCollection.AddTransient<Entities>();
        serviceCollection.AddTransient<AutomationEntities>();
        serviceCollection.AddTransient<BinarySensorEntities>();
        serviceCollection.AddTransient<ButtonEntities>();
        serviceCollection.AddTransient<CalendarEntities>();
        serviceCollection.AddTransient<CameraEntities>();
        serviceCollection.AddTransient<DeviceTrackerEntities>();
        serviceCollection.AddTransient<InputBooleanEntities>();
        serviceCollection.AddTransient<InputButtonEntities>();
        serviceCollection.AddTransient<InputDatetimeEntities>();
        serviceCollection.AddTransient<InputNumberEntities>();
        serviceCollection.AddTransient<InputSelectEntities>();
        serviceCollection.AddTransient<InputTextEntities>();
        serviceCollection.AddTransient<LightEntities>();
        serviceCollection.AddTransient<MediaPlayerEntities>();
        serviceCollection.AddTransient<NumberEntities>();
        serviceCollection.AddTransient<PersistentNotificationEntities>();
        serviceCollection.AddTransient<PersonEntities>();
        serviceCollection.AddTransient<SensorEntities>();
        serviceCollection.AddTransient<SensorEntities>();
        serviceCollection.AddTransient<SunEntities>();
        serviceCollection.AddTransient<SwitchEntities>();
        serviceCollection.AddTransient<UpdateEntities>();
        serviceCollection.AddTransient<WeatherEntities>();
        serviceCollection.AddTransient<ZoneEntities>();
        serviceCollection.AddTransient<SceneEntities>();
        serviceCollection.AddTransient<CoverEntities>();
        serviceCollection.AddTransient<SelectEntities>();
        serviceCollection.AddTransient<VacuumEntities>();
        serviceCollection.AddTransient<RemoteEntities>();
        serviceCollection.AddTransient<TtsEntities>();
        serviceCollection.AddTransient<EventEntities>();
        serviceCollection.AddTransient<CounterEntities>();
        serviceCollection.AddTransient<TodoEntities>();
        serviceCollection.AddTransient<SttEntities>();
        serviceCollection.AddTransient<ConversationEntities>();
        serviceCollection.AddTransient<TagEntities>();
        serviceCollection.AddTransient<TextEntities>();
        serviceCollection.AddTransient<AiTaskEntities>();
        serviceCollection.AddTransient<ImageEntities>();
        serviceCollection.AddTransient<NotifyEntities>();
        serviceCollection.AddTransient<Services>();
        serviceCollection.AddTransient<AiTaskServices>();
        serviceCollection.AddTransient<AlarmControlPanelServices>();
        serviceCollection.AddTransient<AsusrouterServices>();
        serviceCollection.AddTransient<AutomationServices>();
        serviceCollection.AddTransient<BackupServices>();
        serviceCollection.AddTransient<BatteryNotesServices>();
        serviceCollection.AddTransient<BlueprintServices>();
        serviceCollection.AddTransient<ButtonServices>();
        serviceCollection.AddTransient<CalendarServices>();
        serviceCollection.AddTransient<CameraServices>();
        serviceCollection.AddTransient<CastServices>();
        serviceCollection.AddTransient<ChimeTtsServices>();
        serviceCollection.AddTransient<ClimateServices>();
        serviceCollection.AddTransient<CloudServices>();
        serviceCollection.AddTransient<ConversationServices>();
        serviceCollection.AddTransient<CounterServices>();
        serviceCollection.AddTransient<CoverServices>();
        serviceCollection.AddTransient<DeviceTrackerServices>();
        serviceCollection.AddTransient<EnergyzeroServices>();
        serviceCollection.AddTransient<EpexSpotServices>();
        serviceCollection.AddTransient<FanServices>();
        serviceCollection.AddTransient<FfmpegServices>();
        serviceCollection.AddTransient<FileServices>();
        serviceCollection.AddTransient<FrontendServices>();
        serviceCollection.AddTransient<GoogleAssistantServices>();
        serviceCollection.AddTransient<GoogleGenerativeAiConversationServices>();
        serviceCollection.AddTransient<GoogleHomeServices>();
        serviceCollection.AddTransient<GroupServices>();
        serviceCollection.AddTransient<HassioServices>();
        serviceCollection.AddTransient<HomeassistantServices>();
        serviceCollection.AddTransient<HueServices>();
        serviceCollection.AddTransient<HuesyncboxServices>();
        serviceCollection.AddTransient<ImageServices>();
        serviceCollection.AddTransient<InputBooleanServices>();
        serviceCollection.AddTransient<InputButtonServices>();
        serviceCollection.AddTransient<InputDatetimeServices>();
        serviceCollection.AddTransient<InputNumberServices>();
        serviceCollection.AddTransient<InputSelectServices>();
        serviceCollection.AddTransient<InputTextServices>();
        serviceCollection.AddTransient<LightServices>();
        serviceCollection.AddTransient<LocaltuyaServices>();
        serviceCollection.AddTransient<LockServices>();
        serviceCollection.AddTransient<LogbookServices>();
        serviceCollection.AddTransient<LoggerServices>();
        serviceCollection.AddTransient<MailAndPackagesServices>();
        serviceCollection.AddTransient<MediaPlayerServices>();
        serviceCollection.AddTransient<MotionBlindsServices>();
        serviceCollection.AddTransient<MqttServices>();
        serviceCollection.AddTransient<NotifyServices>();
        serviceCollection.AddTransient<NumberServices>();
        serviceCollection.AddTransient<OnedriveServices>();
        serviceCollection.AddTransient<OpenaiConversationServices>();
        serviceCollection.AddTransient<PersistentNotificationServices>();
        serviceCollection.AddTransient<PersonServices>();
        serviceCollection.AddTransient<PowercalcServices>();
        serviceCollection.AddTransient<RecorderServices>();
        serviceCollection.AddTransient<RemoteServices>();
        serviceCollection.AddTransient<RepairsServices>();
        serviceCollection.AddTransient<RetryServices>();
        serviceCollection.AddTransient<SceneServices>();
        serviceCollection.AddTransient<ScheduleServices>();
        serviceCollection.AddTransient<ScriptServices>();
        serviceCollection.AddTransient<SelectServices>();
        serviceCollection.AddTransient<SirenServices>();
        serviceCollection.AddTransient<SpookServices>();
        serviceCollection.AddTransient<SpotcastServices>();
        serviceCollection.AddTransient<SwitchServices>();
        serviceCollection.AddTransient<SynologyDsmServices>();
        serviceCollection.AddTransient<SystemLogServices>();
        serviceCollection.AddTransient<TeamtrackerServices>();
        serviceCollection.AddTransient<TemplateServices>();
        serviceCollection.AddTransient<TextServices>();
        serviceCollection.AddTransient<TimeServices>();
        serviceCollection.AddTransient<TimerServices>();
        serviceCollection.AddTransient<TodoServices>();
        serviceCollection.AddTransient<TtsServices>();
        serviceCollection.AddTransient<UpdateServices>();
        serviceCollection.AddTransient<UtilityMeterServices>();
        serviceCollection.AddTransient<VacuumServices>();
        serviceCollection.AddTransient<ValveServices>();
        serviceCollection.AddTransient<WakeOnLanServices>();
        serviceCollection.AddTransient<WatchmanServices>();
        serviceCollection.AddTransient<WaterHeaterServices>();
        serviceCollection.AddTransient<WeatherServices>();
        serviceCollection.AddTransient<ZhaServices>();
        serviceCollection.AddTransient<ZoneServices>();
        return serviceCollection;
    }
}

/// <summary>
/// Allows HassModel to instantiate the correct generated Entity types
/// </summary>
public class GeneratedEntityFactory : IEntityFactory
{
    public Entity CreateEntity(IHaContext haContext, string entityId)
    {
        var dot = entityId.IndexOf('.', StringComparison.Ordinal);
        var domain = dot < 0 ? entityId.AsSpan() : entityId[..dot];
        return domain switch
        {
            "ai_task" => new AiTaskEntity(haContext, entityId),
            "automation" => new AutomationEntity(haContext, entityId),
            "binary_sensor" => new BinarySensorEntity(haContext, entityId),
            "button" => new ButtonEntity(haContext, entityId),
            "calendar" => new CalendarEntity(haContext, entityId),
            "camera" => new CameraEntity(haContext, entityId),
            "conversation" => new ConversationEntity(haContext, entityId),
            "counter" => new CounterEntity(haContext, entityId),
            "cover" => new CoverEntity(haContext, entityId),
            "device_tracker" => new DeviceTrackerEntity(haContext, entityId),
            "event" => new EventEntity(haContext, entityId),
            "image" => new ImageEntity(haContext, entityId),
            "input_boolean" => new InputBooleanEntity(haContext, entityId),
            "input_button" => new InputButtonEntity(haContext, entityId),
            "input_datetime" => new InputDatetimeEntity(haContext, entityId),
            "input_number" => new InputNumberEntity(haContext, entityId),
            "input_select" => new InputSelectEntity(haContext, entityId),
            "input_text" => new InputTextEntity(haContext, entityId),
            "light" => new LightEntity(haContext, entityId),
            "media_player" => new MediaPlayerEntity(haContext, entityId),
            "notify" => new NotifyEntity(haContext, entityId),
            "number" => new NumberEntity(haContext, entityId),
            "persistent_notification" => new PersistentNotificationEntity(haContext, entityId),
            "person" => new PersonEntity(haContext, entityId),
            "remote" => new RemoteEntity(haContext, entityId),
            "scene" => new SceneEntity(haContext, entityId),
            "select" => new SelectEntity(haContext, entityId),
            "sensor" when IsNumeric() => new NumericSensorEntity(haContext, entityId),
            "sensor" => new SensorEntity(haContext, entityId),
            "stt" => new SttEntity(haContext, entityId),
            "sun" => new SunEntity(haContext, entityId),
            "switch" => new SwitchEntity(haContext, entityId),
            "tag" => new TagEntity(haContext, entityId),
            "text" => new TextEntity(haContext, entityId),
            "todo" => new TodoEntity(haContext, entityId),
            "tts" => new TtsEntity(haContext, entityId),
            "update" => new UpdateEntity(haContext, entityId),
            "vacuum" => new VacuumEntity(haContext, entityId),
            "weather" => new WeatherEntity(haContext, entityId),
            "zone" => new ZoneEntity(haContext, entityId),
            _ => new Entity(haContext, entityId)};
        bool IsNumeric() => haContext.GetState(entityId)?.AttributesJson?.TryGetProperty("unit_of_measurement", out _) ?? false;
    }
}

public interface IEntities
{
    AutomationEntities Automation { get; }

    BinarySensorEntities BinarySensor { get; }

    ButtonEntities Button { get; }

    CalendarEntities Calendar { get; }

    CameraEntities Camera { get; }

    DeviceTrackerEntities DeviceTracker { get; }

    InputBooleanEntities InputBoolean { get; }

    InputButtonEntities InputButton { get; }

    InputDatetimeEntities InputDatetime { get; }

    InputNumberEntities InputNumber { get; }

    InputSelectEntities InputSelect { get; }

    InputTextEntities InputText { get; }

    LightEntities Light { get; }

    MediaPlayerEntities MediaPlayer { get; }

    NumberEntities Number { get; }

    PersistentNotificationEntities PersistentNotification { get; }

    PersonEntities Person { get; }

    SensorEntities Sensor { get; }

    SunEntities Sun { get; }

    SwitchEntities Switch { get; }

    UpdateEntities Update { get; }

    WeatherEntities Weather { get; }

    ZoneEntities Zone { get; }

    SceneEntities Scene { get; }

    CoverEntities Cover { get; }

    SelectEntities Select { get; }

    VacuumEntities Vacuum { get; }

    RemoteEntities Remote { get; }

    TtsEntities Tts { get; }

    EventEntities Event { get; }

    CounterEntities Counter { get; }

    TodoEntities Todo { get; }

    SttEntities Stt { get; }

    ConversationEntities Conversation { get; }

    TagEntities Tag { get; }

    TextEntities Text { get; }

    AiTaskEntities AiTask { get; }

    ImageEntities Image { get; }

    NotifyEntities Notify { get; }
}

public partial class Entities : IEntities
{
    private readonly IHaContext _haContext;
    public Entities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    public AutomationEntities Automation => new(_haContext);
    public BinarySensorEntities BinarySensor => new(_haContext);
    public ButtonEntities Button => new(_haContext);
    public CalendarEntities Calendar => new(_haContext);
    public CameraEntities Camera => new(_haContext);
    public DeviceTrackerEntities DeviceTracker => new(_haContext);
    public InputBooleanEntities InputBoolean => new(_haContext);
    public InputButtonEntities InputButton => new(_haContext);
    public InputDatetimeEntities InputDatetime => new(_haContext);
    public InputNumberEntities InputNumber => new(_haContext);
    public InputSelectEntities InputSelect => new(_haContext);
    public InputTextEntities InputText => new(_haContext);
    public LightEntities Light => new(_haContext);
    public MediaPlayerEntities MediaPlayer => new(_haContext);
    public NumberEntities Number => new(_haContext);
    public PersistentNotificationEntities PersistentNotification => new(_haContext);
    public PersonEntities Person => new(_haContext);
    public SensorEntities Sensor => new(_haContext);
    public SunEntities Sun => new(_haContext);
    public SwitchEntities Switch => new(_haContext);
    public UpdateEntities Update => new(_haContext);
    public WeatherEntities Weather => new(_haContext);
    public ZoneEntities Zone => new(_haContext);
    public SceneEntities Scene => new(_haContext);
    public CoverEntities Cover => new(_haContext);
    public SelectEntities Select => new(_haContext);
    public VacuumEntities Vacuum => new(_haContext);
    public RemoteEntities Remote => new(_haContext);
    public TtsEntities Tts => new(_haContext);
    public EventEntities Event => new(_haContext);
    public CounterEntities Counter => new(_haContext);
    public TodoEntities Todo => new(_haContext);
    public SttEntities Stt => new(_haContext);
    public ConversationEntities Conversation => new(_haContext);
    public TagEntities Tag => new(_haContext);
    public TextEntities Text => new(_haContext);
    public AiTaskEntities AiTask => new(_haContext);
    public ImageEntities Image => new(_haContext);
    public NotifyEntities Notify => new(_haContext);
}

public partial class AutomationEntities
{
    private readonly IHaContext _haContext;
    public AutomationEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all automation entities currently registered (at runtime) in Home Assistant as AutomationEntity</summary>
    public IEnumerable<AutomationEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("automation.")).Select(e => new AutomationEntity(e));
    ///<summary>Away</summary>
    public AutomationEntity Away => new(_haContext, "automation.away");
    ///<summary>Open door</summary>
    public AutomationEntity OpenDoor => new(_haContext, "automation.open_door");
    ///<summary>Sleeping</summary>
    public AutomationEntity Sleeping => new(_haContext, "automation.sleeping");
    ///<summary>Start PC</summary>
    public AutomationEntity StartPc => new(_haContext, "automation.start_pc");
    ///<summary>Update UV</summary>
    public AutomationEntity UpdateUv => new(_haContext, "automation.update_uv");
}

public partial class BinarySensorEntities
{
    private readonly IHaContext _haContext;
    public BinarySensorEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all binary_sensor entities currently registered (at runtime) in Home Assistant as BinarySensorEntity</summary>
    public IEnumerable<BinarySensorEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("binary_sensor.")).Select(e => new BinarySensorEntity(e));
    ///<summary>AiMesh RT-AX88U (04:D9:F5:FB:BA:18)</summary>
    public BinarySensorEntity AimeshRtAx88u04D9F5FbBa18 => new(_haContext, "binary_sensor.aimesh_rt_ax88u_04_d9_f5_fb_ba_18");
    ///<summary>Amazon Image Updated</summary>
    public BinarySensorEntity AmazonImageUpdated => new(_haContext, "binary_sensor.amazon_image_updated");
    ///<summary>Badkamer Lage batterij</summary>
    public BinarySensorEntity BadkamerBatteryLow => new(_haContext, "binary_sensor.badkamer_battery_low");
    ///<summary>Badkamer Lage batterij</summary>
    public BinarySensorEntity BadkamerBatteryLow2 => new(_haContext, "binary_sensor.badkamer_battery_low_2");
    ///<summary>Badkamer Motion</summary>
    public BinarySensorEntity BadkamerMotion => new(_haContext, "binary_sensor.badkamer_motion");
    ///<summary>BadkamerMotion Lage batterij</summary>
    public BinarySensorEntity BadkamermotionBatteryLow => new(_haContext, "binary_sensor.badkamermotion_battery_low");
    ///<summary>Berging Lage batterij</summary>
    public BinarySensorEntity BergingBatteryLow => new(_haContext, "binary_sensor.berging_battery_low");
    ///<summary>Berging Beweging</summary>
    public BinarySensorEntity BergingBeweging => new(_haContext, "binary_sensor.berging_beweging");
    ///<summary>Berging Beweging</summary>
    public BinarySensorEntity BergingMotion => new(_haContext, "binary_sensor.berging_motion");
    ///<summary>Bot 29FF Lage batterij</summary>
    public BinarySensorEntity Bot29ffBatteryLow => new(_haContext, "binary_sensor.bot_29ff_battery_low");
    ///<summary>Bot A801 Lage batterij</summary>
    public BinarySensorEntity BotA801BatteryLow => new(_haContext, "binary_sensor.bot_a801_battery_low");
    ///<summary>Disco Huis</summary>
    public BinarySensorEntity DiscoHuisEntertainmentConfiguration => new(_haContext, "binary_sensor.disco_huis_entertainment_configuration");
    ///<summary>Gang Lage batterij</summary>
    public BinarySensorEntity GangBatteryLow => new(_haContext, "binary_sensor.gang_battery_low");
    ///<summary>Gang Lage batterij</summary>
    public BinarySensorEntity GangBatteryLow2 => new(_haContext, "binary_sensor.gang_battery_low_2");
    ///<summary>Gang Beweging</summary>
    public BinarySensorEntity GangBeweging => new(_haContext, "binary_sensor.gang_beweging");
    ///<summary>Gang Beweging</summary>
    public BinarySensorEntity GangMotion => new(_haContext, "binary_sensor.gang_motion");
    ///<summary>Hal Lage batterij</summary>
    public BinarySensorEntity HalBatteryLow => new(_haContext, "binary_sensor.hal_battery_low");
    ///<summary>HomeAssistant</summary>
    public BinarySensorEntity Homeassistant => new(_haContext, "binary_sensor.homeassistant");
    ///<summary>Jaap Lage batterij</summary>
    public BinarySensorEntity JaapBatteryPlusLow => new(_haContext, "binary_sensor.jaap_battery_plus_low");
    ///<summary>Jaap Bin full</summary>
    public BinarySensorEntity JaapBinFull => new(_haContext, "binary_sensor.jaap_bin_full");
    ///<summary>KERST</summary>
    public BinarySensorEntity Kerst => new(_haContext, "binary_sensor.kerst");
    ///<summary>Keuken afstandbediening Lage batterij</summary>
    public BinarySensorEntity KeukenAfstandbedieningBatteryLow => new(_haContext, "binary_sensor.keuken_afstandbediening_battery_low");
    ///<summary>msiEntertainmentGroup</summary>
    public BinarySensorEntity Msientertainmentgroup => new(_haContext, "binary_sensor.msientertainmentgroup");
    ///<summary>Muziekruimte</summary>
    public BinarySensorEntity MuziekruimteEntertainmentConfiguration => new(_haContext, "binary_sensor.muziekruimte_entertainment_configuration");
    ///<summary>My First Check</summary>
    public BinarySensorEntity MyFirstCheck => new(_haContext, "binary_sensor.my_first_check");
    ///<summary>Only TV</summary>
    public BinarySensorEntity OnlyTvEntertainmentConfiguration => new(_haContext, "binary_sensor.only_tv_entertainment_configuration");
    ///<summary>ping</summary>
    public BinarySensorEntity Ping => new(_haContext, "binary_sensor.ping");
    ///<summary>OpenUV Bescherming venster</summary>
    public BinarySensorEntity ProtectionWindow => new(_haContext, "binary_sensor.protection_window");
    ///<summary>Remote UI</summary>
    public BinarySensorEntity RemoteUi => new(_haContext, "binary_sensor.remote_ui");
    ///<summary>RollerBlind 0003 Lage batterij</summary>
    public BinarySensorEntity Rollerblind0003BatteryPlusLow => new(_haContext, "binary_sensor.rollerblind_0003_battery_plus_low");
    ///<summary>RPi Power status</summary>
    public BinarySensorEntity RpiPowerStatus => new(_haContext, "binary_sensor.rpi_power_status");
    ///<summary>RT-AX88U Dual WAN</summary>
    public BinarySensorEntity RtAx88uDualWan => new(_haContext, "binary_sensor.rt_ax88u_dual_wan");
    ///<summary>RT-AX88U Internet</summary>
    public BinarySensorEntity RtAx88uInternet => new(_haContext, "binary_sensor.rt_ax88u_internet");
    ///<summary>RT-AX88U Port Status (LAN)</summary>
    public BinarySensorEntity RtAx88uPortStatusLan => new(_haContext, "binary_sensor.rt_ax88u_port_status_lan");
    ///<summary>RT-AX88U Port Status (USB)</summary>
    public BinarySensorEntity RtAx88uPortStatusUsb => new(_haContext, "binary_sensor.rt_ax88u_port_status_usb");
    ///<summary>RT-AX88U Port Status (WAN)</summary>
    public BinarySensorEntity RtAx88uPortStatusWan => new(_haContext, "binary_sensor.rt_ax88u_port_status_wan");
    ///<summary>RT-AX88U WAN</summary>
    public BinarySensorEntity RtAx88uWan => new(_haContext, "binary_sensor.rt_ax88u_wan");
    ///<summary>RT-AX88U WAN Aggregation</summary>
    public BinarySensorEntity RtAx88uWanAggregation => new(_haContext, "binary_sensor.rt_ax88u_wan_aggregation");
    ///<summary>RT-AX88U WAN (Secondary)</summary>
    public BinarySensorEntity RtAx88uWanSecondary => new(_haContext, "binary_sensor.rt_ax88u_wan_secondary");
    ///<summary>Slaapkamer Lage batterij</summary>
    public BinarySensorEntity SlaapkamerBatteryLow => new(_haContext, "binary_sensor.slaapkamer_battery_low");
    ///<summary>Tablet Vincent Is charging</summary>
    public BinarySensorEntity SmT860IsCharging => new(_haContext, "binary_sensor.sm_t860_is_charging");
    ///<summary>Tablet Vincent Wi-Fi state</summary>
    public BinarySensorEntity SmT860WifiState => new(_haContext, "binary_sensor.sm_t860_wifi_state");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Default Account</summary>
    public BinarySensorEntity Spotcast1111083559IsDefaultAccount => new(_haContext, "binary_sensor.spotcast_1111083559_is_default_account");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Spotify Profile Malfunction</summary>
    public BinarySensorEntity Spotcast1111083559SpotifyProfileMalfunction => new(_haContext, "binary_sensor.spotcast_1111083559_spotify_profile_malfunction");
    ///<summary>Switch badkamer spiegel Lage batterij</summary>
    public BinarySensorEntity SwitchBadkamerSpiegelBatteryLow => new(_haContext, "binary_sensor.switch_badkamer_spiegel_battery_low");
    ///<summary>Switch Slaapkamer Lage batterij</summary>
    public BinarySensorEntity SwitchSlaapkamerBatteryLow => new(_haContext, "binary_sensor.switch_slaapkamer_battery_low");
    ///<summary>TV area</summary>
    public BinarySensorEntity TvAreaEntertainmentConfiguration => new(_haContext, "binary_sensor.tv_area_entertainment_configuration");
    ///<summary>USPS Image Updated</summary>
    public BinarySensorEntity UspsImageUpdated => new(_haContext, "binary_sensor.usps_image_updated");
    ///<summary>VINCENT-NAS Beveiligingsstatus</summary>
    public BinarySensorEntity VincentNasBeveiligingsstatus => new(_haContext, "binary_sensor.vincent_nas_beveiligingsstatus");
    ///<summary>VINCENT-NAS (Schijf 1) Onder de minimale resterende levensduur</summary>
    public BinarySensorEntity VincentNasSchijf1BelowMinRemainingLife => new(_haContext, "binary_sensor.vincent_nas_schijf_1_below_min_remaining_life");
    ///<summary>VINCENT-NAS (Schijf 1) Maximum slechte sectoren overschreden</summary>
    public BinarySensorEntity VincentNasSchijf1ExceededMaxBadSectors => new(_haContext, "binary_sensor.vincent_nas_schijf_1_exceeded_max_bad_sectors");
    ///<summary>Vincent Phone Android Auto</summary>
    public BinarySensorEntity VincentPhoneAndroidAuto => new(_haContext, "binary_sensor.vincent_phone_android_auto");
    ///<summary>Vincent Phone Is charging</summary>
    public BinarySensorEntity VincentPhoneIsCharging => new(_haContext, "binary_sensor.vincent_phone_is_charging");
    ///<summary>vinnie1234 Subscribed to PlayStation Plus</summary>
    public BinarySensorEntity Vinnie1234SubscribedToPlaystationPlus => new(_haContext, "binary_sensor.vinnie1234_subscribed_to_playstation_plus");
    ///<summary>vinnie12349491</summary>
    public BinarySensorEntity Vinnie12349491 => new(_haContext, "binary_sensor.vinnie12349491");
    ///<summary>Voordeur Ding</summary>
    public BinarySensorEntity VoordeurDing => new(_haContext, "binary_sensor.voordeur_ding");
    ///<summary>Voordeur Beweging</summary>
    public BinarySensorEntity VoordeurMotion => new(_haContext, "binary_sensor.voordeur_motion");
    ///<summary>Wasmachine Afstandsbediening</summary>
    public BinarySensorEntity WasmachineAfstandsbediening => new(_haContext, "binary_sensor.wasmachine_afstandsbediening");
    ///<summary>Wasmachine Child lock</summary>
    public BinarySensorEntity WasmachineChildLock => new(_haContext, "binary_sensor.wasmachine_child_lock");
    ///<summary>Wasmachine Vermogen</summary>
    public BinarySensorEntity WasmachineVermogen => new(_haContext, "binary_sensor.wasmachine_vermogen");
    ///<summary>Water Sensor Douche</summary>
    public BinarySensorEntity WaterSensorDouche => new(_haContext, "binary_sensor.water_sensor_douche");
    ///<summary>Woonkamer Lage batterij</summary>
    public BinarySensorEntity WoonkamerBatteryLow => new(_haContext, "binary_sensor.woonkamer_battery_low");
    ///<summary>Woonkamer Lage batterij</summary>
    public BinarySensorEntity WoonkamerBatteryLow2 => new(_haContext, "binary_sensor.woonkamer_battery_low_2");
}

public partial class ButtonEntities
{
    private readonly IHaContext _haContext;
    public ButtonEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all button entities currently registered (at runtime) in Home Assistant as ButtonEntity</summary>
    public IEnumerable<ButtonEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("button.")).Select(e => new ButtonEntity(e));
    ///<summary>Badkamer Batterij vervangen</summary>
    public ButtonEntity BadkamerBatteryReplaced => new(_haContext, "button.badkamer_battery_replaced");
    ///<summary>Badkamer Batterij vervangen</summary>
    public ButtonEntity BadkamerBatteryReplaced2 => new(_haContext, "button.badkamer_battery_replaced_2");
    ///<summary>BadkamerMotion Batterij vervangen</summary>
    public ButtonEntity BadkamerBatteryReplaced3 => new(_haContext, "button.badkamer_battery_replaced_3");
    ///<summary>Berging Batterij vervangen</summary>
    public ButtonEntity BergingBatteryReplaced => new(_haContext, "button.berging_battery_replaced");
    ///<summary>Bot 29FF Batterij vervangen</summary>
    public ButtonEntity Bot29ffBatteryReplaced => new(_haContext, "button.bot_29ff_battery_replaced");
    ///<summary>Bot A801 Batterij vervangen</summary>
    public ButtonEntity BotA801BatteryReplaced => new(_haContext, "button.bot_a801_battery_replaced");
    ///<summary>Clear Additional tracked</summary>
    public ButtonEntity ClearAdditionalTracked => new(_haContext, "button.clear_additional_tracked");
    ///<summary>EnergySocket (5c2faf02a546) Identificeren</summary>
    public ButtonEntity Energysocket5c2faf02a546Identify => new(_haContext, "button.energysocket_5c2faf02a546_identify");
    ///<summary>EnergySocket (5c2faf0c7564) Identificeren</summary>
    public ButtonEntity Energysocket5c2faf0c7564Identify => new(_haContext, "button.energysocket_5c2faf0c7564_identify");
    ///<summary>EnergySocket (5c2faf0d8364) Identificeren</summary>
    public ButtonEntity Energysocket5c2faf0d8364Identify => new(_haContext, "button.energysocket_5c2faf0d8364_identify");
    ///<summary>Gang Batterij vervangen</summary>
    public ButtonEntity GangBatteryReplaced => new(_haContext, "button.gang_battery_replaced");
    ///<summary>Gang Batterij vervangen</summary>
    public ButtonEntity GangBatteryReplaced2 => new(_haContext, "button.gang_battery_replaced_2");
    ///<summary>Hal Batterij vervangen</summary>
    public ButtonEntity HalBatteryReplaced => new(_haContext, "button.hal_battery_replaced");
    ///<summary>Home Assistant Herladen</summary>
    public ButtonEntity HomeassistantReload => new(_haContext, "button.homeassistant_reload");
    ///<summary>Home Assistant Herstarten</summary>
    public ButtonEntity HomeassistantRestart => new(_haContext, "button.homeassistant_restart");
    ///<summary>Repairs Negeer alles</summary>
    public ButtonEntity IgnoreAllIssues => new(_haContext, "button.ignore_all_issues");
    ///<summary>Jaap Batterij vervangen</summary>
    public ButtonEntity JaapBatteryReplaced => new(_haContext, "button.jaap_battery_replaced");
    ///<summary>Keuken afstandbediening Batterij vervangen</summary>
    public ButtonEntity KeukenAfstandbedieningBatteryReplaced => new(_haContext, "button.keuken_afstandbediening_battery_replaced");
    ///<summary>P1 meter (3c39e72a64e8) Identificeren</summary>
    public ButtonEntity P1Meter3c39e72a64e8Identify => new(_haContext, "button.p1_meter_3c39e72a64e8_identify");
    ///<summary>P1 meter Identificeren</summary>
    public ButtonEntity P1MeterIdentificeren => new(_haContext, "button.p1_meter_identificeren");
    ///<summary>RollerBlind 0003 Batterij vervangen</summary>
    public ButtonEntity Rollerblind0003BatteryReplaced => new(_haContext, "button.rollerblind_0003_battery_replaced");
    ///<summary>RT-AX88U Check for updates</summary>
    public ButtonEntity RtAx88uCheckForUpdates => new(_haContext, "button.rt_ax88u_check_for_updates");
    ///<summary>Herstarten</summary>
    public ButtonEntity RtAx88uReboot => new(_haContext, "button.rt_ax88u_reboot");
    ///<summary>RT-AX88U Restart HTTP daemon</summary>
    public ButtonEntity RtAx88uRestartHttpDaemon => new(_haContext, "button.rt_ax88u_restart_http_daemon");
    ///<summary>RT-AX88U Restart wired</summary>
    public ButtonEntity RtAx88uRestartWired => new(_haContext, "button.rt_ax88u_restart_wired");
    ///<summary>RT-AX88U Restart wireless</summary>
    public ButtonEntity RtAx88uRestartWireless => new(_haContext, "button.rt_ax88u_restart_wireless");
    ///<summary>Slaapkamer Batterij vervangen</summary>
    public ButtonEntity SlaapkamerBatteryReplaced => new(_haContext, "button.slaapkamer_battery_replaced");
    ///<summary>Switch badkamer spiegel Batterij vervangen</summary>
    public ButtonEntity SwitchBadkamerSpiegelBatteryReplaced => new(_haContext, "button.switch_badkamer_spiegel_battery_replaced");
    ///<summary>Switch Slaapkamer Batterij vervangen</summary>
    public ButtonEntity SwitchSlaapkamerBatteryReplaced => new(_haContext, "button.switch_slaapkamer_battery_replaced");
    ///<summary>Google Assistant Apparaten synchroniseren</summary>
    public ButtonEntity SynchronizeDevices => new(_haContext, "button.synchronize_devices");
    ///<summary>Repairs Alles herstellen</summary>
    public ButtonEntity UnignoreAllIssues => new(_haContext, "button.unignore_all_issues");
    ///<summary>VINCENT-NAS Reboot</summary>
    public ButtonEntity VincentNasReboot => new(_haContext, "button.vincent_nas_reboot");
    ///<summary>VINCENT-NAS Shutdown</summary>
    public ButtonEntity VincentNasShutdown => new(_haContext, "button.vincent_nas_shutdown");
    ///<summary>PC Afsluiten</summary>
    public ButtonEntity VincentPcAfsluiten => new(_haContext, "button.vincent_pc_afsluiten");
    ///<summary>Vincent-PC Vincent-PC_vergrendel</summary>
    public ButtonEntity VincentPcVergrendel => new(_haContext, "button.vincent_pc_vergrendel");
    ///<summary>Water Sensor Douche Identificeren</summary>
    public ButtonEntity WaterSensorDoucheIdentificeren => new(_haContext, "button.water_sensor_douche_identificeren");
    ///<summary>Watermeter (5c2faf0e9b0a) Batterij vervangen</summary>
    public ButtonEntity Watermeter5c2faf0e9b0aBatteryReplaced => new(_haContext, "button.watermeter_5c2faf0e9b0a_battery_replaced");
    ///<summary>Watermeter (5c2faf0e9b0a) Identificeren</summary>
    public ButtonEntity Watermeter5c2faf0e9b0aIdentificeren => new(_haContext, "button.watermeter_5c2faf0e9b0a_identificeren");
    ///<summary>Woonkamer Batterij vervangen</summary>
    public ButtonEntity WoonkamerBatteryReplaced => new(_haContext, "button.woonkamer_battery_replaced");
    ///<summary>Woonkamer Batterij vervangen</summary>
    public ButtonEntity WoonkamerBatteryReplaced2 => new(_haContext, "button.woonkamer_battery_replaced_2");
}

public partial class CalendarEntities
{
    private readonly IHaContext _haContext;
    public CalendarEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all calendar entities currently registered (at runtime) in Home Assistant as CalendarEntity</summary>
    public IEnumerable<CalendarEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("calendar.")).Select(e => new CalendarEntity(e));
    ///<summary>Verjaardagen</summary>
    public CalendarEntity Birthdays => new(_haContext, "calendar.birthdays");
    ///<summary>Feestdagen in nederland</summary>
    public CalendarEntity FeestdagenInNederland => new(_haContext, "calendar.feestdagen_in_nederland");
    ///<summary>Gezin</summary>
    public CalendarEntity Gezin => new(_haContext, "calendar.gezin");
    ///<summary>Vincentmaarschalkerweerd@gmail.com</summary>
    public CalendarEntity VincentmaarschalkerweerdGmailCom => new(_haContext, "calendar.vincentmaarschalkerweerd_gmail_com");
}

public partial class CameraEntities
{
    private readonly IHaContext _haContext;
    public CameraEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all camera entities currently registered (at runtime) in Home Assistant as CameraEntity</summary>
    public IEnumerable<CameraEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("camera.")).Select(e => new CameraEntity(e));
    ///<summary>Buienradar</summary>
    public CameraEntity Buienradar => new(_haContext, "camera.buienradar");
    ///<summary>Mail Amazon Delivery Camera</summary>
    public CameraEntity MailAmazonDeliveryCamera => new(_haContext, "camera.mail_amazon_delivery_camera");
    ///<summary>Mail USPS Camera</summary>
    public CameraEntity MailUspsCamera => new(_haContext, "camera.mail_usps_camera");
    ///<summary>Voordeur Laatste opname</summary>
    public CameraEntity Voordeur => new(_haContext, "camera.voordeur");
    ///<summary>Voordeur Live weergave</summary>
    public CameraEntity VoordeurLiveWeergave => new(_haContext, "camera.voordeur_live_weergave");
}

public partial class DeviceTrackerEntities
{
    private readonly IHaContext _haContext;
    public DeviceTrackerEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all device_tracker entities currently registered (at runtime) in Home Assistant as DeviceTrackerEntity</summary>
    public IEnumerable<DeviceTrackerEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("device_tracker.")).Select(e => new DeviceTrackerEntity(e));
    ///<summary>06:05:2F:C0:11:39</summary>
    public DeviceTrackerEntity _06052fC01139 => new(_haContext, "device_tracker.06_05_2f_c0_11_39");
    ///<summary>06:05:E2:53:02:A7</summary>
    public DeviceTrackerEntity _0605E25302A7 => new(_haContext, "device_tracker.06_05_e2_53_02_a7");
    ///<summary>Unknown device</summary>
    public DeviceTrackerEntity _0a0750F423A9 => new(_haContext, "device_tracker.0a_07_50_f4_23_a9");
    ///<summary>MSFT 5 0</summary>
    public DeviceTrackerEntity _0c5415F5A00a => new(_haContext, "device_tracker.0c_54_15_f5_a0_0a");
    ///<summary>Tuya Smart Inc.</summary>
    public DeviceTrackerEntity _1c90Ff3cD317 => new(_haContext, "device_tracker.1c_90_ff_3c_d3_17");
    ///<summary>Tuya Smart Inc </summary>
    public DeviceTrackerEntity _1c90Ff7a6eD1 => new(_haContext, "device_tracker.1c_90_ff_7a_6e_d1");
    ///<summary>Tuya Smart Inc.</summary>
    public DeviceTrackerEntity _1c90FfBeD1F3 => new(_haContext, "device_tracker.1c_90_ff_be_d1_f3");
    ///<summary>Google-Home</summary>
    public DeviceTrackerEntity _20DfB95f4182 => new(_haContext, "device_tracker.20_df_b9_5f_41_82");
    ///<summary>Google-Home</summary>
    public DeviceTrackerEntity _20DfB96d7039 => new(_haContext, "device_tracker.20_df_b9_6d_70_39");
    ///<summary>22:3E:20:5C:05:DA</summary>
    public DeviceTrackerEntity _223e205c05Da => new(_haContext, "device_tracker.22_3e_20_5c_05_da");
    ///<summary>Unknown device</summary>
    public DeviceTrackerEntity _2246973315Eb => new(_haContext, "device_tracker.22_46_97_33_15_eb");
    ///<summary>Unknown device</summary>
    public DeviceTrackerEntity _226dFfE6C01a => new(_haContext, "device_tracker.22_6d_ff_e6_c0_1a");
    ///<summary>26:E6:A0:D6:0A:A5</summary>
    public DeviceTrackerEntity _26E6A0D60aA5 => new(_haContext, "device_tracker.26_e6_a0_d6_0a_a5");
    ///<summary>MSFT 5.0</summary>
    public DeviceTrackerEntity _309c2390679e => new(_haContext, "device_tracker.30_9c_23_90_67_9e");
    ///<summary>HW-energysocket-02A546</summary>
    public DeviceTrackerEntity _5c2fAf02A546 => new(_haContext, "device_tracker.5c_2f_af_02_a5_46");
    ///<summary>HW-energysocket-0C7564</summary>
    public DeviceTrackerEntity _5c2fAf0c7564 => new(_haContext, "device_tracker.5c_2f_af_0c_75_64");
    ///<summary>HW-energysocket-0D8364</summary>
    public DeviceTrackerEntity _5c2fAf0d8364 => new(_haContext, "device_tracker.5c_2f_af_0d_83_64");
    ///<summary>HW-watermeter-0E9B0A</summary>
    public DeviceTrackerEntity _5c2fAf0e9b0a => new(_haContext, "device_tracker.5c_2f_af_0e_9b_0a");
    ///<summary>Nintendo Co.,Ltd</summary>
    public DeviceTrackerEntity _5c521e0d229b => new(_haContext, "device_tracker.5c_52_1e_0d_22_9b");
    ///<summary>Unknown device</summary>
    public DeviceTrackerEntity _663bDaB7BbC1 => new(_haContext, "device_tracker.66_3b_da_b7_bb_c1");
    ///<summary>8A:E8:F3:A1:0D:D3</summary>
    public DeviceTrackerEntity _8aE8F3A10dD3 => new(_haContext, "device_tracker.8a_e8_f3_a1_0d_d3");
    ///<summary>9E:19:ED:9C:01:04</summary>
    public DeviceTrackerEntity _9e19Ed9c0104 => new(_haContext, "device_tracker.9e_19_ed_9c_01_04");
    ///<summary>9E:CD:3E:06:30:79</summary>
    public DeviceTrackerEntity _9eCd3e063079 => new(_haContext, "device_tracker.9e_cd_3e_06_30_79");
    ///<summary>Unknown device</summary>
    public DeviceTrackerEntity A24d5eA38925 => new(_haContext, "device_tracker.a2_4d_5e_a3_89_25");
    ///<summary>android-dhcp-13</summary>
    public DeviceTrackerEntity A52sVanEddy => new(_haContext, "device_tracker.a52s_van_eddy");
    ///<summary>Raspberry Pi Foundation</summary>
    public DeviceTrackerEntity B827Eb109741 => new(_haContext, "device_tracker.b8_27_eb_10_97_41");
    ///<summary>Unknown device</summary>
    public DeviceTrackerEntity C24fAa206031 => new(_haContext, "device_tracker.c2_4f_aa_20_60_31");
    ///<summary>Zedar (Voer kat)</summary>
    public DeviceTrackerEntity Cc8cBf1b7482 => new(_haContext, "device_tracker.cc_8c_bf_1b_74_82");
    ///<summary>GW-D040EF419EEB</summary>
    public DeviceTrackerEntity D040Ef419eEb => new(_haContext, "device_tracker.d0_40_ef_41_9e_eb");
    ///<summary>Google-Nest-Mini</summary>
    public DeviceTrackerEntity D4F5472f5b5a => new(_haContext, "device_tracker.d4_f5_47_2f_5b_5a");
    ///<summary>DA:0B:E9:B8:03:A7</summary>
    public DeviceTrackerEntity Da0bE9B803A7 => new(_haContext, "device_tracker.da_0b_e9_b8_03_a7");
    ///<summary>MSFT 5.0</summary>
    public DeviceTrackerEntity DesktopNro693n => new(_haContext, "device_tracker.desktop_nro693n");
    ///<summary>Intel Corporate</summary>
    public DeviceTrackerEntity DesktopPlqb3vh => new(_haContext, "device_tracker.desktop_plqb3vh");
    ///<summary>Apple</summary>
    public DeviceTrackerEntity DewinsMbp => new(_haContext, "device_tracker.dewins_mbp");
    ///<summary>Unknown device</summary>
    public DeviceTrackerEntity E233B14d5eE4 => new(_haContext, "device_tracker.e2_33_b1_4d_5e_e4");
    ///<summary>S20-FE-van-Timo</summary>
    public DeviceTrackerEntity E2E16a079342 => new(_haContext, "device_tracker.e2_e1_6a_07_93_42");
    ///<summary>S22-Ultra-van-Vincent</summary>
    public DeviceTrackerEntity Ea0b97FaE591 => new(_haContext, "device_tracker.ea_0b_97_fa_e5_91");
    ///<summary>Hue Hub</summary>
    public DeviceTrackerEntity Ecb5fa88bf6f2 => new(_haContext, "device_tracker.ecb5fa88bf6f_2");
    ///<summary>Philips</summary>
    public DeviceTrackerEntity Espressif => new(_haContext, "device_tracker.espressif");
    ///<summary>Switchbot</summary>
    public DeviceTrackerEntity EspressifInc => new(_haContext, "device_tracker.espressif_inc");
    ///<summary>Google-Home</summary>
    public DeviceTrackerEntity F4F5D8D07614 => new(_haContext, "device_tracker.f4_f5_d8_d0_76_14");
    ///<summary>FA:9C:35:20:01:BD</summary>
    public DeviceTrackerEntity Fa9c352001Bd => new(_haContext, "device_tracker.fa_9c_35_20_01_bd");
    ///<summary>FC:67:1F:D2:2D:67</summary>
    public DeviceTrackerEntity Fc671fD22d67 => new(_haContext, "device_tracker.fc_67_1f_d2_2d_67");
    ///<summary>android-dhcp-12</summary>
    public DeviceTrackerEntity GalaxyTabS62 => new(_haContext, "device_tracker.galaxy_tab_s6_2");
    ///<summary>Google-Home-Mini</summary>
    public DeviceTrackerEntity GoogleHomeMini2 => new(_haContext, "device_tracker.google_home_mini_2");
    ///<summary>Google</summary>
    public DeviceTrackerEntity GoogleNestHub2 => new(_haContext, "device_tracker.google_nest_hub_2");
    ///<summary>Syncbox</summary>
    public DeviceTrackerEntity HuesyncboxC4299607ba622 => new(_haContext, "device_tracker.huesyncbox_c4299607ba62_2");
    ///<summary>HW-p1meter-10601A</summary>
    public DeviceTrackerEntity HwP1meter10601a => new(_haContext, "device_tracker.hw_p1meter_10601a");
    ///<summary>Energiemeter</summary>
    public DeviceTrackerEntity HwP1meter2a64e82 => new(_haContext, "device_tracker.hw_p1meter_2a64e8_2");
    ///<summary>iRobot Stofzuiger</summary>
    public DeviceTrackerEntity IrobotStofzuiger => new(_haContext, "device_tracker.irobot_stofzuiger");
    ///<summary>MBP-van-Vincent</summary>
    public DeviceTrackerEntity MbpVanVincent2 => new(_haContext, "device_tracker.mbp_van_vincent_2");
    ///<summary>ping</summary>
    public DeviceTrackerEntity Ping => new(_haContext, "device_tracker.ping");
    ///<summary>Home Assistant (PI)</summary>
    public DeviceTrackerEntity RaspberryPiTradingLtd => new(_haContext, "device_tracker.raspberry_pi_trading_ltd");
    ///<summary>Bureau internet kastje</summary>
    public DeviceTrackerEntity RealtekSemiconductorCorp => new(_haContext, "device_tracker.realtek_semiconductor_corp");
    ///<summary>Rolluik</summary>
    public DeviceTrackerEntity Rolluik => new(_haContext, "device_tracker.rolluik");
    ///<summary>android-dhcp-13</summary>
    public DeviceTrackerEntity S20FeVanJannette => new(_haContext, "device_tracker.s20_fe_van_jannette");
    ///<summary>Telefoon S22</summary>
    public DeviceTrackerEntity S22UltraVanVincent2 => new(_haContext, "device_tracker.s22_ultra_van_vincent_2");
    ///<summary>TV</summary>
    public DeviceTrackerEntity Samsung3 => new(_haContext, "device_tracker.samsung_3");
    ///<summary>SM-G780G</summary>
    public DeviceTrackerEntity SmG780g => new(_haContext, "device_tracker.sm_g780g");
    ///<summary>Tablet Vincent</summary>
    public DeviceTrackerEntity SmT860 => new(_haContext, "device_tracker.sm_t860");
    ///<summary>PS5</summary>
    public DeviceTrackerEntity Sony => new(_haContext, "device_tracker.sony");
    ///<summary>Soundbar</summary>
    public DeviceTrackerEntity Soundbar => new(_haContext, "device_tracker.soundbar");
    ///<summary>Vincent</summary>
    public DeviceTrackerEntity Vincent => new(_haContext, "device_tracker.vincent");
    ///<summary>Vincent Mobiel</summary>
    public DeviceTrackerEntity VincentMobiel => new(_haContext, "device_tracker.vincent_mobiel");
    ///<summary>VINCENT-NAS</summary>
    public DeviceTrackerEntity VincentNas => new(_haContext, "device_tracker.vincent_nas");
    ///<summary>Wasmachine</summary>
    public DeviceTrackerEntity Wasmachine => new(_haContext, "device_tracker.wasmachine");
    public DeviceTrackerEntity Wsbc002022010sD867 => new(_haContext, "device_tracker.wsbc002022010s_d867");
    ///<summary>XBOX</summary>
    public DeviceTrackerEntity Xbox2 => new(_haContext, "device_tracker.xbox_2");
}

public partial class InputBooleanEntities
{
    private readonly IHaContext _haContext;
    public InputBooleanEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all input_boolean entities currently registered (at runtime) in Home Assistant as InputBooleanEntity</summary>
    public IEnumerable<InputBooleanEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("input_boolean.")).Select(e => new InputBooleanEntity(e));
    ///<summary>Away</summary>
    public InputBooleanEntity Away => new(_haContext, "input_boolean.away");
    ///<summary>CleanPetSnowy</summary>
    public InputBooleanEntity Cleanpetsnowy => new(_haContext, "input_boolean.cleanpetsnowy");
    ///<summary>DisableAutoAway</summary>
    public InputBooleanEntity Disableautoaway => new(_haContext, "input_boolean.disableautoaway");
    ///<summary>DisableLightAutomationBathroom</summary>
    public InputBooleanEntity Disablelightautomationbathroom => new(_haContext, "input_boolean.disablelightautomationbathroom");
    ///<summary>DisableLightAutomationBedRoom</summary>
    public InputBooleanEntity Disablelightautomationbedroom => new(_haContext, "input_boolean.disablelightautomationbedroom");
    ///<summary>DisableLightAutomationGeneral</summary>
    public InputBooleanEntity Disablelightautomationgeneral => new(_haContext, "input_boolean.disablelightautomationgeneral");
    ///<summary>DisableLightAutomationHall</summary>
    public InputBooleanEntity Disablelightautomationhall => new(_haContext, "input_boolean.disablelightautomationhall");
    ///<summary>DisableLightAutomationLivingRoom</summary>
    public InputBooleanEntity Disablelightautomationlivingroom => new(_haContext, "input_boolean.disablelightautomationlivingroom");
    ///<summary>DisableReset</summary>
    public InputBooleanEntity Disablereset => new(_haContext, "input_boolean.disablereset");
    ///<summary>Douchen</summary>
    public InputBooleanEntity Douchen => new(_haContext, "input_boolean.douchen");
    ///<summary>EmptyPetSnowy</summary>
    public InputBooleanEntity Emptypetsnowy => new(_haContext, "input_boolean.emptypetsnowy");
    ///<summary>FeedCat</summary>
    public InputBooleanEntity Feedcat => new(_haContext, "input_boolean.feedcat");
    ///<summary>Holliday</summary>
    public InputBooleanEntity Holliday => new(_haContext, "input_boolean.holliday");
    ///<summary>netdaemon_alarm</summary>
    public InputBooleanEntity NetdaemonAlarm => new(_haContext, "input_boolean.netdaemon_alarm");
    ///<summary>netdaemon_auto_update_app</summary>
    public InputBooleanEntity NetdaemonAutoUpdateApp => new(_haContext, "input_boolean.netdaemon_auto_update_app");
    ///<summary>netdaemon_away_manager</summary>
    public InputBooleanEntity NetdaemonAwayManager => new(_haContext, "input_boolean.netdaemon_away_manager");
    ///<summary>netdaemon_bath_room_lights</summary>
    public InputBooleanEntity NetdaemonBathRoomLights => new(_haContext, "input_boolean.netdaemon_bath_room_lights");
    ///<summary>netdaemon_battery_monitoring</summary>
    public InputBooleanEntity NetdaemonBatteryMonitoring => new(_haContext, "input_boolean.netdaemon_battery_monitoring");
    ///<summary>netdaemon_bed_room_lights</summary>
    public InputBooleanEntity NetdaemonBedRoomLights => new(_haContext, "input_boolean.netdaemon_bed_room_lights");
    ///<summary>netdaemon_cat</summary>
    public InputBooleanEntity NetdaemonCat => new(_haContext, "input_boolean.netdaemon_cat");
    ///<summary>netdaemon_coc_monitoring</summary>
    public InputBooleanEntity NetdaemonCocMonitoring => new(_haContext, "input_boolean.netdaemon_coc_monitoring");
    ///<summary>netdaemon_download_monitoring</summary>
    public InputBooleanEntity NetdaemonDownloadMonitoring => new(_haContext, "input_boolean.netdaemon_download_monitoring");
    ///<summary>netdaemon_fun_app</summary>
    public InputBooleanEntity NetdaemonFunApp => new(_haContext, "input_boolean.netdaemon_fun_app");
    ///<summary>netdaemon_gaming</summary>
    public InputBooleanEntity NetdaemonGaming => new(_haContext, "input_boolean.netdaemon_gaming");
    ///<summary>netdaemon_google_assistant_button_translate</summary>
    public InputBooleanEntity NetdaemonGoogleAssistantButtonTranslate => new(_haContext, "input_boolean.netdaemon_google_assistant_button_translate");
    ///<summary>netdaemon_hall_light_on_movement</summary>
    public InputBooleanEntity NetdaemonHallLightOnMovement => new(_haContext, "input_boolean.netdaemon_hall_light_on_movement");
    ///<summary>netdaemon_holiday_manager</summary>
    public InputBooleanEntity NetdaemonHolidayManager => new(_haContext, "input_boolean.netdaemon_holiday_manager");
    ///<summary>netdaemon_house_state_manager</summary>
    public InputBooleanEntity NetdaemonHouseStateManager => new(_haContext, "input_boolean.netdaemon_house_state_manager");
    ///<summary>netdaemon_living_room_lights</summary>
    public InputBooleanEntity NetdaemonLivingRoomLights => new(_haContext, "input_boolean.netdaemon_living_room_lights");
    ///<summary>netdaemon_net_daemon</summary>
    public InputBooleanEntity NetdaemonNetDaemon => new(_haContext, "input_boolean.netdaemon_net_daemon");
    ///<summary>netdaemon_pc_manager</summary>
    public InputBooleanEntity NetdaemonPcManager => new(_haContext, "input_boolean.netdaemon_pc_manager");
    ///<summary>netdaemon_reset</summary>
    public InputBooleanEntity NetdaemonReset => new(_haContext, "input_boolean.netdaemon_reset");
    ///<summary>netdaemon_save_in_state</summary>
    public InputBooleanEntity NetdaemonSaveInState => new(_haContext, "input_boolean.netdaemon_save_in_state");
    ///<summary>netdaemon_sleep_manager</summary>
    public InputBooleanEntity NetdaemonSleepManager => new(_haContext, "input_boolean.netdaemon_sleep_manager");
    ///<summary>netdaemon_todo_manager</summary>
    public InputBooleanEntity NetdaemonTodoManager => new(_haContext, "input_boolean.netdaemon_todo_manager");
    ///<summary>netdaemon_tv</summary>
    public InputBooleanEntity NetdaemonTv => new(_haContext, "input_boolean.netdaemon_tv");
    ///<summary>netdaemon_vacuum</summary>
    public InputBooleanEntity NetdaemonVacuum => new(_haContext, "input_boolean.netdaemon_vacuum");
    ///<summary>OfficeDay_Friday</summary>
    public InputBooleanEntity OfficedayFriday => new(_haContext, "input_boolean.officeday_friday");
    ///<summary>OfficeDay_Monday</summary>
    public InputBooleanEntity OfficedayMonday => new(_haContext, "input_boolean.officeday_monday");
    ///<summary>OfficeDay_Thursday</summary>
    public InputBooleanEntity OfficedayThursday => new(_haContext, "input_boolean.officeday_thursday");
    ///<summary>OfficeDay_Tuesday</summary>
    public InputBooleanEntity OfficedayTuesday => new(_haContext, "input_boolean.officeday_tuesday");
    ///<summary>OfficeDay_Wednesday</summary>
    public InputBooleanEntity OfficedayWednesday => new(_haContext, "input_boolean.officeday_wednesday");
    ///<summary>OnVacation </summary>
    public InputBooleanEntity Onvacation => new(_haContext, "input_boolean.onvacation");
    ///<summary>PixelGiveNextFeedEary</summary>
    public InputBooleanEntity Pixelgivenextfeedeary => new(_haContext, "input_boolean.pixelgivenextfeedeary");
    ///<summary>PixelSkipNextAutoFeed</summary>
    public InputBooleanEntity Pixelskipnextautofeed => new(_haContext, "input_boolean.pixelskipnextautofeed");
    ///<summary>RestartNetDaemon</summary>
    public InputBooleanEntity Restartnetdaemon => new(_haContext, "input_boolean.restartnetdaemon");
    ///<summary>SkipVaccumLitterbox</summary>
    public InputBooleanEntity Skipvaccumlitterbox => new(_haContext, "input_boolean.skipvaccumlitterbox");
    ///<summary>Sleeping</summary>
    public InputBooleanEntity Sleeping => new(_haContext, "input_boolean.sleeping");
    ///<summary>Start Friends</summary>
    public InputBooleanEntity StartFriends => new(_haContext, "input_boolean.start_friends");
    ///<summary>Start PC</summary>
    public InputBooleanEntity StartPc => new(_haContext, "input_boolean.start_pc");
    ///<summary>PC Afsluiten</summary>
    public InputBooleanEntity VincentPcAfsluiten => new(_haContext, "input_boolean.vincent_pc_afsluiten");
    ///<summary>Working</summary>
    public InputBooleanEntity Working => new(_haContext, "input_boolean.working");
}

public partial class InputButtonEntities
{
    private readonly IHaContext _haContext;
    public InputButtonEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all input_button entities currently registered (at runtime) in Home Assistant as InputButtonEntity</summary>
    public IEnumerable<InputButtonEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("input_button.")).Select(e => new InputButtonEntity(e));
    ///<summary>CleanPetSnowy</summary>
    public InputButtonEntity Cleanpetsnowy => new(_haContext, "input_button.cleanpetsnowy");
    ///<summary>EmptyPetSnowy</summary>
    public InputButtonEntity Emptypetsnowy => new(_haContext, "input_button.emptypetsnowy");
    ///<summary>FeedCat</summary>
    public InputButtonEntity Feedcat => new(_haContext, "input_button.feedcat");
    ///<summary>PixelGiveNextFeedEary</summary>
    public InputButtonEntity Pixelgivenextfeedeary => new(_haContext, "input_button.pixelgivenextfeedeary");
    ///<summary>RestartNetDaemon</summary>
    public InputButtonEntity Restartnetdaemon => new(_haContext, "input_button.restartnetdaemon");
    ///<summary>Start Friends</summary>
    public InputButtonEntity StartFriends => new(_haContext, "input_button.start_friends");
    ///<summary>Start PC</summary>
    public InputButtonEntity StartPc => new(_haContext, "input_button.start_pc");
    ///<summary>StartNewYear</summary>
    public InputButtonEntity Startnewyear => new(_haContext, "input_button.startnewyear");
    ///<summary>VacuumCleanBank</summary>
    public InputButtonEntity Vacuumcleanbank => new(_haContext, "input_button.vacuumcleanbank");
    ///<summary>VacuumCleanGang</summary>
    public InputButtonEntity Vacuumcleangang => new(_haContext, "input_button.vacuumcleangang");
    ///<summary>VacuumCleanKattenbak</summary>
    public InputButtonEntity Vacuumcleankattenbak => new(_haContext, "input_button.vacuumcleankattenbak");
    ///<summary>VacuumCleanSlaapkamer</summary>
    public InputButtonEntity Vacuumcleanslaapkamer => new(_haContext, "input_button.vacuumcleanslaapkamer");
    ///<summary>VacuumCleanWoonkamer</summary>
    public InputButtonEntity Vacuumcleanwoonkamer => new(_haContext, "input_button.vacuumcleanwoonkamer");
}

public partial class InputDatetimeEntities
{
    private readonly IHaContext _haContext;
    public InputDatetimeEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all input_datetime entities currently registered (at runtime) in Home Assistant as InputDatetimeEntity</summary>
    public IEnumerable<InputDatetimeEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("input_datetime.")).Select(e => new InputDatetimeEntity(e));
    ///<summary>DaytimeHomeWork</summary>
    public InputDatetimeEntity Daytimehomework => new(_haContext, "input_datetime.daytimehomework");
    ///<summary>DaytimeOffice</summary>
    public InputDatetimeEntity Daytimeoffice => new(_haContext, "input_datetime.daytimeoffice");
    ///<summary>DaytimeWeekend</summary>
    public InputDatetimeEntity Daytimeweekend => new(_haContext, "input_datetime.daytimeweekend");
    ///<summary>NighttimeWeekdays</summary>
    public InputDatetimeEntity Nighttimeweekdays => new(_haContext, "input_datetime.nighttimeweekdays");
    ///<summary>NighttimeWeekends</summary>
    public InputDatetimeEntity Nighttimeweekends => new(_haContext, "input_datetime.nighttimeweekends");
    ///<summary>PixelFeedFirstTime</summary>
    public InputDatetimeEntity Pixelfeedfirsttime => new(_haContext, "input_datetime.pixelfeedfirsttime");
    ///<summary>PixelFeedFourthTime</summary>
    public InputDatetimeEntity Pixelfeedfourthtime => new(_haContext, "input_datetime.pixelfeedfourthtime");
    ///<summary>PixelFeedSecondTime</summary>
    public InputDatetimeEntity Pixelfeedsecondtime => new(_haContext, "input_datetime.pixelfeedsecondtime");
    ///<summary>PixelFeedThirdTime</summary>
    public InputDatetimeEntity Pixelfeedthirdtime => new(_haContext, "input_datetime.pixelfeedthirdtime");
    ///<summary>PixelLastAutomatedFeed</summary>
    public InputDatetimeEntity Pixellastautomatedfeed => new(_haContext, "input_datetime.pixellastautomatedfeed");
    ///<summary>PixelLastManualFeed</summary>
    public InputDatetimeEntity Pixellastmanualfeed => new(_haContext, "input_datetime.pixellastmanualfeed");
}

public partial class InputNumberEntities
{
    private readonly IHaContext _haContext;
    public InputNumberEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all input_number entities currently registered (at runtime) in Home Assistant as InputNumberEntity</summary>
    public IEnumerable<InputNumberEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("input_number.")).Select(e => new InputNumberEntity(e));
    ///<summary>BathroomLightDayTime</summary>
    public InputNumberEntity Bathroomlightdaytime => new(_haContext, "input_number.bathroomlightdaytime");
    ///<summary>BathroomLightNightTime</summary>
    public InputNumberEntity Bathroomlightnighttime => new(_haContext, "input_number.bathroomlightnighttime");
    ///<summary>CleaningPetSnowyTime</summary>
    public InputNumberEntity Cleaningpetsnowytime => new(_haContext, "input_number.cleaningpetsnowytime");
    ///<summary>HallLightDayTime</summary>
    public InputNumberEntity Halllightdaytime => new(_haContext, "input_number.halllightdaytime");
    ///<summary>HallLightNightTime</summary>
    public InputNumberEntity Halllightnighttime => new(_haContext, "input_number.halllightnighttime");
    ///<summary>PixelFeedFirstAmount</summary>
    public InputNumberEntity Pixelfeedfirstamount => new(_haContext, "input_number.pixelfeedfirstamount");
    ///<summary>PixelFeedFourthAmount</summary>
    public InputNumberEntity Pixelfeedfourthamount => new(_haContext, "input_number.pixelfeedfourthamount");
    ///<summary>PixelFeedSecondAmount</summary>
    public InputNumberEntity Pixelfeedsecondamount => new(_haContext, "input_number.pixelfeedsecondamount");
    ///<summary>PixelFeedThirdAmount</summary>
    public InputNumberEntity Pixelfeedthirdamount => new(_haContext, "input_number.pixelfeedthirdamount");
    ///<summary>PixelInPetSnowyTime</summary>
    public InputNumberEntity Pixelinpetsnowytime => new(_haContext, "input_number.pixelinpetsnowytime");
    ///<summary>PixelLastAmountAutomationFeed</summary>
    public InputNumberEntity Pixellastamountautomationfeed => new(_haContext, "input_number.pixellastamountautomationfeed");
    ///<summary>PixelLastAmountManualFeed</summary>
    public InputNumberEntity Pixellastamountmanualfeed => new(_haContext, "input_number.pixellastamountmanualfeed");
    ///<summary>PixelNumberOfManualFood</summary>
    public InputNumberEntity Pixelnumberofmanualfood => new(_haContext, "input_number.pixelnumberofmanualfood");
    ///<summary>PixelTotalAmountFeedAllTime</summary>
    public InputNumberEntity Pixeltotalamountfeedalltime => new(_haContext, "input_number.pixeltotalamountfeedalltime");
    ///<summary>PixelTotalAmountFeedDay</summary>
    public InputNumberEntity Pixeltotalamountfeedday => new(_haContext, "input_number.pixeltotalamountfeedday");
}

public partial class InputSelectEntities
{
    private readonly IHaContext _haContext;
    public InputSelectEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all input_select entities currently registered (at runtime) in Home Assistant as InputSelectEntity</summary>
    public IEnumerable<InputSelectEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("input_select.")).Select(e => new InputSelectEntity(e));
    ///<summary>HouseModeSelect</summary>
    public InputSelectEntity Housemodeselect => new(_haContext, "input_select.housemodeselect");
    ///<summary>Water Usage Selector</summary>
    public InputSelectEntity WaterUsageSelector => new(_haContext, "input_select.water_usage_selector");
}

public partial class InputTextEntities
{
    private readonly IHaContext _haContext;
    public InputTextEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all input_text entities currently registered (at runtime) in Home Assistant as InputTextEntity</summary>
    public IEnumerable<InputTextEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("input_text.")).Select(e => new InputTextEntity(e));
    ///<summary>LastWaterUsageGuess</summary>
    public InputTextEntity Lastwaterusageguess => new(_haContext, "input_text.lastwaterusageguess");
    ///<summary>LastWaterUsageInLiterActual</summary>
    public InputTextEntity Lastwaterusageinliteractual => new(_haContext, "input_text.lastwaterusageinliteractual");
    ///<summary>LastWaterUsageInLiterSaved</summary>
    public InputTextEntity Lastwaterusageinlitersaved => new(_haContext, "input_text.lastwaterusageinlitersaved");
}

public partial class LightEntities
{
    private readonly IHaContext _haContext;
    public LightEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all light entities currently registered (at runtime) in Home Assistant as LightEntity</summary>
    public IEnumerable<LightEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("light.")).Select(e => new LightEntity(e));
    ///<summary>Badkamer</summary>
    public LightEntity Badkamer => new(_haContext, "light.badkamer");
    ///<summary>Badkamer spiegel</summary>
    public LightEntity BadkamerSpiegel => new(_haContext, "light.badkamer_spiegel");
    ///<summary>TV Kast</summary>
    public LightEntity Bank => new(_haContext, "light.bank");
    ///<summary>Berging</summary>
    public LightEntity Berging => new(_haContext, "light.berging");
    ///<summary>Berging</summary>
    public LightEntity Berging2 => new(_haContext, "light.berging_2");
    ///<summary>Buiten deur</summary>
    public LightEntity BuitenDeur => new(_haContext, "light.buiten_deur");
    ///<summary>Plug: Bureau</summary>
    public LightEntity Bureau => new(_haContext, "light.bureau");
    ///<summary>Bureau</summary>
    public LightEntity Bureau2 => new(_haContext, "light.bureau_2");
    ///<summary>Gang</summary>
    public LightEntity Gang => new(_haContext, "light.gang");
    ///<summary>Hal</summary>
    public LightEntity Hal => new(_haContext, "light.hal");
    ///<summary>Hal</summary>
    public LightEntity Hal2 => new(_haContext, "light.hal_2");
    ///<summary>Plafond Woonkamer</summary>
    public LightEntity HueFilamentBulb1 => new(_haContext, "light.hue_filament_bulb_1");
    ///<summary>Plafond Woonkamer</summary>
    public LightEntity HueFilamentBulb2 => new(_haContext, "light.hue_filament_bulb_2");
    ///<summary>Hue Play Links</summary>
    public LightEntity HuePlayLinks => new(_haContext, "light.hue_play_links");
    ///<summary>Hue Play Midden</summary>
    public LightEntity HuePlayMidden => new(_haContext, "light.hue_play_midden");
    ///<summary>Hue Play Rechts</summary>
    public LightEntity HuePlayRechts => new(_haContext, "light.hue_play_rechts");
    ///<summary>Koelkast</summary>
    public LightEntity Koelkast => new(_haContext, "light.koelkast");
    ///<summary>Lampen Keuken</summary>
    public LightEntity LampenKeuken => new(_haContext, "light.lampen_keuken");
    ///<summary>Nachtkastje</summary>
    public LightEntity Nachtkastje => new(_haContext, "light.nachtkastje");
    ///<summary>Plafond Slaapkamer</summary>
    public LightEntity Plafond => new(_haContext, "light.plafond");
    ///<summary>Plafond Badkamer</summary>
    public LightEntity PlafondBadkamer => new(_haContext, "light.plafond_badkamer");
    ///<summary>Plafond Woonkamer</summary>
    public LightEntity PlafondWoonkamer => new(_haContext, "light.plafond_woonkamer");
    ///<summary>RT-AX88U LED</summary>
    public LightEntity RtAx88uLed => new(_haContext, "light.rt_ax88u_led");
    ///<summary>Slaapkamer</summary>
    public LightEntity Slaapkamer => new(_haContext, "light.slaapkamer");
    ///<summary>Temp</summary>
    public LightEntity Temp => new(_haContext, "light.temp");
    ///<summary>TV</summary>
    public LightEntity Tv => new(_haContext, "light.tv");
    ///<summary>Woonkamer</summary>
    public LightEntity Woonkamer => new(_haContext, "light.woonkamer");
}

public partial class MediaPlayerEntities
{
    private readonly IHaContext _haContext;
    public MediaPlayerEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all media_player entities currently registered (at runtime) in Home Assistant as MediaPlayerEntity</summary>
    public IEnumerable<MediaPlayerEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("media_player.")).Select(e => new MediaPlayerEntity(e));
    public MediaPlayerEntity AvSoundbar => new(_haContext, "media_player.av_soundbar");
    ///<summary>Friends Speakers</summary>
    public MediaPlayerEntity FriendsSpeakers => new(_haContext, "media_player.friends_speakers");
    public MediaPlayerEntity GangFriensSpeakers => new(_haContext, "media_player.gang_friens_speakers");
    public MediaPlayerEntity GangSpeaker1 => new(_haContext, "media_player.gang_speaker_1");
    public MediaPlayerEntity GangSpeakers => new(_haContext, "media_player.gang_speakers");
    public MediaPlayerEntity Googlehome0053 => new(_haContext, "media_player.googlehome0053");
    public MediaPlayerEntity Googlehome0267 => new(_haContext, "media_player.googlehome0267");
    ///<summary>Badkamer Speaker</summary>
    public MediaPlayerEntity Googlehome0351 => new(_haContext, "media_player.googlehome0351");
    public MediaPlayerEntity Googlehome3113 => new(_haContext, "media_player.googlehome3113");
    ///<summary>Gang Speaker 1</summary>
    public MediaPlayerEntity Googlehome7421 => new(_haContext, "media_player.googlehome7421");
    public MediaPlayerEntity Googlehome7546 => new(_haContext, "media_player.googlehome7546");
    public MediaPlayerEntity Googlehome7691 => new(_haContext, "media_player.googlehome7691");
    ///<summary>Gang Speaker 2</summary>
    public MediaPlayerEntity Googlehome8627 => new(_haContext, "media_player.googlehome8627");
    public MediaPlayerEntity Googlehome9779 => new(_haContext, "media_player.googlehome9779");
    ///<summary>Hele Huis</summary>
    public MediaPlayerEntity HeleHuis => new(_haContext, "media_player.hele_huis");
    ///<summary>Hub Vincent</summary>
    public MediaPlayerEntity HubVincent => new(_haContext, "media_player.hub_vincent");
    public MediaPlayerEntity Huis => new(_haContext, "media_player.huis");
    public MediaPlayerEntity Nestmini2799 => new(_haContext, "media_player.nestmini2799");
    ///<summary>Keuken</summary>
    public MediaPlayerEntity Nestmini9818 => new(_haContext, "media_player.nestmini9818");
    ///<summary>PlayStation 5</summary>
    public MediaPlayerEntity Playstation5 => new(_haContext, "media_player.playstation_5");
    ///<summary>Soundbar</summary>
    public MediaPlayerEntity Soundbar => new(_haContext, "media_player.soundbar");
    ///<summary>Spotcast (Vincent Maarschalkerweerd) - Soundbar</summary>
    public MediaPlayerEntity Soundbar1111083559Spotcast => new(_haContext, "media_player.soundbar_1111083559_spotcast");
    ///<summary>Spotify Vincent Maarschalkerweerd</summary>
    public MediaPlayerEntity SpotifyVincentMaarschalkerweerd => new(_haContext, "media_player.spotify_vincent_maarschalkerweerd");
    public MediaPlayerEntity Thuis => new(_haContext, "media_player.thuis");
    ///<summary>TV</summary>
    public MediaPlayerEntity Tv => new(_haContext, "media_player.tv");
    ///<summary>TV</summary>
    public MediaPlayerEntity Tv2 => new(_haContext, "media_player.tv_2");
    ///<summary>Spotcast (Vincent Maarschalkerweerd) - VINCENT</summary>
    public MediaPlayerEntity Vincent1111083559Spotcast => new(_haContext, "media_player.vincent_1111083559_spotcast");
    ///<summary>Spotcast (Vincent Maarschalkerweerd) - Web Player (Microsoft Edge)</summary>
    public MediaPlayerEntity WebPlayerMicrosoftEdge1111083559Spotcast => new(_haContext, "media_player.web_player_microsoft_edge_1111083559_spotcast");
    ///<summary>Woonkamer</summary>
    public MediaPlayerEntity Woonkamer => new(_haContext, "media_player.woonkamer");
    ///<summary>Xbox Vincent</summary>
    public MediaPlayerEntity XboxVincent => new(_haContext, "media_player.xbox_vincent");
}

public partial class NumberEntities
{
    private readonly IHaContext _haContext;
    public NumberEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all number entities currently registered (at runtime) in Home Assistant as NumberEntity</summary>
    public IEnumerable<NumberEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("number.")).Select(e => new NumberEntity(e));
    ///<summary>Badkamer Speaker alarm volume</summary>
    public NumberEntity BadkamerSpeakerAlarmVolume => new(_haContext, "number.badkamer_speaker_alarm_volume");
    ///<summary>EnergySocket (5c2faf02a546) Status lampje helderheid</summary>
    public NumberEntity Energysocket5c2faf02a546StatusLightBrightness => new(_haContext, "number.energysocket_5c2faf02a546_status_light_brightness");
    ///<summary>EnergySocket (5c2faf0c7564) Status lampje helderheid</summary>
    public NumberEntity Energysocket5c2faf0c7564StatusLightBrightness => new(_haContext, "number.energysocket_5c2faf0c7564_status_light_brightness");
    ///<summary>EnergySocket (5c2faf0d8364) Status lampje helderheid</summary>
    public NumberEntity Energysocket5c2faf0d8364StatusLightBrightness => new(_haContext, "number.energysocket_5c2faf0d8364_status_light_brightness");
    ///<summary>Gang Speaker 1 alarm volume</summary>
    public NumberEntity GangSpeaker1AlarmVolume => new(_haContext, "number.gang_speaker_1_alarm_volume");
    ///<summary>Hub Vincent alarm volume</summary>
    public NumberEntity HubVincentAlarmVolume => new(_haContext, "number.hub_vincent_alarm_volume");
    ///<summary>Keuken alarm volume</summary>
    public NumberEntity KeukenAlarmVolume => new(_haContext, "number.keuken_alarm_volume");
    ///<summary>PetSnowy Fontijn Aan Interval</summary>
    public NumberEntity PetsnowyFountainFountainInterval => new(_haContext, "number.petsnowy_fountain_fountain_interval");
    ///<summary>PetSnowy Fontijn Pauze Interval</summary>
    public NumberEntity PetsnowyFountainPauseInterval => new(_haContext, "number.petsnowy_fountain_pause_interval");
    ///<summary>PetSnowy Litterbox Delay Clean Cycle</summary>
    public NumberEntity PetsnowyLitterboxDelayCleanCycle => new(_haContext, "number.petsnowy_litterbox_delay_clean_cycle");
    ///<summary>Sync Box Helderheid</summary>
    public NumberEntity SyncBoxBrightness => new(_haContext, "number.sync_box_brightness");
    ///<summary>Voordeur Volume</summary>
    public NumberEntity VoordeurVolume => new(_haContext, "number.voordeur_volume");
    ///<summary>Wasmachine Spoelcycli</summary>
    public NumberEntity WasmachineSpoelcycli => new(_haContext, "number.wasmachine_spoelcycli");
    ///<summary>Woonkamer alarm volume</summary>
    public NumberEntity WoonkamerAlarmVolume => new(_haContext, "number.woonkamer_alarm_volume");
    ///<summary>Zedar_manual_feed</summary>
    public NumberEntity ZedarManualFeed => new(_haContext, "number.zedar_manual_feed");
}

public partial class PersistentNotificationEntities
{
    private readonly IHaContext _haContext;
    public PersistentNotificationEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all persistent_notification entities currently registered (at runtime) in Home Assistant as PersistentNotificationEntity</summary>
    public IEnumerable<PersistentNotificationEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("persistent_notification.")).Select(e => new PersistentNotificationEntity(e));
    ///<summary>New devices discovered</summary>
    public PersistentNotificationEntity ConfigEntryDiscovery => new(_haContext, "persistent_notification.config_entry_discovery");
    ///<summary>RT-AX88U Firmware update</summary>
    public PersistentNotificationEntity RtAx88uFirmwareUpdate => new(_haContext, "persistent_notification.rt_ax88u_firmware_update");
}

public partial class PersonEntities
{
    private readonly IHaContext _haContext;
    public PersonEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all person entities currently registered (at runtime) in Home Assistant as PersonEntity</summary>
    public IEnumerable<PersonEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("person.")).Select(e => new PersonEntity(e));
    ///<summary>Timo</summary>
    public PersonEntity Timo => new(_haContext, "person.timo");
    ///<summary>Vincent Maarschalkerweerd</summary>
    public PersonEntity VincentMaarschalkerweerd => new(_haContext, "person.vincent_maarschalkerweerd");
}

public partial class SensorEntities
{
    private readonly IHaContext _haContext;
    public SensorEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all sensor entities currently registered (at runtime) in Home Assistant as SensorEntity</summary>
    public IEnumerable<SensorEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("sensor.")).Select(e => new SensorEntity(e));
    /// <summary>Enumerates all non-numeric sensor entities currently registered (at runtime) in Home Assistant as SensorEntity</summary>
    public IEnumerable<SensorEntity> EnumerateAllNonNumeric() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("sensor.") && !(e.EntityState?.AttributesJson?.TryGetProperty("unit_of_measurement", out _) ?? false)).Select(e => new SensorEntity(e));
    /// <summary>Enumerates all numeric sensor entities currently registered (at runtime) in Home Assistant as NumericSensorEntity</summary>
    public IEnumerable<NumericSensorEntity> EnumerateAllNumeric() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("sensor.") && (e.EntityState?.AttributesJson?.TryGetProperty("unit_of_measurement", out _) ?? false)).Select(e => new NumericSensorEntity(e));
    ///<summary>afval GFT</summary>
    public SensorEntity AfvalGft => new(_haContext, "sensor.afval_gft");
    ///<summary>afval Morgen</summary>
    public SensorEntity AfvalMorgen => new(_haContext, "sensor.afval_morgen");
    ///<summary>afval Papier</summary>
    public SensorEntity AfvalPapier => new(_haContext, "sensor.afval_papier");
    ///<summary>afval PMD</summary>
    public SensorEntity AfvalPmd => new(_haContext, "sensor.afval_pmd");
    ///<summary>afval Rest</summary>
    public SensorEntity AfvalRest => new(_haContext, "sensor.afval_rest");
    ///<summary>afval Textiel</summary>
    public SensorEntity AfvalTextiel => new(_haContext, "sensor.afval_textiel");
    ///<summary>afval Vandaag</summary>
    public SensorEntity AfvalVandaag => new(_haContext, "sensor.afval_vandaag");
    ///<summary>Home Assistant Luchtkwaliteit</summary>
    public SensorEntity AirQuality => new(_haContext, "sensor.air_quality");
    ///<summary>Ajax</summary>
    public SensorEntity Ajax => new(_haContext, "sensor.ajax");
    ///<summary>Home Assistant Alarm bedieningspanelen</summary>
    public SensorEntity AlarmControlPanels => new(_haContext, "sensor.alarm_control_panels");
    ///<summary>alarm_time</summary>
    public SensorEntity AlarmTime => new(_haContext, "sensor.alarm_time");
    ///<summary>Home Assistant Ruimtes</summary>
    public SensorEntity Areas => new(_haContext, "sensor.areas");
    ///<summary>Home Assistant Automatiseringen</summary>
    public SensorEntity Automations => new(_haContext, "sensor.automations");
    ///<summary>Az</summary>
    public SensorEntity Az => new(_haContext, "sensor.az");
    ///<summary>Backup Backup Manager state</summary>
    public SensorEntity BackupBackupManagerState => new(_haContext, "sensor.backup_backup_manager_state");
    ///<summary>Backup Last attempted automatic backup</summary>
    public SensorEntity BackupLastAttemptedAutomaticBackup => new(_haContext, "sensor.backup_last_attempted_automatic_backup");
    ///<summary>Backup Last successful automatic backup</summary>
    public SensorEntity BackupLastSuccessfulAutomaticBackup => new(_haContext, "sensor.backup_last_successful_automatic_backup");
    ///<summary>Backup Next scheduled automatic backup</summary>
    public SensorEntity BackupNextScheduledAutomaticBackup => new(_haContext, "sensor.backup_next_scheduled_automatic_backup");
    ///<summary>Badkamer Batterij laatst vervangen</summary>
    public SensorEntity BadkamerBatteryLastReplaced => new(_haContext, "sensor.badkamer_battery_last_replaced");
    ///<summary>Badkamer Batterij laatst vervangen</summary>
    public SensorEntity BadkamerBatteryLastReplaced2 => new(_haContext, "sensor.badkamer_battery_last_replaced_2");
    ///<summary>BadkamerMotion Batterij laatst vervangen</summary>
    public SensorEntity BadkamerBatteryLastReplaced3 => new(_haContext, "sensor.badkamer_battery_last_replaced_3");
    ///<summary>Badkamer Batterij type</summary>
    public SensorEntity BadkamerBatteryType => new(_haContext, "sensor.badkamer_battery_type");
    ///<summary>Badkamer Batterij type</summary>
    public SensorEntity BadkamerBatteryType2 => new(_haContext, "sensor.badkamer_battery_type_2");
    ///<summary>BadkamerMotion Batterij type</summary>
    public SensorEntity BadkamerBatteryType3 => new(_haContext, "sensor.badkamer_battery_type_3");
    ///<summary>Badkamer Speaker alarms</summary>
    public SensorEntity BadkamerSpeakerAlarms => new(_haContext, "sensor.badkamer_speaker_alarms");
    ///<summary>Badkamer Speaker device</summary>
    public SensorEntity BadkamerSpeakerDevice => new(_haContext, "sensor.badkamer_speaker_device");
    ///<summary>Badkamer Speaker timers</summary>
    public SensorEntity BadkamerSpeakerTimers => new(_haContext, "sensor.badkamer_speaker_timers");
    ///<summary>Battery Shopping List</summary>
    public SensorEntity BatteriesToBuy => new(_haContext, "sensor.batteries_to_buy");
    ///<summary>Berging Batterij laatst vervangen</summary>
    public SensorEntity BergingBatteryLastReplaced => new(_haContext, "sensor.berging_battery_last_replaced");
    ///<summary>Berging Batterij type</summary>
    public SensorEntity BergingBatteryType => new(_haContext, "sensor.berging_battery_type");
    ///<summary>Home Assistant Binaire sensoren</summary>
    public SensorEntity BinarySensors => new(_haContext, "sensor.binary_sensors");
    ///<summary>Bot 29FF Batterij laatst vervangen</summary>
    public SensorEntity Bot29ffBatteryLastReplaced => new(_haContext, "sensor.bot_29ff_battery_last_replaced");
    ///<summary>Bot 29FF Batterij type</summary>
    public SensorEntity Bot29ffBatteryType => new(_haContext, "sensor.bot_29ff_battery_type");
    ///<summary>Bot A801 Batterij laatst vervangen</summary>
    public SensorEntity BotA801BatteryLastReplaced => new(_haContext, "sensor.bot_a801_battery_last_replaced");
    ///<summary>Bot A801 Batterij type</summary>
    public SensorEntity BotA801BatteryType => new(_haContext, "sensor.bot_a801_battery_type");
    ///<summary>Barometer</summary>
    public SensorEntity BuienradarBarometer => new(_haContext, "sensor.buienradar_barometer");
    ///<summary>Barometer</summary>
    public SensorEntity BuienradarBarometer2 => new(_haContext, "sensor.buienradar_barometer_2");
    ///<summary>Barometerwaarde</summary>
    public SensorEntity BuienradarBarometerValue => new(_haContext, "sensor.buienradar_barometer_value");
    ///<summary>Staat</summary>
    public SensorEntity BuienradarCondition => new(_haContext, "sensor.buienradar_condition");
    ///<summary>Staat 1d</summary>
    public SensorEntity BuienradarCondition1d => new(_haContext, "sensor.buienradar_condition_1d");
    ///<summary>Staat 2d</summary>
    public SensorEntity BuienradarCondition2d => new(_haContext, "sensor.buienradar_condition_2d");
    ///<summary>Staat 3d</summary>
    public SensorEntity BuienradarCondition3d => new(_haContext, "sensor.buienradar_condition_3d");
    ///<summary>Staat 4d</summary>
    public SensorEntity BuienradarCondition4d => new(_haContext, "sensor.buienradar_condition_4d");
    ///<summary>Staat 5d</summary>
    public SensorEntity BuienradarCondition5d => new(_haContext, "sensor.buienradar_condition_5d");
    ///<summary>Staatcode</summary>
    public SensorEntity BuienradarConditionCode => new(_haContext, "sensor.buienradar_condition_code");
    ///<summary>Staatcode 1d</summary>
    public SensorEntity BuienradarConditionCode1d => new(_haContext, "sensor.buienradar_condition_code_1d");
    ///<summary>Staatcode 2d</summary>
    public SensorEntity BuienradarConditionCode2d => new(_haContext, "sensor.buienradar_condition_code_2d");
    ///<summary>Staatcode 3d</summary>
    public SensorEntity BuienradarConditionCode3d => new(_haContext, "sensor.buienradar_condition_code_3d");
    ///<summary>Staatcode 4d</summary>
    public SensorEntity BuienradarConditionCode4d => new(_haContext, "sensor.buienradar_condition_code_4d");
    ///<summary>Staatcode 5d</summary>
    public SensorEntity BuienradarConditionCode5d => new(_haContext, "sensor.buienradar_condition_code_5d");
    ///<summary>Gedetailleerde staat</summary>
    public SensorEntity BuienradarDetailedCondition => new(_haContext, "sensor.buienradar_detailed_condition");
    ///<summary>Gedetailleerde staat 1d</summary>
    public SensorEntity BuienradarDetailedCondition1d => new(_haContext, "sensor.buienradar_detailed_condition_1d");
    ///<summary>Gedetailleerde staat 2d</summary>
    public SensorEntity BuienradarDetailedCondition2d => new(_haContext, "sensor.buienradar_detailed_condition_2d");
    ///<summary>Gedetailleerde staat 3d</summary>
    public SensorEntity BuienradarDetailedCondition3d => new(_haContext, "sensor.buienradar_detailed_condition_3d");
    ///<summary>Gedetailleerde staat 4d</summary>
    public SensorEntity BuienradarDetailedCondition4d => new(_haContext, "sensor.buienradar_detailed_condition_4d");
    ///<summary>Gedetailleerde staat 5d</summary>
    public SensorEntity BuienradarDetailedCondition5d => new(_haContext, "sensor.buienradar_detailed_condition_5d");
    ///<summary>Volledige staat</summary>
    public SensorEntity BuienradarFullCondition => new(_haContext, "sensor.buienradar_full_condition");
    ///<summary>Volledige staat 1d</summary>
    public SensorEntity BuienradarFullCondition1d => new(_haContext, "sensor.buienradar_full_condition_1d");
    ///<summary>Volledige staat 1d</summary>
    public SensorEntity BuienradarFullCondition2d => new(_haContext, "sensor.buienradar_full_condition_2d");
    ///<summary>Volledige staat 3d</summary>
    public SensorEntity BuienradarFullCondition3d => new(_haContext, "sensor.buienradar_full_condition_3d");
    ///<summary>Volledige staat 4d</summary>
    public SensorEntity BuienradarFullCondition4d => new(_haContext, "sensor.buienradar_full_condition_4d");
    ///<summary>Volledige staat 5d</summary>
    public SensorEntity BuienradarFullCondition5d => new(_haContext, "sensor.buienradar_full_condition_5d");
    ///<summary>Stationnaam</summary>
    public SensorEntity BuienradarStationname => new(_haContext, "sensor.buienradar_stationname");
    ///<summary>Symbool</summary>
    public SensorEntity BuienradarSymbol => new(_haContext, "sensor.buienradar_symbol");
    ///<summary>Symbool 1d</summary>
    public SensorEntity BuienradarSymbol1d => new(_haContext, "sensor.buienradar_symbol_1d");
    ///<summary>Symbool 2d</summary>
    public SensorEntity BuienradarSymbol2d => new(_haContext, "sensor.buienradar_symbol_2d");
    ///<summary>Symbool 3d</summary>
    public SensorEntity BuienradarSymbol3d => new(_haContext, "sensor.buienradar_symbol_3d");
    ///<summary>Symbool 4d</summary>
    public SensorEntity BuienradarSymbol4d => new(_haContext, "sensor.buienradar_symbol_4d");
    ///<summary>Symbool 5d</summary>
    public SensorEntity BuienradarSymbol5d => new(_haContext, "sensor.buienradar_symbol_5d");
    ///<summary>Windrichting</summary>
    public SensorEntity BuienradarWindDirection => new(_haContext, "sensor.buienradar_wind_direction");
    ///<summary>Windrichting 1d</summary>
    public SensorEntity BuienradarWindDirection1d => new(_haContext, "sensor.buienradar_wind_direction_1d");
    ///<summary>Windrichting 2d</summary>
    public SensorEntity BuienradarWindDirection2d => new(_haContext, "sensor.buienradar_wind_direction_2d");
    ///<summary>Windrichting 3d</summary>
    public SensorEntity BuienradarWindDirection3d => new(_haContext, "sensor.buienradar_wind_direction_3d");
    ///<summary>Windrichting 4d</summary>
    public SensorEntity BuienradarWindDirection4d => new(_haContext, "sensor.buienradar_wind_direction_4d");
    ///<summary>Windrichting 5d</summary>
    public SensorEntity BuienradarWindDirection5d => new(_haContext, "sensor.buienradar_wind_direction_5d");
    ///<summary>Home Assistant Knoppen</summary>
    public SensorEntity Buttons => new(_haContext, "sensor.buttons");
    ///<summary>Home Assistant Kalenders</summary>
    public SensorEntity Calendars => new(_haContext, "sensor.calendars");
    ///<summary>Home Assistant Camera&apos;s</summary>
    public SensorEntity Cameras => new(_haContext, "sensor.cameras");
    ///<summary>Home Assistant Klimaat</summary>
    public SensorEntity Climate => new(_haContext, "sensor.climate");
    ///<summary>Home Assistant Bedekkingen</summary>
    public SensorEntity Covers => new(_haContext, "sensor.covers");
    ///<summary>OpenUV Huidig UV-niveau</summary>
    public SensorEntity CurrentUvLevel => new(_haContext, "sensor.current_uv_level");
    ///<summary>Home Assistant Custom integraties</summary>
    public SensorEntity CustomIntegrations => new(_haContext, "sensor.custom_integrations");
    ///<summary>Home Assistant Datums</summary>
    public SensorEntity Dates => new(_haContext, "sensor.dates");
    ///<summary>Home Assistant Datum/tijden</summary>
    public SensorEntity Datetimes => new(_haContext, "sensor.datetimes");
    ///<summary>Home Assistant Locatie trackers</summary>
    public SensorEntity DeviceTrackers => new(_haContext, "sensor.device_trackers");
    ///<summary>Home Assistant Apparaten</summary>
    public SensorEntity Devices => new(_haContext, "sensor.devices");
    ///<summary>EnergySocket (5c2faf02a546) Wi-Fi SSID</summary>
    public SensorEntity Energysocket5c2faf02a546WiFiSsid => new(_haContext, "sensor.energysocket_5c2faf02a546_wi_fi_ssid");
    ///<summary>EnergySocket (5c2faf0c7564) Wi-Fi SSID</summary>
    public SensorEntity Energysocket5c2faf0c7564WiFiSsid => new(_haContext, "sensor.energysocket_5c2faf0c7564_wi_fi_ssid");
    ///<summary>EnergySocket (5c2faf0d8364) Wi-Fi SSID</summary>
    public SensorEntity Energysocket5c2faf0d8364WiFiSsid => new(_haContext, "sensor.energysocket_5c2faf0d8364_wi_fi_ssid");
    ///<summary>Energy market price Time of highest price - today</summary>
    public SensorEntity EnergyzeroTodayEnergyHighestPriceTime => new(_haContext, "sensor.energyzero_today_energy_highest_price_time");
    ///<summary>Energy market price Time of lowest price - today</summary>
    public SensorEntity EnergyzeroTodayEnergyLowestPriceTime => new(_haContext, "sensor.energyzero_today_energy_lowest_price_time");
    ///<summary>Home Assistant Entiteiten</summary>
    public SensorEntity Entities => new(_haContext, "sensor.entities");
    ///<summary>Home Assistant Ventilatoren</summary>
    public SensorEntity Fans => new(_haContext, "sensor.fans");
    ///<summary>FC Emmen</summary>
    public SensorEntity FcEmmen => new(_haContext, "sensor.fc_emmen");
    ///<summary>FC Groningen</summary>
    public SensorEntity FcGroningen => new(_haContext, "sensor.fc_groningen");
    ///<summary>FC Twente</summary>
    public SensorEntity FcTwente => new(_haContext, "sensor.fc_twente");
    ///<summary>FC Utrecht</summary>
    public SensorEntity FcUtrecht => new(_haContext, "sensor.fc_utrecht");
    ///<summary>FC Volendam</summary>
    public SensorEntity FcVolendam => new(_haContext, "sensor.fc_volendam");
    ///<summary>Feyenoord</summary>
    public SensorEntity Feyenoord => new(_haContext, "sensor.feyenoord");
    ///<summary>FlightRadar24 Additional tracked</summary>
    public SensorEntity Flightradar24AdditionalTracked => new(_haContext, "sensor.flightradar24_additional_tracked");
    ///<summary>FlightRadar24 Current in area</summary>
    public SensorEntity Flightradar24CurrentInArea => new(_haContext, "sensor.flightradar24_current_in_area");
    ///<summary>FlightRadar24 Entered area</summary>
    public SensorEntity Flightradar24EnteredArea => new(_haContext, "sensor.flightradar24_entered_area");
    ///<summary>FlightRadar24 Exited area</summary>
    public SensorEntity Flightradar24ExitedArea => new(_haContext, "sensor.flightradar24_exited_area");
    ///<summary>FlightRadar24 Most tracked</summary>
    public SensorEntity Flightradar24MostTracked => new(_haContext, "sensor.flightradar24_most_tracked");
    ///<summary>Fortuna Sittard</summary>
    public SensorEntity FortunaSittard => new(_haContext, "sensor.fortuna_sittard");
    ///<summary>Gang Batterij laatst vervangen</summary>
    public SensorEntity GangBatteryLastReplaced => new(_haContext, "sensor.gang_battery_last_replaced");
    ///<summary>Gang Batterij laatst vervangen</summary>
    public SensorEntity GangBatteryLastReplaced2 => new(_haContext, "sensor.gang_battery_last_replaced_2");
    ///<summary>Gang Batterij type</summary>
    public SensorEntity GangBatteryType => new(_haContext, "sensor.gang_battery_type");
    ///<summary>Gang Batterij type</summary>
    public SensorEntity GangBatteryType2 => new(_haContext, "sensor.gang_battery_type_2");
    ///<summary>Gang Speaker 1 alarms</summary>
    public SensorEntity GangSpeaker1Alarms => new(_haContext, "sensor.gang_speaker_1_alarms");
    ///<summary>Gang Speaker 1 device</summary>
    public SensorEntity GangSpeaker1Device => new(_haContext, "sensor.gang_speaker_1_device");
    ///<summary>Gang Speaker 1 timers</summary>
    public SensorEntity GangSpeaker1Timers => new(_haContext, "sensor.gang_speaker_1_timers");
    ///<summary>Go Ahead Eagles</summary>
    public SensorEntity GoAheadEagles => new(_haContext, "sensor.go_ahead_eagles");
    ///<summary>Hal Batterij laatst vervangen</summary>
    public SensorEntity HalBatteryLastReplaced => new(_haContext, "sensor.hal_battery_last_replaced");
    ///<summary>Hal Batterij type</summary>
    public SensorEntity HalBatteryType => new(_haContext, "sensor.hal_battery_type");
    ///<summary>Hub Vincent alarms</summary>
    public SensorEntity HubVincentAlarms => new(_haContext, "sensor.hub_vincent_alarms");
    ///<summary>Hub Vincent device</summary>
    public SensorEntity HubVincentDevice => new(_haContext, "sensor.hub_vincent_device");
    ///<summary>Home Assistant Luchtbevochtigers</summary>
    public SensorEntity Humidifiers => new(_haContext, "sensor.humidifiers");
    ///<summary>Home Assistant Afbeeldingen</summary>
    public SensorEntity Images => new(_haContext, "sensor.images");
    ///<summary>Home Assistant Invoer booleans</summary>
    public SensorEntity InputBooleans => new(_haContext, "sensor.input_booleans");
    ///<summary>Home Assistant Invoer knoppen</summary>
    public SensorEntity InputButtons => new(_haContext, "sensor.input_buttons");
    ///<summary>Home Assistant Invoer datum/tijden</summary>
    public SensorEntity InputDatetimes => new(_haContext, "sensor.input_datetimes");
    ///<summary>Home Assistant Invoer getallen</summary>
    public SensorEntity InputNumbers => new(_haContext, "sensor.input_numbers");
    ///<summary>Home Assistant Invoer selecties</summary>
    public SensorEntity InputSelects => new(_haContext, "sensor.input_selects");
    ///<summary>Home Assistant Invoer teksten</summary>
    public SensorEntity InputTexts => new(_haContext, "sensor.input_texts");
    ///<summary>Home Assistant Integraties</summary>
    public SensorEntity Integrations => new(_haContext, "sensor.integrations");
    ///<summary>IPv4 address eth0</summary>
    public SensorEntity Ipv4AddressEth0 => new(_haContext, "sensor.ipv4_address_eth0");
    ///<summary>Jaap Batterijcycli</summary>
    public SensorEntity JaapBatterijcycli => new(_haContext, "sensor.jaap_batterijcycli");
    ///<summary>Jaap Batterij laatst vervangen</summary>
    public SensorEntity JaapBatteryLastReplaced => new(_haContext, "sensor.jaap_battery_last_replaced");
    ///<summary>Jaap Batterij type</summary>
    public SensorEntity JaapBatteryType => new(_haContext, "sensor.jaap_battery_type");
    ///<summary>Keuken afstandbediening Batterij laatst vervangen</summary>
    public SensorEntity KeukenAfstandbedieningBatteryLastReplaced => new(_haContext, "sensor.keuken_afstandbediening_battery_last_replaced");
    ///<summary>Keuken afstandbediening Batterij type</summary>
    public SensorEntity KeukenAfstandbedieningBatteryType => new(_haContext, "sensor.keuken_afstandbediening_battery_type");
    ///<summary>Keuken alarms</summary>
    public SensorEntity KeukenAlarms => new(_haContext, "sensor.keuken_alarms");
    ///<summary>Keuken device</summary>
    public SensorEntity KeukenDevice => new(_haContext, "sensor.keuken_device");
    ///<summary>Keuken timers</summary>
    public SensorEntity KeukenTimers => new(_haContext, "sensor.keuken_timers");
    ///<summary>KNMI Kleur code</summary>
    public SensorEntity Knmicolorcode => new(_haContext, "sensor.knmicolorcode");
    ///<summary>KNMI Melding</summary>
    public SensorEntity Knmimessage => new(_haContext, "sensor.knmimessage");
    ///<summary>System Monitor Last boot</summary>
    public SensorEntity LastBoot => new(_haContext, "sensor.last_boot");
    ///<summary>Home Assistant Lichten</summary>
    public SensorEntity Lights => new(_haContext, "sensor.lights");
    ///<summary>Home Assistant Sloten</summary>
    public SensorEntity Locks => new(_haContext, "sensor.locks");
    ///<summary>Mail Image System Path</summary>
    public SensorEntity MailImageSystemPath => new(_haContext, "sensor.mail_image_system_path");
    ///<summary>Mail Image URL</summary>
    public SensorEntity MailImageUrl => new(_haContext, "sensor.mail_image_url");
    ///<summary>Home Assistant Media spelers</summary>
    public SensorEntity MediaPlayers => new(_haContext, "sensor.media_players");
    ///<summary>Moon Fase</summary>
    public SensorEntity MoonPhase => new(_haContext, "sensor.moon_phase");
    ///<summary>N.E.C.</summary>
    public SensorEntity NEC => new(_haContext, "sensor.n_e_c");
    ///<summary>neerslag_buienalarm_regen_data</summary>
    public SensorEntity NeerslagBuienalarmRegenData => new(_haContext, "sensor.neerslag_buienalarm_regen_data");
    ///<summary>neerslag_buienradar_regen_data</summary>
    public SensorEntity NeerslagBuienradarRegenData => new(_haContext, "sensor.neerslag_buienradar_regen_data");
    ///<summary>Next Battery Replacement Due</summary>
    public SensorEntity NextBatteryReplacement => new(_haContext, "sensor.next_battery_replacement");
    ///<summary>Home Assistant Getallen</summary>
    public SensorEntity Numbers => new(_haContext, "sensor.numbers");
    ///<summary>OneDrive Schijfstatus</summary>
    public SensorEntity OnedriveSchijfstatus => new(_haContext, "sensor.onedrive_schijfstatus");
    public SensorEntity Onedrivebackup => new(_haContext, "sensor.onedrivebackup");
    public SensorEntity Onedrivefilesync => new(_haContext, "sensor.onedrivefilesync");
    ///<summary>P1 meter (3c39e72a64e8) Tarief</summary>
    public SensorEntity P1Meter3c39e72a64e8ActiveTariff => new(_haContext, "sensor.p1_meter_3c39e72a64e8_active_tariff");
    ///<summary>P1 meter (3c39e72a64e8) DSMR versie</summary>
    public SensorEntity P1Meter3c39e72a64e8DsmrVersion => new(_haContext, "sensor.p1_meter_3c39e72a64e8_dsmr_version");
    ///<summary>P1 meter (3c39e72a64e8) Lange stroomstoringen gedetecteerd</summary>
    public SensorEntity P1Meter3c39e72a64e8LongPowerFailuresDetected => new(_haContext, "sensor.p1_meter_3c39e72a64e8_long_power_failures_detected");
    ///<summary>P1 meter (3c39e72a64e8) Stroomstoringen gedetecteerd</summary>
    public SensorEntity P1Meter3c39e72a64e8PowerFailuresDetected => new(_haContext, "sensor.p1_meter_3c39e72a64e8_power_failures_detected");
    ///<summary>P1 meter (3c39e72a64e8) Slimme meter identificatie</summary>
    public SensorEntity P1Meter3c39e72a64e8SmartMeterIdentifier => new(_haContext, "sensor.p1_meter_3c39e72a64e8_smart_meter_identifier");
    ///<summary>P1 meter (3c39e72a64e8) Slimme meter model</summary>
    public SensorEntity P1Meter3c39e72a64e8SmartMeterModel => new(_haContext, "sensor.p1_meter_3c39e72a64e8_smart_meter_model");
    ///<summary>P1 meter (3c39e72a64e8) Voltage sags detected phase 1</summary>
    public SensorEntity P1Meter3c39e72a64e8VoltageSagsDetectedL1 => new(_haContext, "sensor.p1_meter_3c39e72a64e8_voltage_sags_detected_l1");
    ///<summary>P1 meter (3c39e72a64e8) Voltage sags detected phase 2</summary>
    public SensorEntity P1Meter3c39e72a64e8VoltageSagsDetectedL2 => new(_haContext, "sensor.p1_meter_3c39e72a64e8_voltage_sags_detected_l2");
    ///<summary>P1 meter (3c39e72a64e8) Voltage sags detected phase 3</summary>
    public SensorEntity P1Meter3c39e72a64e8VoltageSagsDetectedL3 => new(_haContext, "sensor.p1_meter_3c39e72a64e8_voltage_sags_detected_l3");
    ///<summary>P1 meter (3c39e72a64e8) Voltage swells detected phase 1</summary>
    public SensorEntity P1Meter3c39e72a64e8VoltageSwellsDetectedL1 => new(_haContext, "sensor.p1_meter_3c39e72a64e8_voltage_swells_detected_l1");
    ///<summary>P1 meter (3c39e72a64e8) Voltage swells detected phase 2</summary>
    public SensorEntity P1Meter3c39e72a64e8VoltageSwellsDetectedL2 => new(_haContext, "sensor.p1_meter_3c39e72a64e8_voltage_swells_detected_l2");
    ///<summary>P1 meter (3c39e72a64e8) Voltage swells detected phase 3</summary>
    public SensorEntity P1Meter3c39e72a64e8VoltageSwellsDetectedL3 => new(_haContext, "sensor.p1_meter_3c39e72a64e8_voltage_swells_detected_l3");
    ///<summary>P1 meter (3c39e72a64e8) Wi-Fi SSID</summary>
    public SensorEntity P1Meter3c39e72a64e8WiFiSsid => new(_haContext, "sensor.p1_meter_3c39e72a64e8_wi_fi_ssid");
    ///<summary>P1 meter DSMR versie</summary>
    public SensorEntity P1MeterDsmrVersie => new(_haContext, "sensor.p1_meter_dsmr_versie");
    ///<summary>P1 meter Slimme meter identificatie</summary>
    public SensorEntity P1MeterSlimmeMeterIdentificatie => new(_haContext, "sensor.p1_meter_slimme_meter_identificatie");
    ///<summary>P1 meter Slimme meter model</summary>
    public SensorEntity P1MeterSlimmeMeterModel => new(_haContext, "sensor.p1_meter_slimme_meter_model");
    ///<summary>P1 meter Tarief</summary>
    public SensorEntity P1MeterTarief => new(_haContext, "sensor.p1_meter_tarief");
    ///<summary>P1 meter Voltage sags detected phase 1</summary>
    public SensorEntity P1MeterVoltageSagsDetectedPhase1 => new(_haContext, "sensor.p1_meter_voltage_sags_detected_phase_1");
    ///<summary>P1 meter Voltage swells detected phase 1</summary>
    public SensorEntity P1MeterVoltageSwellsDetectedPhase1 => new(_haContext, "sensor.p1_meter_voltage_swells_detected_phase_1");
    ///<summary>P1 meter Wi-Fi SSID</summary>
    public SensorEntity P1MeterWiFiSsid => new(_haContext, "sensor.p1_meter_wi_fi_ssid");
    ///<summary>paper_pickup_day</summary>
    public SensorEntity PaperPickupDay => new(_haContext, "sensor.paper_pickup_day");
    ///<summary>pc_huidigekloksnelheid</summary>
    public SensorEntity PcHuidigekloksnelheid => new(_haContext, "sensor.pc_huidigekloksnelheid");
    ///<summary>pc_opslag_c</summary>
    public SensorEntity PcOpslagC => new(_haContext, "sensor.pc_opslag_c");
    ///<summary>pc_opslag_d</summary>
    public SensorEntity PcOpslagD => new(_haContext, "sensor.pc_opslag_d");
    ///<summary>Home Assistant Aanhoudende meldingen</summary>
    public SensorEntity PersistentNotifications => new(_haContext, "sensor.persistent_notifications");
    ///<summary>Home Assistant Personen</summary>
    public SensorEntity Persons => new(_haContext, "sensor.persons");
    ///<summary>PetSnowy Voer Genoeg</summary>
    public SensorEntity PetsnowyFeederFoodEnough => new(_haContext, "sensor.petsnowy_feeder_food_enough");
    ///<summary>PetSnowy Voer Warnings</summary>
    public SensorEntity PetsnowyFeederWarnings => new(_haContext, "sensor.petsnowy_feeder_warnings");
    ///<summary>PetSnowy Fontijn Schoonmaken over</summary>
    public SensorEntity PetsnowyFountainCleaningDaysRemaining => new(_haContext, "sensor.petsnowy_fountain_cleaning_days_remaining");
    ///<summary>PeySnowy Fontijn Filter Vervangen</summary>
    public SensorEntity PetsnowyFountainFilterDaysRemaining => new(_haContext, "sensor.petsnowy_fountain_filter_days_remaining");
    ///<summary>PetSnowy Litterbox Errors</summary>
    public SensorEntity PetsnowyLitterboxErrors => new(_haContext, "sensor.petsnowy_litterbox_errors");
    ///<summary>PetSnowy Litterbox Filter Remaining</summary>
    public SensorEntity PetsnowyLitterboxFilterRemaining => new(_haContext, "sensor.petsnowy_litterbox_filter_remaining");
    ///<summary>PetSnowy Litterbox Notifications</summary>
    public SensorEntity PetsnowyLitterboxNotifications => new(_haContext, "sensor.petsnowy_litterbox_notifications");
    ///<summary>PetSnowy Litterbox Status</summary>
    public SensorEntity PetsnowyLitterboxStatus => new(_haContext, "sensor.petsnowy_litterbox_status");
    ///<summary>PixelHaveFood</summary>
    public SensorEntity Pixelhavefood => new(_haContext, "sensor.pixelhavefood");
    ///<summary>pmd_pickup_day</summary>
    public SensorEntity PmdPickupDay => new(_haContext, "sensor.pmd_pickup_day");
    ///<summary>Solar production forecast Tijdstip hoogste vermogenspiek - vandaag</summary>
    public SensorEntity PowerHighestPeakTimeToday => new(_haContext, "sensor.power_highest_peak_time_today");
    ///<summary>Solar production forecast Tijdstip hoogste vermogenspiek - morgen</summary>
    public SensorEntity PowerHighestPeakTimeTomorrow => new(_haContext, "sensor.power_highest_peak_time_tomorrow");
    ///<summary>PS5-Vincent activity</summary>
    public SensorEntity Ps5VincentActivity => new(_haContext, "sensor.ps5_vincent_activity");
    ///<summary>PS5TurnOn</summary>
    public SensorEntity Ps5turnon => new(_haContext, "sensor.ps5turnon");
    ///<summary>PSNImage</summary>
    public SensorEntity Psnimage => new(_haContext, "sensor.psnimage");
    ///<summary>PSV</summary>
    public SensorEntity Psv => new(_haContext, "sensor.psv");
    ///<summary>real_time_price</summary>
    public SensorEntity RealTimePrice => new(_haContext, "sensor.real_time_price");
    ///<summary>Home Assistant Afstandsbedieningen</summary>
    public SensorEntity Remotes => new(_haContext, "sensor.remotes");
    ///<summary>RKC Waalwijk</summary>
    public SensorEntity RkcWaalwijk => new(_haContext, "sensor.rkc_waalwijk");
    ///<summary>RollerBlind 0003 Batterij laatst vervangen</summary>
    public SensorEntity Rollerblind0003BatteryLastReplaced => new(_haContext, "sensor.rollerblind_0003_battery_last_replaced");
    ///<summary>RollerBlind 0003 Batterij type</summary>
    public SensorEntity Rollerblind0003BatteryType => new(_haContext, "sensor.rollerblind_0003_battery_type");
    ///<summary>RT-AX88U AiMesh</summary>
    public SensorEntity RtAx88uAimesh => new(_haContext, "sensor.rt_ax88u_aimesh");
    ///<summary>RT-AX88U Boot Time</summary>
    public SensorEntity RtAx88uBootTime => new(_haContext, "sensor.rt_ax88u_boot_time");
    ///<summary>RT-AX88U Connected Devices</summary>
    public SensorEntity RtAx88uConnectedDevices => new(_haContext, "sensor.rt_ax88u_connected_devices");
    ///<summary>RT-AX88U Connected GuestNetwork Devices</summary>
    public SensorEntity RtAx88uConnectedGuestnetworkDevices => new(_haContext, "sensor.rt_ax88u_connected_guestnetwork_devices");
    ///<summary>RT-AX88U Latest Connected</summary>
    public SensorEntity RtAx88uLatestConnected => new(_haContext, "sensor.rt_ax88u_latest_connected");
    ///<summary>RT-AX88U Load Average (1 min)</summary>
    public SensorEntity RtAx88uLoadAverage1Min => new(_haContext, "sensor.rt_ax88u_load_average_1_min");
    ///<summary>RT-AX88U Load Average (15 min)</summary>
    public SensorEntity RtAx88uLoadAverage15Min => new(_haContext, "sensor.rt_ax88u_load_average_15_min");
    ///<summary>RT-AX88U Load Average (5 min)</summary>
    public SensorEntity RtAx88uLoadAverage5Min => new(_haContext, "sensor.rt_ax88u_load_average_5_min");
    ///<summary>RT-AX88U WAN IP</summary>
    public SensorEntity RtAx88uWanIp => new(_haContext, "sensor.rt_ax88u_wan_ip");
    ///<summary>RT-AX88U WAN IP (Extra)</summary>
    public SensorEntity RtAx88uWanIpExtra => new(_haContext, "sensor.rt_ax88u_wan_ip_extra");
    ///<summary>RT-AX88U WAN IP (Secondary)</summary>
    public SensorEntity RtAx88uWanIpSecondary => new(_haContext, "sensor.rt_ax88u_wan_ip_secondary");
    ///<summary>RT-AX88U WAN IP (Secondary) (Extra)</summary>
    public SensorEntity RtAx88uWanIpSecondaryExtra => new(_haContext, "sensor.rt_ax88u_wan_ip_secondary_extra");
    ///<summary>SBV Excelsior</summary>
    public SensorEntity SbvExcelsior => new(_haContext, "sensor.sbv_excelsior");
    ///<summary>SC Cambuur</summary>
    public SensorEntity ScCambuur => new(_haContext, "sensor.sc_cambuur");
    ///<summary>sc Heerenveen</summary>
    public SensorEntity ScHeerenveen => new(_haContext, "sensor.sc_heerenveen");
    ///<summary>Home Assistant Scènes</summary>
    public SensorEntity Scenes => new(_haContext, "sensor.scenes");
    ///<summary>Home Assistant Scripts</summary>
    public SensorEntity Scripts => new(_haContext, "sensor.scripts");
    ///<summary>Season</summary>
    public SensorEntity Season => new(_haContext, "sensor.season");
    ///<summary>Home Assistant Selecties</summary>
    public SensorEntity Selects => new(_haContext, "sensor.selects");
    ///<summary>Home Assistant Sensoren</summary>
    public SensorEntity Sensors => new(_haContext, "sensor.sensors");
    ///<summary>Home Assistant Sirenes</summary>
    public SensorEntity Sirens => new(_haContext, "sensor.sirens");
    ///<summary>Slaapkamer Batterij laatst vervangen</summary>
    public SensorEntity SlaapkamerBatteryLastReplaced => new(_haContext, "sensor.slaapkamer_battery_last_replaced");
    ///<summary>Slaapkamer Batterij type</summary>
    public SensorEntity SlaapkamerBatteryType => new(_haContext, "sensor.slaapkamer_battery_type");
    ///<summary>SM-G780G Battery state</summary>
    public SensorEntity SmG780gBatteryState => new(_haContext, "sensor.sm_g780g_battery_state");
    ///<summary>SM-G780G Charger type</summary>
    public SensorEntity SmG780gChargerType => new(_haContext, "sensor.sm_g780g_charger_type");
    ///<summary>Tablet Vincent Battery state</summary>
    public SensorEntity SmT860BatteryState => new(_haContext, "sensor.sm_t860_battery_state");
    ///<summary>Tablet Vincent Charger type</summary>
    public SensorEntity SmT860ChargerType => new(_haContext, "sensor.sm_t860_charger_type");
    ///<summary>Tablet Vincent Do Not Disturb sensor</summary>
    public SensorEntity SmT860DoNotDisturbSensor => new(_haContext, "sensor.sm_t860_do_not_disturb_sensor");
    ///<summary>Tablet Vincent Geocoded location</summary>
    public SensorEntity SmT860GeocodedLocation => new(_haContext, "sensor.sm_t860_geocoded_location");
    ///<summary>Tablet Vincent Wi-Fi BSSID</summary>
    public SensorEntity SmT860WifiBssid => new(_haContext, "sensor.sm_t860_wifi_bssid");
    ///<summary>Tablet Vincent Wi-Fi connection</summary>
    public SensorEntity SmT860WifiConnection => new(_haContext, "sensor.sm_t860_wifi_connection");
    ///<summary>Tablet Vincent Wi-Fi IP address</summary>
    public SensorEntity SmT860WifiIpAddress => new(_haContext, "sensor.sm_t860_wifi_ip_address");
    ///<summary>Smart Series 4000 97AE Mode</summary>
    public SensorEntity SmartSeries400097aeMode => new(_haContext, "sensor.smart_series_4000_97ae_mode");
    ///<summary>Smart Series 4000 97AE Number of sectors</summary>
    public SensorEntity SmartSeries400097aeNumberOfSectors => new(_haContext, "sensor.smart_series_4000_97ae_number_of_sectors");
    ///<summary>Smart Series 4000 97AE Pressure</summary>
    public SensorEntity SmartSeries400097aePressure => new(_haContext, "sensor.smart_series_4000_97ae_pressure");
    ///<summary>Smart Series 4000 97AE Sector</summary>
    public SensorEntity SmartSeries400097aeSector => new(_haContext, "sensor.smart_series_4000_97ae_sector");
    ///<summary>Smart Series 4000 97AE Toothbrush State</summary>
    public SensorEntity SmartSeries400097aeToothbrushState => new(_haContext, "sensor.smart_series_4000_97ae_toothbrush_state");
    ///<summary>Soundbar Media Input Source</summary>
    public SensorEntity SoundbarMediaInputSource => new(_haContext, "sensor.soundbar_media_input_source");
    ///<summary>Soundbar Media playback status</summary>
    public SensorEntity SoundbarMediaPlaybackStatus => new(_haContext, "sensor.soundbar_media_playback_status");
    ///<summary>Sparta Rotterdam</summary>
    public SensorEntity SpartaRotterdam => new(_haContext, "sensor.sparta_rotterdam");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Current Track Key</summary>
    public SensorEntity Spotcast1111083559CurrentTrackKey => new(_haContext, "sensor.spotcast_1111083559_current_track_key");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Current Track Mode</summary>
    public SensorEntity Spotcast1111083559CurrentTrackMode => new(_haContext, "sensor.spotcast_1111083559_current_track_mode");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Current Track Time Signature</summary>
    public SensorEntity Spotcast1111083559CurrentTrackTimeSignature => new(_haContext, "sensor.spotcast_1111083559_current_track_time_signature");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Spotify Account Type</summary>
    public SensorEntity Spotcast1111083559SpotifyAccountType => new(_haContext, "sensor.spotcast_1111083559_spotify_account_type");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Spotify Product</summary>
    public SensorEntity Spotcast1111083559SpotifyProduct => new(_haContext, "sensor.spotcast_1111083559_spotify_product");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Spotify Profile</summary>
    public SensorEntity Spotcast1111083559SpotifyProfile => new(_haContext, "sensor.spotcast_1111083559_spotify_profile");
    ///<summary>StatusPetSnowy</summary>
    public SensorEntity Statuspetsnowy => new(_haContext, "sensor.statuspetsnowy");
    ///<summary>vinnie1234</summary>
    public SensorEntity Steam76561198010923314 => new(_haContext, "sensor.steam_76561198010923314");
    ///<summary>Home Assistant Spraak-naar-tekst</summary>
    public SensorEntity Stt => new(_haContext, "sensor.stt");
    ///<summary>Sun Volgende dageraad</summary>
    public SensorEntity SunNextDawn => new(_haContext, "sensor.sun_next_dawn");
    ///<summary>Sun Volgende schemering</summary>
    public SensorEntity SunNextDusk => new(_haContext, "sensor.sun_next_dusk");
    ///<summary>Sun Volgende middernacht</summary>
    public SensorEntity SunNextMidnight => new(_haContext, "sensor.sun_next_midnight");
    ///<summary>Sun Volgende middag</summary>
    public SensorEntity SunNextNoon => new(_haContext, "sensor.sun_next_noon");
    ///<summary>Sun Volgende opkomst</summary>
    public SensorEntity SunNextRising => new(_haContext, "sensor.sun_next_rising");
    ///<summary>Sun Volgende ondergang</summary>
    public SensorEntity SunNextSetting => new(_haContext, "sensor.sun_next_setting");
    ///<summary>Home Assistant Zonnen</summary>
    public SensorEntity Suns => new(_haContext, "sensor.suns");
    ///<summary>Switch badkamer spiegel Batterij laatst vervangen</summary>
    public SensorEntity SwitchBadkamerSpiegelBatteryLastReplaced => new(_haContext, "sensor.switch_badkamer_spiegel_battery_last_replaced");
    ///<summary>Switch badkamer spiegel Batterij type</summary>
    public SensorEntity SwitchBadkamerSpiegelBatteryType => new(_haContext, "sensor.switch_badkamer_spiegel_battery_type");
    ///<summary>Switch Slaapkamer Batterij laatst vervangen</summary>
    public SensorEntity SwitchSlaapkamerBatteryLastReplaced => new(_haContext, "sensor.switch_slaapkamer_battery_last_replaced");
    ///<summary>Switch Slaapkamer Batterij type</summary>
    public SensorEntity SwitchSlaapkamerBatteryType => new(_haContext, "sensor.switch_slaapkamer_battery_type");
    ///<summary>Home Assistant Schakelaars</summary>
    public SensorEntity Switches => new(_haContext, "sensor.switches");
    ///<summary>Sync Box HDMI1 status</summary>
    public SensorEntity SyncBoxHdmi1Status => new(_haContext, "sensor.sync_box_hdmi1_status");
    ///<summary>Sync Box HDMI2 status</summary>
    public SensorEntity SyncBoxHdmi2Status => new(_haContext, "sensor.sync_box_hdmi2_status");
    ///<summary>Sync Box HDMI3 status</summary>
    public SensorEntity SyncBoxHdmi3Status => new(_haContext, "sensor.sync_box_hdmi3_status");
    ///<summary>Sync Box HDMI4 status</summary>
    public SensorEntity SyncBoxHdmi4Status => new(_haContext, "sensor.sync_box_hdmi4_status");
    ///<summary>Home Assistant Teksten</summary>
    public SensorEntity Texts => new(_haContext, "sensor.texts");
    ///<summary>Thuis Nearest device</summary>
    public SensorEntity ThuisNearestDevice => new(_haContext, "sensor.thuis_nearest_device");
    ///<summary>Thuis Nearest direction of travel</summary>
    public SensorEntity ThuisNearestDirectionOfTravel => new(_haContext, "sensor.thuis_nearest_direction_of_travel");
    ///<summary>Thuis Vincent Mobiel direction of travel</summary>
    public SensorEntity ThuisSmS938bDirectionOfTravel => new(_haContext, "sensor.thuis_sm_s938b_direction_of_travel");
    ///<summary>Home Assistant Tijden</summary>
    public SensorEntity Times => new(_haContext, "sensor.times");
    ///<summary>Home Assistant Tekst-naar-spraak</summary>
    public SensorEntity Tts => new(_haContext, "sensor.tts");
    ///<summary>TV Media-ingangsbron</summary>
    public SensorEntity TvMediaInputSource => new(_haContext, "sensor.tv_media_input_source");
    ///<summary>TV Tv-zender</summary>
    public SensorEntity TvTvChannel => new(_haContext, "sensor.tv_tv_channel");
    ///<summary>TV Naam tv-zender</summary>
    public SensorEntity TvTvChannelName => new(_haContext, "sensor.tv_tv_channel_name");
    ///<summary>Home Assistant Update</summary>
    public SensorEntity Update => new(_haContext, "sensor.update");
    ///<summary>Home Assistant Stofzuigers</summary>
    public SensorEntity Vacuums => new(_haContext, "sensor.vacuums");
    ///<summary>Schijfstatus</summary>
    public SensorEntity VincentMaarschalkerweerdSOnedriveSchijfstatus => new(_haContext, "sensor.vincent_maarschalkerweerd_s_onedrive_schijfstatus");
    ///<summary>VINCENT-NAS (Schijf 1) Status</summary>
    public SensorEntity VincentNasSchijf1Status => new(_haContext, "sensor.vincent_nas_schijf_1_status");
    ///<summary>VINCENT-NAS (Volume 1) Status</summary>
    public SensorEntity VincentNasVolume1Status => new(_haContext, "sensor.vincent_nas_volume_1_status");
    ///<summary>Vincent-PC Vincent-PC_geluid Audio Sessions</summary>
    public SensorEntity VincentPcGeluidAudioSessions => new(_haContext, "sensor.vincent_pc_geluid_audio_sessions");
    ///<summary>Vincent-PC Vincent-PC_geluid Default Device</summary>
    public SensorEntity VincentPcGeluidDefaultDevice => new(_haContext, "sensor.vincent_pc_geluid_default_device");
    ///<summary>Vincent-PC Default Device</summary>
    public SensorEntity VincentPcGeluidDefaultDevice2 => new(_haContext, "sensor.vincent_pc_geluid_default_device_2");
    ///<summary>Vincent-PC Vincent-PC_geluid Default Device Muted</summary>
    public SensorEntity VincentPcGeluidDefaultDeviceMuted => new(_haContext, "sensor.vincent_pc_geluid_default_device_muted");
    ///<summary>Vincent-PC Default Device Muted</summary>
    public SensorEntity VincentPcGeluidDefaultDeviceMuted2 => new(_haContext, "sensor.vincent_pc_geluid_default_device_muted_2");
    ///<summary>Vincent-PC Vincent-PC_geluid Default Device State</summary>
    public SensorEntity VincentPcGeluidDefaultDeviceState => new(_haContext, "sensor.vincent_pc_geluid_default_device_state");
    ///<summary>Vincent-PC Default Device State</summary>
    public SensorEntity VincentPcGeluidDefaultDeviceState2 => new(_haContext, "sensor.vincent_pc_geluid_default_device_state_2");
    ///<summary>Vincent-PC Vincent-PC_geluid Default Device Volume</summary>
    public SensorEntity VincentPcGeluidDefaultDeviceVolume => new(_haContext, "sensor.vincent_pc_geluid_default_device_volume");
    ///<summary>Vincent-PC Default Device Volume</summary>
    public SensorEntity VincentPcGeluidDefaultDeviceVolume2 => new(_haContext, "sensor.vincent_pc_geluid_default_device_volume_2");
    ///<summary>Vincent-PC Vincent-PC_geluid Default Input Device</summary>
    public SensorEntity VincentPcGeluidDefaultInputDevice => new(_haContext, "sensor.vincent_pc_geluid_default_input_device");
    ///<summary>Vincent-PC Default Input Device</summary>
    public SensorEntity VincentPcGeluidDefaultInputDevice2 => new(_haContext, "sensor.vincent_pc_geluid_default_input_device_2");
    ///<summary>Vincent-PC Vincent-PC_geluid Default Input Device Muted</summary>
    public SensorEntity VincentPcGeluidDefaultInputDeviceMuted => new(_haContext, "sensor.vincent_pc_geluid_default_input_device_muted");
    ///<summary>Vincent-PC Default Input Device Muted</summary>
    public SensorEntity VincentPcGeluidDefaultInputDeviceMuted2 => new(_haContext, "sensor.vincent_pc_geluid_default_input_device_muted_2");
    ///<summary>Vincent-PC Vincent-PC_geluid Default Input Device State</summary>
    public SensorEntity VincentPcGeluidDefaultInputDeviceState => new(_haContext, "sensor.vincent_pc_geluid_default_input_device_state");
    ///<summary>Vincent-PC Default Input Device State</summary>
    public SensorEntity VincentPcGeluidDefaultInputDeviceState2 => new(_haContext, "sensor.vincent_pc_geluid_default_input_device_state_2");
    ///<summary>Vincent-PC Vincent-PC_geluid Default Input Device Volume</summary>
    public SensorEntity VincentPcGeluidDefaultInputDeviceVolume => new(_haContext, "sensor.vincent_pc_geluid_default_input_device_volume");
    ///<summary>Vincent-PC Default Input Device Volume</summary>
    public SensorEntity VincentPcGeluidDefaultInputDeviceVolume2 => new(_haContext, "sensor.vincent_pc_geluid_default_input_device_volume_2");
    ///<summary>Vincent-PC Audio Input Devices</summary>
    public SensorEntity VincentPcGeluidInputDevices => new(_haContext, "sensor.vincent_pc_geluid_input_devices");
    ///<summary>Vincent-PC Audio Output Devices</summary>
    public SensorEntity VincentPcGeluidOutputDevices => new(_haContext, "sensor.vincent_pc_geluid_output_devices");
    ///<summary>Vincent-PC Vincent-PC_geluid Peak Volume</summary>
    public SensorEntity VincentPcGeluidPeakVolume => new(_haContext, "sensor.vincent_pc_geluid_peak_volume");
    ///<summary>Vincent-PC Peak Volume</summary>
    public SensorEntity VincentPcGeluidPeakVolume2 => new(_haContext, "sensor.vincent_pc_geluid_peak_volume_2");
    ///<summary>Vincent-PC Audio Sessions</summary>
    public SensorEntity VincentPcGeluidSessions => new(_haContext, "sensor.vincent_pc_geluid_sessions");
    ///<summary>_laatstopgestart</summary>
    public SensorEntity VincentPcLaatstopgestart => new(_haContext, "sensor.vincent_pc_laatstopgestart");
    ///<summary>Vincent-PC Vincent-PC_laatstopgestart</summary>
    public SensorEntity VincentPcLaatstopgestart2 => new(_haContext, "sensor.vincent_pc_laatstopgestart_2");
    ///<summary>Vincent-PC Vincent-PC_opslag A</summary>
    public SensorEntity VincentPcOpslagA => new(_haContext, "sensor.vincent_pc_opslag_a");
    ///<summary>Vincent-PC Vincent-PC_opslag B</summary>
    public SensorEntity VincentPcOpslagB => new(_haContext, "sensor.vincent_pc_opslag_b");
    ///<summary>Vincent-PC Vincent-PC_opslag C</summary>
    public SensorEntity VincentPcOpslagC => new(_haContext, "sensor.vincent_pc_opslag_c");
    ///<summary>Vincent-PC C</summary>
    public SensorEntity VincentPcOpslagC2 => new(_haContext, "sensor.vincent_pc_opslag_c_2");
    ///<summary>Vincent-PC Vincent-PC_opslag D</summary>
    public SensorEntity VincentPcOpslagD => new(_haContext, "sensor.vincent_pc_opslag_d");
    ///<summary>Vincent-PC D</summary>
    public SensorEntity VincentPcOpslagD2 => new(_haContext, "sensor.vincent_pc_opslag_d_2");
    ///<summary>Vincent-PC Vincent-PC_opslag Total Disk Count</summary>
    public SensorEntity VincentPcOpslagTotalDiskCount => new(_haContext, "sensor.vincent_pc_opslag_total_disk_count");
    ///<summary>Vincent-PC Total Disk Count</summary>
    public SensorEntity VincentPcOpslagTotalDiskCount2 => new(_haContext, "sensor.vincent_pc_opslag_total_disk_count_2");
    ///<summary>Vincent-PC Vincent-PC_windowsupdates Available Driver Updates</summary>
    public SensorEntity VincentPcWindowsupdatesAvailableDriverUpdates => new(_haContext, "sensor.vincent_pc_windowsupdates_available_driver_updates");
    ///<summary>Vincent-PC Vincent-PC_windowsupdates Available Software Updates</summary>
    public SensorEntity VincentPcWindowsupdatesAvailableSoftwareUpdates => new(_haContext, "sensor.vincent_pc_windowsupdates_available_software_updates");
    ///<summary>Vincent-PC Available Driver Updates</summary>
    public SensorEntity VincentPcWindowsupdatesDriverUpdates => new(_haContext, "sensor.vincent_pc_windowsupdates_driver_updates");
    ///<summary>Vincent-PC Vincent-PC_windowsupdates Driver Updates Pending</summary>
    public SensorEntity VincentPcWindowsupdatesDriverUpdatesPending => new(_haContext, "sensor.vincent_pc_windowsupdates_driver_updates_pending");
    ///<summary>Vincent-PC Driver Updates Pending</summary>
    public SensorEntity VincentPcWindowsupdatesDriverUpdatesPending2 => new(_haContext, "sensor.vincent_pc_windowsupdates_driver_updates_pending_2");
    ///<summary>Vincent-PC Available Software Updates</summary>
    public SensorEntity VincentPcWindowsupdatesSoftwareUpdates => new(_haContext, "sensor.vincent_pc_windowsupdates_software_updates");
    ///<summary>Vincent-PC Vincent-PC_windowsupdates Software Updates Pending</summary>
    public SensorEntity VincentPcWindowsupdatesSoftwareUpdatesPending => new(_haContext, "sensor.vincent_pc_windowsupdates_software_updates_pending");
    ///<summary>Vincent-PC Software Updates Pending</summary>
    public SensorEntity VincentPcWindowsupdatesSoftwareUpdatesPending2 => new(_haContext, "sensor.vincent_pc_windowsupdates_software_updates_pending_2");
    ///<summary>Vincent Phone Battery state</summary>
    public SensorEntity VincentPhoneBatteryState => new(_haContext, "sensor.vincent_phone_battery_state");
    ///<summary>Vincent Phone Charger type</summary>
    public SensorEntity VincentPhoneChargerType => new(_haContext, "sensor.vincent_phone_charger_type");
    ///<summary>vinnie1234/HomeAutomation-NetDaemon Laatste commit</summary>
    public SensorEntity Vinnie1234HomeautomationNetdaemonLaatsteCommit => new(_haContext, "sensor.vinnie1234_homeautomation_netdaemon_laatste_commit");
    ///<summary>vinnie1234/HomeAutomation-NetDaemon Laatste discusssie</summary>
    public SensorEntity Vinnie1234HomeautomationNetdaemonLaatsteDiscusssie => new(_haContext, "sensor.vinnie1234_homeautomation_netdaemon_laatste_discusssie");
    ///<summary>vinnie1234/HomeAutomation-NetDaemon Laatste issue</summary>
    public SensorEntity Vinnie1234HomeautomationNetdaemonLaatsteIssue => new(_haContext, "sensor.vinnie1234_homeautomation_netdaemon_laatste_issue");
    ///<summary>vinnie1234/HomeAutomation-NetDaemon Laatste pull request</summary>
    public SensorEntity Vinnie1234HomeautomationNetdaemonLaatstePullRequest => new(_haContext, "sensor.vinnie1234_homeautomation_netdaemon_laatste_pull_request");
    ///<summary>vinnie1234/HomeAutomation-NetDaemon Laatste release</summary>
    public SensorEntity Vinnie1234HomeautomationNetdaemonLaatsteRelease => new(_haContext, "sensor.vinnie1234_homeautomation_netdaemon_laatste_release");
    ///<summary>vinnie1234/HomeAutomation-NetDaemon Laatste tag</summary>
    public SensorEntity Vinnie1234HomeautomationNetdaemonLaatsteTag => new(_haContext, "sensor.vinnie1234_homeautomation_netdaemon_laatste_tag");
    ///<summary>vinnie1234 Laatst online</summary>
    public SensorEntity Vinnie1234LaatstOnline => new(_haContext, "sensor.vinnie1234_laatst_online");
    ///<summary>vinnie1234 Now playing</summary>
    public SensorEntity Vinnie1234NowPlaying => new(_haContext, "sensor.vinnie1234_now_playing");
    ///<summary>vinnie1234 Online ID</summary>
    public SensorEntity Vinnie1234OnlineId => new(_haContext, "sensor.vinnie1234_online_id");
    ///<summary>vinnie1234 Online status</summary>
    public SensorEntity Vinnie1234OnlineStatus => new(_haContext, "sensor.vinnie1234_online_status");
    ///<summary>vinnie1234 Trofee niveau</summary>
    public SensorEntity Vinnie1234TrofeeNiveau => new(_haContext, "sensor.vinnie1234_trofee_niveau");
    ///<summary>Vitesse</summary>
    public SensorEntity Vitesse => new(_haContext, "sensor.vitesse");
    ///<summary>Voordeur Laatste activiteit</summary>
    public SensorEntity VoordeurLastActivity => new(_haContext, "sensor.voordeur_last_activity");
    ///<summary>Voordeur Laatst aangebeld</summary>
    public SensorEntity VoordeurLastDing => new(_haContext, "sensor.voordeur_last_ding");
    ///<summary>Voordeur Laatste beweging</summary>
    public SensorEntity VoordeurLastMotion => new(_haContext, "sensor.voordeur_last_motion");
    ///<summary>Voordeur Volume</summary>
    public SensorEntity VoordeurVolume => new(_haContext, "sensor.voordeur_volume");
    ///<summary>Wasmachine Completion time</summary>
    public SensorEntity WasmachineWasherCompletionTime => new(_haContext, "sensor.wasmachine_washer_completion_time");
    ///<summary>Wasmachine Taakstatus</summary>
    public SensorEntity WasmachineWasherJobState => new(_haContext, "sensor.wasmachine_washer_job_state");
    ///<summary>Wasmachine Machinestatus</summary>
    public SensorEntity WasmachineWasherMachineState => new(_haContext, "sensor.wasmachine_washer_machine_state");
    ///<summary>watchman_last_updated</summary>
    public SensorEntity WatchmanLastUpdated => new(_haContext, "sensor.watchman_last_updated");
    ///<summary>Home Assistant Boilers</summary>
    public SensorEntity WaterHeaters => new(_haContext, "sensor.water_heaters");
    ///<summary>Watermeter (5c2faf0e9b0a) Batterij laatst vervangen</summary>
    public SensorEntity Watermeter5c2faf0e9b0aBatteryLastReplaced => new(_haContext, "sensor.watermeter_5c2faf0e9b0a_battery_last_replaced");
    ///<summary>Watermeter (5c2faf0e9b0a) Batterij type</summary>
    public SensorEntity Watermeter5c2faf0e9b0aBatteryType => new(_haContext, "sensor.watermeter_5c2faf0e9b0a_battery_type");
    ///<summary>Watermeter (5c2faf0e9b0a) Wi-Fi SSID</summary>
    public SensorEntity Watermeter5c2faf0e9b0aWiFiSsid => new(_haContext, "sensor.watermeter_5c2faf0e9b0a_wi_fi_ssid");
    ///<summary>Home Assistant Weer</summary>
    public SensorEntity Weather => new(_haContext, "sensor.weather");
    ///<summary>Woonkamer Batterij laatst vervangen</summary>
    public SensorEntity WoonkamerBatteryLastReplaced => new(_haContext, "sensor.woonkamer_battery_last_replaced");
    ///<summary>Woonkamer Batterij laatst vervangen</summary>
    public SensorEntity WoonkamerBatteryLastReplaced2 => new(_haContext, "sensor.woonkamer_battery_last_replaced_2");
    ///<summary>Woonkamer Batterij type</summary>
    public SensorEntity WoonkamerBatteryType => new(_haContext, "sensor.woonkamer_battery_type");
    ///<summary>Woonkamer Batterij type</summary>
    public SensorEntity WoonkamerBatteryType2 => new(_haContext, "sensor.woonkamer_battery_type_2");
    ///<summary>Woonkamer device</summary>
    public SensorEntity WoonkamerDevice => new(_haContext, "sensor.woonkamer_device");
    ///<summary>Yts Feed 1080</summary>
    public SensorEntity YtsFeed1080 => new(_haContext, "sensor.yts_feed_1080");
    ///<summary>Yts Feed 2160p</summary>
    public SensorEntity YtsFeed2160p => new(_haContext, "sensor.yts_feed_2160p");
    ///<summary>Zedar_feed_block_status</summary>
    public SensorEntity ZedarFeedBlockStatus => new(_haContext, "sensor.zedar_feed_block_status");
    ///<summary>Zedar_food_storage_status</summary>
    public SensorEntity ZedarFoodStorageStatus => new(_haContext, "sensor.zedar_food_storage_status");
    ///<summary>Zedar_meal_plan</summary>
    public SensorEntity ZedarMealPlan => new(_haContext, "sensor.zedar_meal_plan");
    ///<summary>Home Assistant Zones</summary>
    public SensorEntity Zones => new(_haContext, "sensor.zones");
    ///<summary>Repairs Actief</summary>
    public NumericSensorEntity ActiveIssues => new(_haContext, "sensor.active_issues");
    ///<summary>All standby energy</summary>
    public NumericSensorEntity AllStandbyEnergy => new(_haContext, "sensor.all_standby_energy");
    ///<summary>All standby power</summary>
    public NumericSensorEntity AllStandbyPower => new(_haContext, "sensor.all_standby_power");
    ///<summary>Badkamer Batterij</summary>
    public NumericSensorEntity BadkamerBattery => new(_haContext, "sensor.badkamer_battery");
    ///<summary>Badkamer Batterij</summary>
    public NumericSensorEntity BadkamerBattery2 => new(_haContext, "sensor.badkamer_battery_2");
    ///<summary>Badkamer Batterij+</summary>
    public NumericSensorEntity BadkamerBatteryPlus => new(_haContext, "sensor.badkamer_battery_plus");
    ///<summary>Badkamer Batterij+</summary>
    public NumericSensorEntity BadkamerBatteryPlus2 => new(_haContext, "sensor.badkamer_battery_plus_2");
    ///<summary>BadkamerMotion Batterij+</summary>
    public NumericSensorEntity BadkamerBatteryPlus3 => new(_haContext, "sensor.badkamer_battery_plus_3");
    ///<summary>Badkamer Illuminance</summary>
    public NumericSensorEntity BadkamerIlluminance => new(_haContext, "sensor.badkamer_illuminance");
    ///<summary>Badkamer Temperature</summary>
    public NumericSensorEntity BadkamerTemperature => new(_haContext, "sensor.badkamer_temperature");
    ///<summary>BadkamerMotion Batterij</summary>
    public NumericSensorEntity BadkamermotionBattery => new(_haContext, "sensor.badkamermotion_battery");
    ///<summary>Devices with Critical Battery Status</summary>
    public NumericSensorEntity BatteryDevicesCritical => new(_haContext, "sensor.battery_devices_critical");
    ///<summary>Devices with Battery Warning</summary>
    public NumericSensorEntity BatteryDevicesWarning => new(_haContext, "sensor.battery_devices_warning");
    ///<summary>Berging Batterij</summary>
    public NumericSensorEntity BergingBattery => new(_haContext, "sensor.berging_battery");
    ///<summary>Berging Batterij+</summary>
    public NumericSensorEntity BergingBatteryPlus => new(_haContext, "sensor.berging_battery_plus");
    ///<summary>Berging Device Energy</summary>
    public NumericSensorEntity BergingDeviceEnergy => new(_haContext, "sensor.berging_device_energy");
    ///<summary>Berging Device Power</summary>
    public NumericSensorEntity BergingDevicePower => new(_haContext, "sensor.berging_device_power");
    ///<summary>Berging Licht</summary>
    public NumericSensorEntity BergingIlluminance => new(_haContext, "sensor.berging_illuminance");
    ///<summary>Berging Licht</summary>
    public NumericSensorEntity BergingLicht => new(_haContext, "sensor.berging_licht");
    ///<summary>Berging Temperatuur</summary>
    public NumericSensorEntity BergingTemperature => new(_haContext, "sensor.berging_temperature");
    ///<summary>Batterij</summary>
    public NumericSensorEntity Bot29ffBatterij => new(_haContext, "sensor.bot_29ff_batterij");
    ///<summary>Bot 29FF Batterij+</summary>
    public NumericSensorEntity Bot29ffBatteryPlus => new(_haContext, "sensor.bot_29ff_battery_plus");
    ///<summary>Bot A801 Batterij</summary>
    public NumericSensorEntity BotA801Battery => new(_haContext, "sensor.bot_a801_battery");
    ///<summary>Bot A801 Batterij+</summary>
    public NumericSensorEntity BotA801BatteryPlus => new(_haContext, "sensor.bot_a801_battery_plus");
    ///<summary>Gevoelstemperatuur</summary>
    public NumericSensorEntity BuienradarFeelTemperature => new(_haContext, "sensor.buienradar_feel_temperature");
    ///<summary>Grondtemperatuur</summary>
    public NumericSensorEntity BuienradarGroundTemperature => new(_haContext, "sensor.buienradar_ground_temperature");
    ///<summary>Luchtvochtigheid</summary>
    public NumericSensorEntity BuienradarHumidity => new(_haContext, "sensor.buienradar_humidity");
    ///<summary>Straling</summary>
    public NumericSensorEntity BuienradarIrradiance => new(_haContext, "sensor.buienradar_irradiance");
    ///<summary>Maximale regen 1d</summary>
    public NumericSensorEntity BuienradarMaximumRain1d => new(_haContext, "sensor.buienradar_maximum_rain_1d");
    ///<summary>Maximale regen 2d</summary>
    public NumericSensorEntity BuienradarMaximumRain2d => new(_haContext, "sensor.buienradar_maximum_rain_2d");
    ///<summary>Maximale regen 3d</summary>
    public NumericSensorEntity BuienradarMaximumRain3d => new(_haContext, "sensor.buienradar_maximum_rain_3d");
    ///<summary>Maximale regen 4d</summary>
    public NumericSensorEntity BuienradarMaximumRain4d => new(_haContext, "sensor.buienradar_maximum_rain_4d");
    ///<summary>Maximale regen 5d</summary>
    public NumericSensorEntity BuienradarMaximumRain5d => new(_haContext, "sensor.buienradar_maximum_rain_5d");
    ///<summary>Minimale regen 1d</summary>
    public NumericSensorEntity BuienradarMinimumRain1d => new(_haContext, "sensor.buienradar_minimum_rain_1d");
    ///<summary>Minimale regen 2d</summary>
    public NumericSensorEntity BuienradarMinimumRain2d => new(_haContext, "sensor.buienradar_minimum_rain_2d");
    ///<summary>Minimale regen 3d</summary>
    public NumericSensorEntity BuienradarMinimumRain3d => new(_haContext, "sensor.buienradar_minimum_rain_3d");
    ///<summary>Minimale regen 4d</summary>
    public NumericSensorEntity BuienradarMinimumRain4d => new(_haContext, "sensor.buienradar_minimum_rain_4d");
    ///<summary>Minimale regen 5d</summary>
    public NumericSensorEntity BuienradarMinimumRain5d => new(_haContext, "sensor.buienradar_minimum_rain_5d");
    ///<summary>Minimale temperatuur 1d</summary>
    public NumericSensorEntity BuienradarMinimumTemperature1d => new(_haContext, "sensor.buienradar_minimum_temperature_1d");
    ///<summary>Minimale temperatuur 2d</summary>
    public NumericSensorEntity BuienradarMinimumTemperature2d => new(_haContext, "sensor.buienradar_minimum_temperature_2d");
    ///<summary>Minimale temperatuur 3d</summary>
    public NumericSensorEntity BuienradarMinimumTemperature3d => new(_haContext, "sensor.buienradar_minimum_temperature_3d");
    ///<summary>Minimale temperatuur 4d</summary>
    public NumericSensorEntity BuienradarMinimumTemperature4d => new(_haContext, "sensor.buienradar_minimum_temperature_4d");
    ///<summary>Minimale temperatuur 5d</summary>
    public NumericSensorEntity BuienradarMinimumTemperature5d => new(_haContext, "sensor.buienradar_minimum_temperature_5d");
    ///<summary>Neerslagintensiteit</summary>
    public NumericSensorEntity BuienradarPrecipitation => new(_haContext, "sensor.buienradar_precipitation");
    ///<summary>Neerslagverwachting gemiddeld</summary>
    public NumericSensorEntity BuienradarPrecipitationForecastAverage => new(_haContext, "sensor.buienradar_precipitation_forecast_average");
    ///<summary>Neerslagverwachting totaal</summary>
    public NumericSensorEntity BuienradarPrecipitationForecastTotal => new(_haContext, "sensor.buienradar_precipitation_forecast_total");
    ///<summary>Druk</summary>
    public NumericSensorEntity BuienradarPressure => new(_haContext, "sensor.buienradar_pressure");
    ///<summary>Regen 1d</summary>
    public NumericSensorEntity BuienradarRain1d => new(_haContext, "sensor.buienradar_rain_1d");
    ///<summary>Regen 2d</summary>
    public NumericSensorEntity BuienradarRain2d => new(_haContext, "sensor.buienradar_rain_2d");
    ///<summary>Regen 3d</summary>
    public NumericSensorEntity BuienradarRain3d => new(_haContext, "sensor.buienradar_rain_3d");
    ///<summary>Regen 4d</summary>
    public NumericSensorEntity BuienradarRain4d => new(_haContext, "sensor.buienradar_rain_4d");
    ///<summary>Regen 5d</summary>
    public NumericSensorEntity BuienradarRain5d => new(_haContext, "sensor.buienradar_rain_5d");
    ///<summary>Regen laatste 24u</summary>
    public NumericSensorEntity BuienradarRainLast24h => new(_haContext, "sensor.buienradar_rain_last_24h");
    ///<summary>Regen laatste uur</summary>
    public NumericSensorEntity BuienradarRainLastHour => new(_haContext, "sensor.buienradar_rain_last_hour");
    ///<summary>Regenkans 1d</summary>
    public NumericSensorEntity BuienradarRainchance1d => new(_haContext, "sensor.buienradar_rainchance_1d");
    ///<summary>Regenkans 2d</summary>
    public NumericSensorEntity BuienradarRainchance2d => new(_haContext, "sensor.buienradar_rainchance_2d");
    ///<summary>Regenkans 3d</summary>
    public NumericSensorEntity BuienradarRainchance3d => new(_haContext, "sensor.buienradar_rainchance_3d");
    ///<summary>Regenkans 4d</summary>
    public NumericSensorEntity BuienradarRainchance4d => new(_haContext, "sensor.buienradar_rainchance_4d");
    ///<summary>Regenkans 5d</summary>
    public NumericSensorEntity BuienradarRainchance5d => new(_haContext, "sensor.buienradar_rainchance_5d");
    ///<summary>Zonkans 1d</summary>
    public NumericSensorEntity BuienradarSunchance1d => new(_haContext, "sensor.buienradar_sunchance_1d");
    ///<summary>Zonkans 2d</summary>
    public NumericSensorEntity BuienradarSunchance2d => new(_haContext, "sensor.buienradar_sunchance_2d");
    ///<summary>Zonkans 3d</summary>
    public NumericSensorEntity BuienradarSunchance3d => new(_haContext, "sensor.buienradar_sunchance_3d");
    ///<summary>Zonkans 4d</summary>
    public NumericSensorEntity BuienradarSunchance4d => new(_haContext, "sensor.buienradar_sunchance_4d");
    ///<summary>Zonkans 5d</summary>
    public NumericSensorEntity BuienradarSunchance5d => new(_haContext, "sensor.buienradar_sunchance_5d");
    ///<summary>Temperatuur</summary>
    public NumericSensorEntity BuienradarTemperature => new(_haContext, "sensor.buienradar_temperature");
    ///<summary>Temperatuur 1d</summary>
    public NumericSensorEntity BuienradarTemperature1d => new(_haContext, "sensor.buienradar_temperature_1d");
    ///<summary>Temperatuur 2d</summary>
    public NumericSensorEntity BuienradarTemperature2d => new(_haContext, "sensor.buienradar_temperature_2d");
    ///<summary>Temperatuur 3d</summary>
    public NumericSensorEntity BuienradarTemperature3d => new(_haContext, "sensor.buienradar_temperature_3d");
    ///<summary>Temperatuur 4d</summary>
    public NumericSensorEntity BuienradarTemperature4d => new(_haContext, "sensor.buienradar_temperature_4d");
    ///<summary>Temperatuur 5d</summary>
    public NumericSensorEntity BuienradarTemperature5d => new(_haContext, "sensor.buienradar_temperature_5d");
    ///<summary>Zichtbaarheid</summary>
    public NumericSensorEntity BuienradarVisibility => new(_haContext, "sensor.buienradar_visibility");
    ///<summary>Windrichting azimut</summary>
    public NumericSensorEntity BuienradarWindDirectionAzimuth => new(_haContext, "sensor.buienradar_wind_direction_azimuth");
    ///<summary>Windrichting azimut 1d</summary>
    public NumericSensorEntity BuienradarWindDirectionAzimuth1d => new(_haContext, "sensor.buienradar_wind_direction_azimuth_1d");
    ///<summary>Windrichting azimut 2d</summary>
    public NumericSensorEntity BuienradarWindDirectionAzimuth2d => new(_haContext, "sensor.buienradar_wind_direction_azimuth_2d");
    ///<summary>Windrichting azimut 3d</summary>
    public NumericSensorEntity BuienradarWindDirectionAzimuth3d => new(_haContext, "sensor.buienradar_wind_direction_azimuth_3d");
    ///<summary>Windrichting azimut 4d</summary>
    public NumericSensorEntity BuienradarWindDirectionAzimuth4d => new(_haContext, "sensor.buienradar_wind_direction_azimuth_4d");
    ///<summary>Windrichting azimut 5d</summary>
    public NumericSensorEntity BuienradarWindDirectionAzimuth5d => new(_haContext, "sensor.buienradar_wind_direction_azimuth_5d");
    ///<summary>Windkracht</summary>
    public NumericSensorEntity BuienradarWindForce => new(_haContext, "sensor.buienradar_wind_force");
    ///<summary>Windkracht 1d</summary>
    public NumericSensorEntity BuienradarWindForce1d => new(_haContext, "sensor.buienradar_wind_force_1d");
    ///<summary>Windkracht 2d</summary>
    public NumericSensorEntity BuienradarWindForce2d => new(_haContext, "sensor.buienradar_wind_force_2d");
    ///<summary>Windkracht 3d</summary>
    public NumericSensorEntity BuienradarWindForce3d => new(_haContext, "sensor.buienradar_wind_force_3d");
    ///<summary>Windkracht 4d</summary>
    public NumericSensorEntity BuienradarWindForce4d => new(_haContext, "sensor.buienradar_wind_force_4d");
    ///<summary>Windkracht 5d</summary>
    public NumericSensorEntity BuienradarWindForce5d => new(_haContext, "sensor.buienradar_wind_force_5d");
    ///<summary>Windvlaag</summary>
    public NumericSensorEntity BuienradarWindGust => new(_haContext, "sensor.buienradar_wind_gust");
    ///<summary>Windsnelheid</summary>
    public NumericSensorEntity BuienradarWindSpeed => new(_haContext, "sensor.buienradar_wind_speed");
    ///<summary>Windsnelheid 1d</summary>
    public NumericSensorEntity BuienradarWindSpeed1d => new(_haContext, "sensor.buienradar_wind_speed_1d");
    ///<summary>Windsnelheid 2d</summary>
    public NumericSensorEntity BuienradarWindSpeed2d => new(_haContext, "sensor.buienradar_wind_speed_2d");
    ///<summary>Windsnelheid 3d</summary>
    public NumericSensorEntity BuienradarWindSpeed3d => new(_haContext, "sensor.buienradar_wind_speed_3d");
    ///<summary>Windsnelheid 4d</summary>
    public NumericSensorEntity BuienradarWindSpeed4d => new(_haContext, "sensor.buienradar_wind_speed_4d");
    ///<summary>Windsnelheid 5d</summary>
    public NumericSensorEntity BuienradarWindSpeed5d => new(_haContext, "sensor.buienradar_wind_speed_5d");
    ///<summary>Buiten deur energy</summary>
    public NumericSensorEntity BuitenDeurEnergy => new(_haContext, "sensor.buiten_deur_energy");
    ///<summary>Buiten deur power</summary>
    public NumericSensorEntity BuitenDeurPower => new(_haContext, "sensor.buiten_deur_power");
    ///<summary>OpenUV Huidig Ozonniveau</summary>
    public NumericSensorEntity CurrentOzoneLevel => new(_haContext, "sensor.current_ozone_level");
    ///<summary>OpenUV Huidige UV-index</summary>
    public NumericSensorEntity CurrentUvIndex => new(_haContext, "sensor.current_uv_index");
    ///<summary>DHL Parcel NL Delivered</summary>
    public NumericSensorEntity DhlParcelNlDelivered => new(_haContext, "sensor.dhl_parcel_nl_delivered");
    ///<summary>DHL Parcel NL Delivering</summary>
    public NumericSensorEntity DhlParcelNlDelivering => new(_haContext, "sensor.dhl_parcel_nl_delivering");
    ///<summary>DHL Parcel NL Packages</summary>
    public NumericSensorEntity DhlParcelNlPackages => new(_haContext, "sensor.dhl_parcel_nl_packages");
    ///<summary>System Monitor Schijfgebruik /</summary>
    public NumericSensorEntity DiskUsePercent => new(_haContext, "sensor.disk_use_percent");
    ///<summary>Solar production forecast Geschatte energieproductie - dit uur</summary>
    public NumericSensorEntity EnergyCurrentHour => new(_haContext, "sensor.energy_current_hour");
    ///<summary>Solar production forecast Geschatte energieproductie - volgend uur</summary>
    public NumericSensorEntity EnergyNextHour => new(_haContext, "sensor.energy_next_hour");
    ///<summary>Solar production forecast Geschatte energieproductie - vandaag</summary>
    public NumericSensorEntity EnergyProductionToday => new(_haContext, "sensor.energy_production_today");
    ///<summary>Solar production forecast Geschatte energieproductie - resterend vandaag</summary>
    public NumericSensorEntity EnergyProductionTodayRemaining => new(_haContext, "sensor.energy_production_today_remaining");
    ///<summary>Solar production forecast Geschatte energieproductie - morgen</summary>
    public NumericSensorEntity EnergyProductionTomorrow => new(_haContext, "sensor.energy_production_tomorrow");
    ///<summary>EnergyKwhNetPriceInCents</summary>
    public NumericSensorEntity Energykwhnetpriceincents => new(_haContext, "sensor.energykwhnetpriceincents");
    ///<summary>EnergyKwhPriceInCent</summary>
    public NumericSensorEntity Energykwhpriceincent => new(_haContext, "sensor.energykwhpriceincent");
    ///<summary>EnergySocket (5c2faf02a546) Vermogen</summary>
    public NumericSensorEntity Energysocket5c2faf02a546ActivePower => new(_haContext, "sensor.energysocket_5c2faf02a546_active_power");
    ///<summary>EnergySocket (5c2faf02a546) Vermogen fase 1</summary>
    public NumericSensorEntity Energysocket5c2faf02a546ActivePowerL1 => new(_haContext, "sensor.energysocket_5c2faf02a546_active_power_l1");
    ///<summary>Warmtepomp Energie</summary>
    public NumericSensorEntity Energysocket5c2faf02a546TotaleEnergieImport => new(_haContext, "sensor.energysocket_5c2faf02a546_totale_energie_import");
    ///<summary>EnergySocket (5c2faf0c7564) Vermogen</summary>
    public NumericSensorEntity Energysocket5c2faf0c7564ActivePower => new(_haContext, "sensor.energysocket_5c2faf0c7564_active_power");
    ///<summary>EnergySocket (5c2faf0c7564) Vermogen fase 1</summary>
    public NumericSensorEntity Energysocket5c2faf0c7564ActivePowerL1 => new(_haContext, "sensor.energysocket_5c2faf0c7564_active_power_l1");
    ///<summary>Ventilatie Energie</summary>
    public NumericSensorEntity Energysocket5c2faf0c7564TotaleEnergieImport => new(_haContext, "sensor.energysocket_5c2faf0c7564_totale_energie_import");
    ///<summary>EnergySocket (5c2faf0d8364) Vermogen</summary>
    public NumericSensorEntity Energysocket5c2faf0d8364ActivePower => new(_haContext, "sensor.energysocket_5c2faf0d8364_active_power");
    ///<summary>EnergySocket (5c2faf0d8364) Vermogen fase 1</summary>
    public NumericSensorEntity Energysocket5c2faf0d8364ActivePowerL1 => new(_haContext, "sensor.energysocket_5c2faf0d8364_active_power_l1");
    ///<summary>Game hoek Energie</summary>
    public NumericSensorEntity Energysocket5c2faf0d8364TotaleEnergieImport => new(_haContext, "sensor.energysocket_5c2faf0d8364_totale_energie_import");
    ///<summary>Energy market price Average - today</summary>
    public NumericSensorEntity EnergyzeroTodayEnergyAveragePrice => new(_haContext, "sensor.energyzero_today_energy_average_price");
    ///<summary>Energy market price Huidig uur</summary>
    public NumericSensorEntity EnergyzeroTodayEnergyCurrentHourPrice => new(_haContext, "sensor.energyzero_today_energy_current_hour_price");
    ///<summary>Energy market price Hours priced equal or lower than current - today</summary>
    public NumericSensorEntity EnergyzeroTodayEnergyHoursPricedEqualOrLower => new(_haContext, "sensor.energyzero_today_energy_hours_priced_equal_or_lower");
    ///<summary>Energy market price Highest price - today</summary>
    public NumericSensorEntity EnergyzeroTodayEnergyMaxPrice => new(_haContext, "sensor.energyzero_today_energy_max_price");
    ///<summary>Energy market price Lowest price - today</summary>
    public NumericSensorEntity EnergyzeroTodayEnergyMinPrice => new(_haContext, "sensor.energyzero_today_energy_min_price");
    ///<summary>Energy market price Next hour</summary>
    public NumericSensorEntity EnergyzeroTodayEnergyNextHourPrice => new(_haContext, "sensor.energyzero_today_energy_next_hour_price");
    ///<summary>Energy market price Current percentage of highest price - today</summary>
    public NumericSensorEntity EnergyzeroTodayEnergyPercentageOfMax => new(_haContext, "sensor.energyzero_today_energy_percentage_of_max");
    ///<summary>Gas market price Huidig uur</summary>
    public NumericSensorEntity EnergyzeroTodayGasCurrentHourPrice => new(_haContext, "sensor.energyzero_today_gas_current_hour_price");
    ///<summary>Gas market price Next hour</summary>
    public NumericSensorEntity EnergyzeroTodayGasNextHourPrice => new(_haContext, "sensor.energyzero_today_gas_next_hour_price");
    ///<summary>EPEX Spot Data Average Price</summary>
    public NumericSensorEntity EpexSpotNlAveragePrice => new(_haContext, "sensor.epex_spot_nl_average_price");
    ///<summary>EPEX Spot Data Buy Volume</summary>
    public NumericSensorEntity EpexSpotNlBuyVolume => new(_haContext, "sensor.epex_spot_nl_buy_volume");
    ///<summary>EPEX Spot Data Highest Price</summary>
    public NumericSensorEntity EpexSpotNlHighestPrice => new(_haContext, "sensor.epex_spot_nl_highest_price");
    ///<summary>EPEX Spot Data Lowest Price</summary>
    public NumericSensorEntity EpexSpotNlLowestPrice => new(_haContext, "sensor.epex_spot_nl_lowest_price");
    ///<summary>EPEX Spot Data Median Price</summary>
    public NumericSensorEntity EpexSpotNlMedianPrice => new(_haContext, "sensor.epex_spot_nl_median_price");
    ///<summary>EPEX Spot Data Net Price</summary>
    public NumericSensorEntity EpexSpotNlNetPrice => new(_haContext, "sensor.epex_spot_nl_net_price");
    ///<summary>EPEX Spot Data Price</summary>
    public NumericSensorEntity EpexSpotNlPrice => new(_haContext, "sensor.epex_spot_nl_price");
    ///<summary>EPEX Spot Data Quantile</summary>
    public NumericSensorEntity EpexSpotNlQuantile => new(_haContext, "sensor.epex_spot_nl_quantile");
    ///<summary>EPEX Spot Data Rank</summary>
    public NumericSensorEntity EpexSpotNlRank => new(_haContext, "sensor.epex_spot_nl_rank");
    ///<summary>EPEX Spot Data Sell Volume</summary>
    public NumericSensorEntity EpexSpotNlSellVolume => new(_haContext, "sensor.epex_spot_nl_sell_volume");
    ///<summary>EPEX Spot Data Volume</summary>
    public NumericSensorEntity EpexSpotNlVolume => new(_haContext, "sensor.epex_spot_nl_volume");
    ///<summary>Gang Batterij</summary>
    public NumericSensorEntity GangBattery => new(_haContext, "sensor.gang_battery");
    ///<summary>Gang Batterij</summary>
    public NumericSensorEntity GangBattery2 => new(_haContext, "sensor.gang_battery_2");
    ///<summary>Gang Batterij+</summary>
    public NumericSensorEntity GangBatteryPlus => new(_haContext, "sensor.gang_battery_plus");
    ///<summary>Gang Batterij+</summary>
    public NumericSensorEntity GangBatteryPlus2 => new(_haContext, "sensor.gang_battery_plus_2");
    ///<summary>Gang Licht</summary>
    public NumericSensorEntity GangIlluminance => new(_haContext, "sensor.gang_illuminance");
    ///<summary>Gang Licht</summary>
    public NumericSensorEntity GangLicht => new(_haContext, "sensor.gang_licht");
    ///<summary>Gang Temperatuur</summary>
    public NumericSensorEntity GangTemperature => new(_haContext, "sensor.gang_temperature");
    ///<summary>GFT keer buiten gezet</summary>
    public NumericSensorEntity GarbagePlacedGft => new(_haContext, "sensor.garbage_placed_gft");
    ///<summary>Glas keer buiten gezet</summary>
    public NumericSensorEntity GarbagePlacedGlas => new(_haContext, "sensor.garbage_placed_glas");
    ///<summary>Karton keer buiten gezet</summary>
    public NumericSensorEntity GarbagePlacedKarton => new(_haContext, "sensor.garbage_placed_karton");
    ///<summary>Papier keer buiten gezet</summary>
    public NumericSensorEntity GarbagePlacedPapier => new(_haContext, "sensor.garbage_placed_papier");
    ///<summary>PMD keer buiten gezet</summary>
    public NumericSensorEntity GarbagePlacedPmd => new(_haContext, "sensor.garbage_placed_pmd");
    ///<summary>Restafval keer buiten gezet</summary>
    public NumericSensorEntity GarbagePlacedRestafval => new(_haContext, "sensor.garbage_placed_restafval");
    ///<summary>Textiel keer buiten gezet</summary>
    public NumericSensorEntity GarbagePlacedTextiel => new(_haContext, "sensor.garbage_placed_textiel");
    ///<summary>Hal Batterij</summary>
    public NumericSensorEntity HalBattery => new(_haContext, "sensor.hal_battery");
    ///<summary>Hal Batterij+</summary>
    public NumericSensorEntity HalBatteryPlus => new(_haContext, "sensor.hal_battery_plus");
    ///<summary>Hal Device Energy</summary>
    public NumericSensorEntity HalDeviceEnergy => new(_haContext, "sensor.hal_device_energy");
    ///<summary>Hal Device Power</summary>
    public NumericSensorEntity HalDevicePower => new(_haContext, "sensor.hal_device_power");
    ///<summary>Hal energy</summary>
    public NumericSensorEntity HalEnergy => new(_haContext, "sensor.hal_energy");
    ///<summary>Hal power</summary>
    public NumericSensorEntity HalPower => new(_haContext, "sensor.hal_power");
    ///<summary>Hue Play Links energy</summary>
    public NumericSensorEntity HuePlayLinksEnergy => new(_haContext, "sensor.hue_play_links_energy");
    ///<summary>Hue Play Links power</summary>
    public NumericSensorEntity HuePlayLinksPower => new(_haContext, "sensor.hue_play_links_power");
    ///<summary>Hue Play Midden energy</summary>
    public NumericSensorEntity HuePlayMiddenEnergy => new(_haContext, "sensor.hue_play_midden_energy");
    ///<summary>Hue Play Midden power</summary>
    public NumericSensorEntity HuePlayMiddenPower => new(_haContext, "sensor.hue_play_midden_power");
    ///<summary>Hue Play Rechts energy</summary>
    public NumericSensorEntity HuePlayRechtsEnergy => new(_haContext, "sensor.hue_play_rechts_energy");
    ///<summary>Hue Play Rechts power</summary>
    public NumericSensorEntity HuePlayRechtsPower => new(_haContext, "sensor.hue_play_rechts_power");
    ///<summary>Repairs Genegeerd</summary>
    public NumericSensorEntity IgnoredIssues => new(_haContext, "sensor.ignored_issues");
    ///<summary>Repairs Totaal</summary>
    public NumericSensorEntity Issues => new(_haContext, "sensor.issues");
    ///<summary>Jaap Afgebroken missies</summary>
    public NumericSensorEntity JaapAfgerokenMissies => new(_haContext, "sensor.jaap_afgeroken_missies");
    ///<summary>Jaap Batterij</summary>
    public NumericSensorEntity JaapBatteryLevel => new(_haContext, "sensor.jaap_battery_level");
    ///<summary>Jaap Batterij+</summary>
    public NumericSensorEntity JaapBatteryPlus => new(_haContext, "sensor.jaap_battery_plus");
    ///<summary>Jaap Gemiddelde missietijd</summary>
    public NumericSensorEntity JaapGemiddeldeMissietijd => new(_haContext, "sensor.jaap_gemiddelde_missietijd");
    ///<summary>Jaap Mislukte missies</summary>
    public NumericSensorEntity JaapMislukteMissies => new(_haContext, "sensor.jaap_mislukte_missies");
    ///<summary>Jaap Succesvolle missies</summary>
    public NumericSensorEntity JaapSuccesvolleMissies => new(_haContext, "sensor.jaap_succesvolle_missies");
    ///<summary>Jaap Totaal aantal missies</summary>
    public NumericSensorEntity JaapTotaalAantalMissies => new(_haContext, "sensor.jaap_totaal_aantal_missies");
    ///<summary>Jaap Totaal schoonmaaktijd</summary>
    public NumericSensorEntity JaapTotaalSchoonmaaktijd => new(_haContext, "sensor.jaap_totaal_schoonmaaktijd");
    ///<summary>Keuken afstandbediening Batterij</summary>
    public NumericSensorEntity KeukenAfstandbediening => new(_haContext, "sensor.keuken_afstandbediening");
    ///<summary>Keuken afstandbediening Batterij+</summary>
    public NumericSensorEntity KeukenAfstandbedieningBatteryPlus => new(_haContext, "sensor.keuken_afstandbediening_battery_plus");
    ///<summary>Keuken energy</summary>
    public NumericSensorEntity KeukenEnergy => new(_haContext, "sensor.keuken_energy");
    ///<summary>Keuken power</summary>
    public NumericSensorEntity KeukenPower => new(_haContext, "sensor.keuken_power");
    ///<summary>Koelkast energy</summary>
    public NumericSensorEntity KoelkastEnergy => new(_haContext, "sensor.koelkast_energy");
    ///<summary>Koelkast power</summary>
    public NumericSensorEntity KoelkastPower => new(_haContext, "sensor.koelkast_power");
    ///<summary>OpenUV Max UV-index</summary>
    public NumericSensorEntity MaxUvIndex => new(_haContext, "sensor.max_uv_index");
    ///<summary>System Monitor Geheugengebruik</summary>
    public NumericSensorEntity MemoryUsePercent => new(_haContext, "sensor.memory_use_percent");
    ///<summary>Nachtkastje energy</summary>
    public NumericSensorEntity NachtkastjeEnergy => new(_haContext, "sensor.nachtkastje_energy");
    ///<summary>Nachtkastje power</summary>
    public NumericSensorEntity NachtkastjePower => new(_haContext, "sensor.nachtkastje_power");
    ///<summary>NestMini9818 energy</summary>
    public NumericSensorEntity Nestmini9818Energy => new(_haContext, "sensor.nestmini9818_energy");
    ///<summary>NestMini9818 power</summary>
    public NumericSensorEntity Nestmini9818Power => new(_haContext, "sensor.nestmini9818_power");
    ///<summary>Network throughput in eth0</summary>
    public NumericSensorEntity NetworkThroughputInEth0 => new(_haContext, "sensor.network_throughput_in_eth0");
    ///<summary>Network throughput out eth0</summary>
    public NumericSensorEntity NetworkThroughputOutEth0 => new(_haContext, "sensor.network_throughput_out_eth0");
    ///<summary>OneDrive Gebruikte opslag</summary>
    public NumericSensorEntity OnedriveGebruikteOpslag => new(_haContext, "sensor.onedrive_gebruikte_opslag");
    ///<summary>OneDrive Resterende opslag</summary>
    public NumericSensorEntity OnedriveResterendeOpslag => new(_haContext, "sensor.onedrive_resterende_opslag");
    ///<summary>P1 meter (3c39e72a64e8) Vermogen</summary>
    public NumericSensorEntity P1Meter3c39e72a64e8ActivePower => new(_haContext, "sensor.p1_meter_3c39e72a64e8_active_power");
    ///<summary>P1 meter (3c39e72a64e8) Vermogen fase 1</summary>
    public NumericSensorEntity P1Meter3c39e72a64e8ActivePowerL1 => new(_haContext, "sensor.p1_meter_3c39e72a64e8_active_power_l1");
    ///<summary>P1 meter (3c39e72a64e8) Vermogen fase 2</summary>
    public NumericSensorEntity P1Meter3c39e72a64e8ActivePowerL2 => new(_haContext, "sensor.p1_meter_3c39e72a64e8_active_power_l2");
    ///<summary>P1 meter (3c39e72a64e8) Vermogen fase 3</summary>
    public NumericSensorEntity P1Meter3c39e72a64e8ActivePowerL3 => new(_haContext, "sensor.p1_meter_3c39e72a64e8_active_power_l3");
    ///<summary>P1 meter (3c39e72a64e8) Energie export</summary>
    public NumericSensorEntity P1Meter3c39e72a64e8TotalPowerExport => new(_haContext, "sensor.p1_meter_3c39e72a64e8_total_power_export");
    ///<summary>P1 meter (3c39e72a64e8) Energie export tarief 1</summary>
    public NumericSensorEntity P1Meter3c39e72a64e8TotalPowerExportT1 => new(_haContext, "sensor.p1_meter_3c39e72a64e8_total_power_export_t1");
    public NumericSensorEntity P1Meter3c39e72a64e8TotalPowerExportT1Compensation => new(_haContext, "sensor.p1_meter_3c39e72a64e8_total_power_export_t1_compensation");
    ///<summary>P1 meter (3c39e72a64e8) Energie export tarief 2</summary>
    public NumericSensorEntity P1Meter3c39e72a64e8TotalPowerExportT2 => new(_haContext, "sensor.p1_meter_3c39e72a64e8_total_power_export_t2");
    public NumericSensorEntity P1Meter3c39e72a64e8TotalPowerExportT2Compensation => new(_haContext, "sensor.p1_meter_3c39e72a64e8_total_power_export_t2_compensation");
    ///<summary>P1 meter (3c39e72a64e8) Energy import</summary>
    public NumericSensorEntity P1Meter3c39e72a64e8TotalPowerImport => new(_haContext, "sensor.p1_meter_3c39e72a64e8_total_power_import");
    ///<summary>P1 meter (3c39e72a64e8) Energie import tarief 1</summary>
    public NumericSensorEntity P1Meter3c39e72a64e8TotalPowerImportT1 => new(_haContext, "sensor.p1_meter_3c39e72a64e8_total_power_import_t1");
    public NumericSensorEntity P1Meter3c39e72a64e8TotalPowerImportT1Cost => new(_haContext, "sensor.p1_meter_3c39e72a64e8_total_power_import_t1_cost");
    ///<summary>P1 meter (3c39e72a64e8) Energie import tarief 2</summary>
    public NumericSensorEntity P1Meter3c39e72a64e8TotalPowerImportT2 => new(_haContext, "sensor.p1_meter_3c39e72a64e8_total_power_import_t2");
    public NumericSensorEntity P1Meter3c39e72a64e8TotalPowerImportT2Cost => new(_haContext, "sensor.p1_meter_3c39e72a64e8_total_power_import_t2_cost");
    ///<summary>P1 meter Energie export</summary>
    public NumericSensorEntity P1MeterEnergieExport => new(_haContext, "sensor.p1_meter_energie_export");
    ///<summary>P1 meter Energie export tarief 1</summary>
    public NumericSensorEntity P1MeterEnergieExportTarief1 => new(_haContext, "sensor.p1_meter_energie_export_tarief_1");
    ///<summary>P1 meter Energie import tarief 1</summary>
    public NumericSensorEntity P1MeterEnergieImportTarief1 => new(_haContext, "sensor.p1_meter_energie_import_tarief_1");
    ///<summary>P1 meter Energie import tarief 2</summary>
    public NumericSensorEntity P1MeterEnergieImportTarief2 => new(_haContext, "sensor.p1_meter_energie_import_tarief_2");
    ///<summary>P1 meter Energy import</summary>
    public NumericSensorEntity P1MeterEnergyImport => new(_haContext, "sensor.p1_meter_energy_import");
    ///<summary>P1 meter Vermogen</summary>
    public NumericSensorEntity P1MeterVermogen => new(_haContext, "sensor.p1_meter_vermogen");
    ///<summary>P1 meter Vermogen fase 1</summary>
    public NumericSensorEntity P1MeterVermogenFase1 => new(_haContext, "sensor.p1_meter_vermogen_fase_1");
    ///<summary>pc_cpubelasting</summary>
    public NumericSensorEntity PcCpubelasting => new(_haContext, "sensor.pc_cpubelasting");
    ///<summary>pc_geheugengebruik</summary>
    public NumericSensorEntity PcGeheugengebruik => new(_haContext, "sensor.pc_geheugengebruik");
    ///<summary>pc_gpubelasting</summary>
    public NumericSensorEntity PcGpubelasting => new(_haContext, "sensor.pc_gpubelasting");
    ///<summary>pc_gputemperatuur</summary>
    public NumericSensorEntity PcGputemperatuur => new(_haContext, "sensor.pc_gputemperatuur");
    ///<summary>ping Round-trip time average</summary>
    public NumericSensorEntity PingRoundTripTimeAverage => new(_haContext, "sensor.ping_round_trip_time_average");
    ///<summary>ping Round-trip time maximum</summary>
    public NumericSensorEntity PingRoundTripTimeMaximum => new(_haContext, "sensor.ping_round_trip_time_maximum");
    ///<summary>ping Round-trip time minimum</summary>
    public NumericSensorEntity PingRoundTripTimeMinimum => new(_haContext, "sensor.ping_round_trip_time_minimum");
    ///<summary>Plafond Badkamer energy</summary>
    public NumericSensorEntity PlafondBadkamerEnergy => new(_haContext, "sensor.plafond_badkamer_energy");
    ///<summary>Plafond Badkamer power</summary>
    public NumericSensorEntity PlafondBadkamerPower => new(_haContext, "sensor.plafond_badkamer_power");
    ///<summary>Plafond Slaapkamer energy</summary>
    public NumericSensorEntity PlafondSlaapkamerEnergy => new(_haContext, "sensor.plafond_slaapkamer_energy");
    ///<summary>Plafond Slaapkamer power</summary>
    public NumericSensorEntity PlafondSlaapkamerPower => new(_haContext, "sensor.plafond_slaapkamer_power");
    ///<summary>Plafond Woonkamer energy</summary>
    public NumericSensorEntity PlafondWoonkamerEnergy => new(_haContext, "sensor.plafond_woonkamer_energy");
    ///<summary>Plafond Woonkamer energy</summary>
    public NumericSensorEntity PlafondWoonkamerEnergy2 => new(_haContext, "sensor.plafond_woonkamer_energy_2");
    ///<summary>Plafond Woonkamer energy</summary>
    public NumericSensorEntity PlafondWoonkamerEnergy3 => new(_haContext, "sensor.plafond_woonkamer_energy_3");
    ///<summary>Plafond Woonkamer power</summary>
    public NumericSensorEntity PlafondWoonkamerPower => new(_haContext, "sensor.plafond_woonkamer_power");
    ///<summary>Plafond Woonkamer power</summary>
    public NumericSensorEntity PlafondWoonkamerPower2 => new(_haContext, "sensor.plafond_woonkamer_power_2");
    ///<summary>Plafond Woonkamer power</summary>
    public NumericSensorEntity PlafondWoonkamerPower3 => new(_haContext, "sensor.plafond_woonkamer_power_3");
    ///<summary>Plug: Bureau Device Energy</summary>
    public NumericSensorEntity PlugBureauDeviceEnergy => new(_haContext, "sensor.plug_bureau_device_energy");
    ///<summary>Plug: Bureau Device Power</summary>
    public NumericSensorEntity PlugBureauDevicePower => new(_haContext, "sensor.plug_bureau_device_power");
    ///<summary>Post NL Delivered</summary>
    public NumericSensorEntity PostNlDelivered => new(_haContext, "sensor.post_nl_delivered");
    ///<summary>Post NL Delivering</summary>
    public NumericSensorEntity PostNlDelivering => new(_haContext, "sensor.post_nl_delivering");
    ///<summary>Post NL Missed Delivery</summary>
    public NumericSensorEntity PostNlMissedDelivery => new(_haContext, "sensor.post_nl_missed_delivery");
    ///<summary>Post NL Packages</summary>
    public NumericSensorEntity PostNlPackages => new(_haContext, "sensor.post_nl_packages");
    ///<summary>Solar production forecast Geschatte energieproductie - nu</summary>
    public NumericSensorEntity PowerProductionNow => new(_haContext, "sensor.power_production_now");
    ///<summary>System Monitor Processortemperatuur</summary>
    public NumericSensorEntity ProcessorTemperature => new(_haContext, "sensor.processor_temperature");
    ///<summary>System Monitor Processor use</summary>
    public NumericSensorEntity ProcessorUse => new(_haContext, "sensor.processor_use");
    ///<summary>RollerBlind 0003 Batterij</summary>
    public NumericSensorEntity Rollerblind0003Batterij => new(_haContext, "sensor.rollerblind_0003_batterij");
    ///<summary>RollerBlind 0003 Batterij+</summary>
    public NumericSensorEntity Rollerblind0003BatteryPlus => new(_haContext, "sensor.rollerblind_0003_battery_plus");
    ///<summary>RouterUptime</summary>
    public NumericSensorEntity Routeruptime => new(_haContext, "sensor.routeruptime");
    ///<summary>RT-AX88U 2.4 GHz Download</summary>
    public NumericSensorEntity RtAx88u24GhzDownload => new(_haContext, "sensor.rt_ax88u_2_4_ghz_download");
    ///<summary>RT-AX88U 2.4 GHz Download Speed</summary>
    public NumericSensorEntity RtAx88u24GhzDownloadSpeed => new(_haContext, "sensor.rt_ax88u_2_4_ghz_download_speed");
    ///<summary>RT-AX88U 2.4 GHz Upload</summary>
    public NumericSensorEntity RtAx88u24GhzUpload => new(_haContext, "sensor.rt_ax88u_2_4_ghz_upload");
    ///<summary>RT-AX88U 2.4 GHz Upload Speed</summary>
    public NumericSensorEntity RtAx88u24GhzUploadSpeed => new(_haContext, "sensor.rt_ax88u_2_4_ghz_upload_speed");
    ///<summary>RT-AX88U 5 GHz Download</summary>
    public NumericSensorEntity RtAx88u5GhzDownload => new(_haContext, "sensor.rt_ax88u_5_ghz_download");
    ///<summary>RT-AX88U 5 GHz Download Speed</summary>
    public NumericSensorEntity RtAx88u5GhzDownloadSpeed => new(_haContext, "sensor.rt_ax88u_5_ghz_download_speed");
    ///<summary>RT-AX88U 5 GHz Upload</summary>
    public NumericSensorEntity RtAx88u5GhzUpload => new(_haContext, "sensor.rt_ax88u_5_ghz_upload");
    ///<summary>RT-AX88U 5 GHz Upload Speed</summary>
    public NumericSensorEntity RtAx88u5GhzUploadSpeed => new(_haContext, "sensor.rt_ax88u_5_ghz_upload_speed");
    ///<summary>RT-AX88U Bridge Download</summary>
    public NumericSensorEntity RtAx88uBridgeDownload => new(_haContext, "sensor.rt_ax88u_bridge_download");
    ///<summary>RT-AX88U Bridge Download Speed</summary>
    public NumericSensorEntity RtAx88uBridgeDownloadSpeed => new(_haContext, "sensor.rt_ax88u_bridge_download_speed");
    ///<summary>RT-AX88U Bridge Upload</summary>
    public NumericSensorEntity RtAx88uBridgeUpload => new(_haContext, "sensor.rt_ax88u_bridge_upload");
    ///<summary>RT-AX88U Bridge Upload Speed</summary>
    public NumericSensorEntity RtAx88uBridgeUploadSpeed => new(_haContext, "sensor.rt_ax88u_bridge_upload_speed");
    ///<summary>RT-AX88U CPU</summary>
    public NumericSensorEntity RtAx88uCpu => new(_haContext, "sensor.rt_ax88u_cpu");
    ///<summary>RT-AX88U RAM</summary>
    public NumericSensorEntity RtAx88uRam => new(_haContext, "sensor.rt_ax88u_ram");
    ///<summary>RT-AX88U Temperature 2.4 GHz</summary>
    public NumericSensorEntity RtAx88uTemperature24Ghz2 => new(_haContext, "sensor.rt_ax88u_temperature_2_4_ghz_2");
    ///<summary>RT-AX88U Temperature 5 GHz</summary>
    public NumericSensorEntity RtAx88uTemperature5Ghz2 => new(_haContext, "sensor.rt_ax88u_temperature_5_ghz_2");
    ///<summary>RT-AX88U Temperature CPU</summary>
    public NumericSensorEntity RtAx88uTemperatureCpu2 => new(_haContext, "sensor.rt_ax88u_temperature_cpu_2");
    ///<summary>RT-AX88U USB Download</summary>
    public NumericSensorEntity RtAx88uUsbDownload => new(_haContext, "sensor.rt_ax88u_usb_download");
    ///<summary>RT-AX88U USB Download Speed</summary>
    public NumericSensorEntity RtAx88uUsbDownloadSpeed => new(_haContext, "sensor.rt_ax88u_usb_download_speed");
    ///<summary>RT-AX88U USB Upload</summary>
    public NumericSensorEntity RtAx88uUsbUpload => new(_haContext, "sensor.rt_ax88u_usb_upload");
    ///<summary>RT-AX88U USB Upload Speed</summary>
    public NumericSensorEntity RtAx88uUsbUploadSpeed => new(_haContext, "sensor.rt_ax88u_usb_upload_speed");
    ///<summary>RT-AX88U WAN Download</summary>
    public NumericSensorEntity RtAx88uWanDownload => new(_haContext, "sensor.rt_ax88u_wan_download");
    ///<summary>RT-AX88U WAN Download Speed</summary>
    public NumericSensorEntity RtAx88uWanDownloadSpeed => new(_haContext, "sensor.rt_ax88u_wan_download_speed");
    ///<summary>RT-AX88U WAN Upload</summary>
    public NumericSensorEntity RtAx88uWanUpload => new(_haContext, "sensor.rt_ax88u_wan_upload");
    ///<summary>RT-AX88U WAN Upload Speed</summary>
    public NumericSensorEntity RtAx88uWanUploadSpeed => new(_haContext, "sensor.rt_ax88u_wan_upload_speed");
    ///<summary>RT-AX88U Wired Download</summary>
    public NumericSensorEntity RtAx88uWiredDownload => new(_haContext, "sensor.rt_ax88u_wired_download");
    ///<summary>RT-AX88U Wired Download Speed</summary>
    public NumericSensorEntity RtAx88uWiredDownloadSpeed => new(_haContext, "sensor.rt_ax88u_wired_download_speed");
    ///<summary>RT-AX88U Wired Upload</summary>
    public NumericSensorEntity RtAx88uWiredUpload => new(_haContext, "sensor.rt_ax88u_wired_upload");
    ///<summary>RT-AX88U Wired Upload Speed</summary>
    public NumericSensorEntity RtAx88uWiredUploadSpeed => new(_haContext, "sensor.rt_ax88u_wired_upload_speed");
    ///<summary>OpenUV Huidtype 1 veilige blootstellingstijd</summary>
    public NumericSensorEntity SkinType1SafeExposureTime => new(_haContext, "sensor.skin_type_1_safe_exposure_time");
    ///<summary>OpenUV Huidtype 2 veilige blootstellingstijd</summary>
    public NumericSensorEntity SkinType2SafeExposureTime => new(_haContext, "sensor.skin_type_2_safe_exposure_time");
    ///<summary>OpenUV Huidtype 3 veilige blootstellingstijd</summary>
    public NumericSensorEntity SkinType3SafeExposureTime => new(_haContext, "sensor.skin_type_3_safe_exposure_time");
    ///<summary>OpenUV Huidtype 4 veilige blootstellingstijd</summary>
    public NumericSensorEntity SkinType4SafeExposureTime => new(_haContext, "sensor.skin_type_4_safe_exposure_time");
    ///<summary>OpenUV Huidtype 5 veilige blootstellingstijd</summary>
    public NumericSensorEntity SkinType5SafeExposureTime => new(_haContext, "sensor.skin_type_5_safe_exposure_time");
    ///<summary>OpenUV Huidtype 6 veilige blootstellingstijd</summary>
    public NumericSensorEntity SkinType6SafeExposureTime => new(_haContext, "sensor.skin_type_6_safe_exposure_time");
    ///<summary>Slaapkamer Batterij</summary>
    public NumericSensorEntity SlaapkamerBattery => new(_haContext, "sensor.slaapkamer_battery");
    ///<summary>Slaapkamer Batterij+</summary>
    public NumericSensorEntity SlaapkamerBatteryPlus => new(_haContext, "sensor.slaapkamer_battery_plus");
    ///<summary>SM-G780G Battery level</summary>
    public NumericSensorEntity SmG780gBatteryLevel => new(_haContext, "sensor.sm_g780g_battery_level");
    ///<summary>Tablet Vincent Battery level</summary>
    public NumericSensorEntity SmT860BatteryLevel => new(_haContext, "sensor.sm_t860_battery_level");
    ///<summary>Tablet Vincent Battery power</summary>
    public NumericSensorEntity SmT860BatteryPower => new(_haContext, "sensor.sm_t860_battery_power");
    ///<summary>Tablet Vincent Remaining charge time</summary>
    public NumericSensorEntity SmT860RemainingChargeTime => new(_haContext, "sensor.sm_t860_remaining_charge_time");
    ///<summary>Smart Series 4000 97AE Battery</summary>
    public NumericSensorEntity SmartSeries400097aeBattery => new(_haContext, "sensor.smart_series_4000_97ae_battery");
    ///<summary>Smart Series 4000 97AE Time</summary>
    public NumericSensorEntity SmartSeries400097aeTime => new(_haContext, "sensor.smart_series_4000_97ae_time");
    ///<summary>Soundbar Energy Meter</summary>
    public NumericSensorEntity SoundbarEnergyMeter => new(_haContext, "sensor.soundbar_energy_meter");
    ///<summary>Soundbar Power Meter</summary>
    public NumericSensorEntity SoundbarPowerMeter => new(_haContext, "sensor.soundbar_power_meter");
    ///<summary>Volume</summary>
    public NumericSensorEntity SoundbarVolume => new(_haContext, "sensor.soundbar_volume");
    ///<summary>SpeedTest Download</summary>
    public NumericSensorEntity SpeedtestDownload => new(_haContext, "sensor.speedtest_download");
    ///<summary>SpeedTest Ping</summary>
    public NumericSensorEntity SpeedtestPing => new(_haContext, "sensor.speedtest_ping");
    ///<summary>SpeedTest Upload</summary>
    public NumericSensorEntity SpeedtestUpload => new(_haContext, "sensor.speedtest_upload");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Current Track Acousticness</summary>
    public NumericSensorEntity Spotcast1111083559CurrentTrackAcousticness => new(_haContext, "sensor.spotcast_1111083559_current_track_acousticness");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Current Track Danceability</summary>
    public NumericSensorEntity Spotcast1111083559CurrentTrackDanceability => new(_haContext, "sensor.spotcast_1111083559_current_track_danceability");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Current Track Energy</summary>
    public NumericSensorEntity Spotcast1111083559CurrentTrackEnergy => new(_haContext, "sensor.spotcast_1111083559_current_track_energy");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Current Track Instrumentalness</summary>
    public NumericSensorEntity Spotcast1111083559CurrentTrackInstrumentalness => new(_haContext, "sensor.spotcast_1111083559_current_track_instrumentalness");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Current Track Liveness</summary>
    public NumericSensorEntity Spotcast1111083559CurrentTrackLiveness => new(_haContext, "sensor.spotcast_1111083559_current_track_liveness");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Current Track Loudness</summary>
    public NumericSensorEntity Spotcast1111083559CurrentTrackLoudness => new(_haContext, "sensor.spotcast_1111083559_current_track_loudness");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Current Track Speechiness</summary>
    public NumericSensorEntity Spotcast1111083559CurrentTrackSpeechiness => new(_haContext, "sensor.spotcast_1111083559_current_track_speechiness");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Current Track Tempo</summary>
    public NumericSensorEntity Spotcast1111083559CurrentTrackTempo => new(_haContext, "sensor.spotcast_1111083559_current_track_tempo");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Current Track Valence</summary>
    public NumericSensorEntity Spotcast1111083559CurrentTrackValence => new(_haContext, "sensor.spotcast_1111083559_current_track_valence");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Spotify Devices</summary>
    public NumericSensorEntity Spotcast1111083559SpotifyDevices => new(_haContext, "sensor.spotcast_1111083559_spotify_devices");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Spotify Followers</summary>
    public NumericSensorEntity Spotcast1111083559SpotifyFollowers => new(_haContext, "sensor.spotcast_1111083559_spotify_followers");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Spotify Liked Songs</summary>
    public NumericSensorEntity Spotcast1111083559SpotifyLikedSongs => new(_haContext, "sensor.spotcast_1111083559_spotify_liked_songs");
    ///<summary>Spotcast - Vincent Maarschalkerweerd Spotify Playlists</summary>
    public NumericSensorEntity Spotcast1111083559SpotifyPlaylists => new(_haContext, "sensor.spotcast_1111083559_spotify_playlists");
    ///<summary>Song tempo</summary>
    public NumericSensorEntity SpotifyVincentMaarschalkerweerdSongTempo => new(_haContext, "sensor.spotify_vincent_maarschalkerweerd_song_tempo");
    ///<summary>Switch badkamer spiegel Batterij</summary>
    public NumericSensorEntity SwitchBadkamerSpiegelBattery => new(_haContext, "sensor.switch_badkamer_spiegel_battery");
    ///<summary>Switch badkamer spiegel Batterij+</summary>
    public NumericSensorEntity SwitchBadkamerSpiegelBatteryPlus => new(_haContext, "sensor.switch_badkamer_spiegel_battery_plus");
    ///<summary>Switch Slaapkamer Batterij</summary>
    public NumericSensorEntity SwitchSlaapkamerBattery => new(_haContext, "sensor.switch_slaapkamer_battery");
    ///<summary>Switch Slaapkamer Batterij+</summary>
    public NumericSensorEntity SwitchSlaapkamerBatteryPlus => new(_haContext, "sensor.switch_slaapkamer_battery_plus");
    ///<summary>Thuis Nearest distance</summary>
    public NumericSensorEntity ThuisNearestDistance => new(_haContext, "sensor.thuis_nearest_distance");
    ///<summary>Thuis Vincent Mobiel afstand</summary>
    public NumericSensorEntity ThuisSmS938bDistance => new(_haContext, "sensor.thuis_sm_s938b_distance");
    ///<summary>TV Energy Meter</summary>
    public NumericSensorEntity TvEnergyMeter => new(_haContext, "sensor.tv_energy_meter");
    ///<summary>TV Kast energy</summary>
    public NumericSensorEntity TvKastEnergy => new(_haContext, "sensor.tv_kast_energy");
    ///<summary>TV Kast power</summary>
    public NumericSensorEntity TvKastPower => new(_haContext, "sensor.tv_kast_power");
    ///<summary>TV Power Meter</summary>
    public NumericSensorEntity TvPowerMeter => new(_haContext, "sensor.tv_power_meter");
    ///<summary>Volume</summary>
    public NumericSensorEntity TvVolume => new(_haContext, "sensor.tv_volume");
    ///<summary>Gebruikte opslag</summary>
    public NumericSensorEntity VincentMaarschalkerweerdSOnedriveGebruikteOpslag => new(_haContext, "sensor.vincent_maarschalkerweerd_s_onedrive_gebruikte_opslag");
    ///<summary>Resterende opslag</summary>
    public NumericSensorEntity VincentMaarschalkerweerdSOnedriveResterendeOpslag => new(_haContext, "sensor.vincent_maarschalkerweerd_s_onedrive_resterende_opslag");
    ///<summary>VINCENT-NAS CPU-gebruik (gebruiker)</summary>
    public NumericSensorEntity VincentNasCpuGebruikGebruiker => new(_haContext, "sensor.vincent_nas_cpu_gebruik_gebruiker");
    ///<summary>VINCENT-NAS CPU-gebruik (totaal)</summary>
    public NumericSensorEntity VincentNasCpuGebruikTotaal => new(_haContext, "sensor.vincent_nas_cpu_gebruik_totaal");
    ///<summary>VINCENT-NAS Gemiddelde CPU-belasting (15 min)</summary>
    public NumericSensorEntity VincentNasCpuLoadAverage15Min => new(_haContext, "sensor.vincent_nas_cpu_load_average_15_min");
    ///<summary>VINCENT-NAS Gemiddelde CPU-belasting (5 min)</summary>
    public NumericSensorEntity VincentNasCpuLoadAverage5Min => new(_haContext, "sensor.vincent_nas_cpu_load_average_5_min");
    ///<summary>VINCENT-NAS Download doorvoer</summary>
    public NumericSensorEntity VincentNasDownloadThroughput => new(_haContext, "sensor.vincent_nas_download_throughput");
    ///<summary>VINCENT-NAS Geheugen beschikbaar (fysiek)</summary>
    public NumericSensorEntity VincentNasGeheugenBeschikbaarFysiek => new(_haContext, "sensor.vincent_nas_geheugen_beschikbaar_fysiek");
    ///<summary>VINCENT-NAS Geheugen beschikbaar (swap)</summary>
    public NumericSensorEntity VincentNasGeheugenBeschikbaarSwap => new(_haContext, "sensor.vincent_nas_geheugen_beschikbaar_swap");
    ///<summary>VINCENT-NAS Geheugengebruik (fysiek)</summary>
    public NumericSensorEntity VincentNasGeheugengebruikFysiek => new(_haContext, "sensor.vincent_nas_geheugengebruik_fysiek");
    ///<summary>VINCENT-NAS Geheugen totaal (real)</summary>
    public NumericSensorEntity VincentNasMemoryTotalReal => new(_haContext, "sensor.vincent_nas_memory_total_real");
    ///<summary>VINCENT-NAS Geheugen totaal (swap)</summary>
    public NumericSensorEntity VincentNasMemoryTotalSwap => new(_haContext, "sensor.vincent_nas_memory_total_swap");
    ///<summary>VINCENT-NAS (Schijf 1) Temperatuur</summary>
    public NumericSensorEntity VincentNasSchijf1Temperatuur => new(_haContext, "sensor.vincent_nas_schijf_1_temperatuur");
    ///<summary>VINCENT-NAS Temperatuur</summary>
    public NumericSensorEntity VincentNasTemperatuur => new(_haContext, "sensor.vincent_nas_temperatuur");
    ///<summary>VINCENT-NAS Upload doorvoer</summary>
    public NumericSensorEntity VincentNasUploadThroughput => new(_haContext, "sensor.vincent_nas_upload_throughput");
    ///<summary>VINCENT-NAS (Volume 1) Gemiddelde schijftemperatuur</summary>
    public NumericSensorEntity VincentNasVolume1AverageDiskTemp => new(_haContext, "sensor.vincent_nas_volume_1_average_disk_temp");
    ///<summary>VINCENT-NAS (Volume 1) Gebruikte ruimte</summary>
    public NumericSensorEntity VincentNasVolume1GebruikteRuimte => new(_haContext, "sensor.vincent_nas_volume_1_gebruikte_ruimte");
    ///<summary>VINCENT-NAS (Volume 1) Volume gebruikt</summary>
    public NumericSensorEntity VincentNasVolume1VolumeGebruikt => new(_haContext, "sensor.vincent_nas_volume_1_volume_gebruikt");
    ///<summary>Vincent-PC Vincent-PC_cpubelasting</summary>
    public NumericSensorEntity VincentPcCpubelasting => new(_haContext, "sensor.vincent_pc_cpubelasting");
    ///<summary>Vincent-PC Vincent-PC_geheugengebruik</summary>
    public NumericSensorEntity VincentPcGeheugengebruik => new(_haContext, "sensor.vincent_pc_geheugengebruik");
    ///<summary>Vincent-PC Vincent-PC_gpubelasting</summary>
    public NumericSensorEntity VincentPcGpubelasting => new(_haContext, "sensor.vincent_pc_gpubelasting");
    ///<summary>Vincent-PC Vincent-PC_gputemperatuur</summary>
    public NumericSensorEntity VincentPcGputemperatuur => new(_haContext, "sensor.vincent_pc_gputemperatuur");
    ///<summary>Vincent-PC Vincent-PC_huidigekloksnelheid</summary>
    public NumericSensorEntity VincentPcHuidigekloksnelheid => new(_haContext, "sensor.vincent_pc_huidigekloksnelheid");
    ///<summary>Vincent Phone Battery level</summary>
    public NumericSensorEntity VincentPhoneBatteryLevel => new(_haContext, "sensor.vincent_phone_battery_level");
    ///<summary>vinnie1234 Bronzen trofeeën</summary>
    public NumericSensorEntity Vinnie1234BronzenTrofeeen => new(_haContext, "sensor.vinnie1234_bronzen_trofeeen");
    ///<summary>vinnie1234 Gouden trofeeën</summary>
    public NumericSensorEntity Vinnie1234GoudenTrofeeen => new(_haContext, "sensor.vinnie1234_gouden_trofeeen");
    ///<summary>vinnie1234/HomeAutomation-NetDaemon Discussies</summary>
    public NumericSensorEntity Vinnie1234HomeautomationNetdaemonDiscussies => new(_haContext, "sensor.vinnie1234_homeautomation_netdaemon_discussies");
    ///<summary>vinnie1234/HomeAutomation-NetDaemon Forks</summary>
    public NumericSensorEntity Vinnie1234HomeautomationNetdaemonForks => new(_haContext, "sensor.vinnie1234_homeautomation_netdaemon_forks");
    ///<summary>vinnie1234/HomeAutomation-NetDaemon Issues</summary>
    public NumericSensorEntity Vinnie1234HomeautomationNetdaemonIssues => new(_haContext, "sensor.vinnie1234_homeautomation_netdaemon_issues");
    ///<summary>vinnie1234/HomeAutomation-NetDaemon Kijkers</summary>
    public NumericSensorEntity Vinnie1234HomeautomationNetdaemonKijkers => new(_haContext, "sensor.vinnie1234_homeautomation_netdaemon_kijkers");
    ///<summary>vinnie1234/HomeAutomation-NetDaemon Pull requests</summary>
    public NumericSensorEntity Vinnie1234HomeautomationNetdaemonPullRequests => new(_haContext, "sensor.vinnie1234_homeautomation_netdaemon_pull_requests");
    ///<summary>vinnie1234/HomeAutomation-NetDaemon Sterren</summary>
    public NumericSensorEntity Vinnie1234HomeautomationNetdaemonSterren => new(_haContext, "sensor.vinnie1234_homeautomation_netdaemon_sterren");
    ///<summary>vinnie1234 Platina trofeeën</summary>
    public NumericSensorEntity Vinnie1234PlatinaTrofeeen => new(_haContext, "sensor.vinnie1234_platina_trofeeen");
    ///<summary>vinnie1234 Volgend niveau</summary>
    public NumericSensorEntity Vinnie1234VolgendNiveau => new(_haContext, "sensor.vinnie1234_volgend_niveau");
    ///<summary>vinnie1234 Zilveren trofeeën</summary>
    public NumericSensorEntity Vinnie1234ZilverenTrofeeen => new(_haContext, "sensor.vinnie1234_zilveren_trofeeen");
    ///<summary>Voordeur Batterij</summary>
    public NumericSensorEntity VoordeurBattery => new(_haContext, "sensor.voordeur_battery");
    ///<summary>Wasmachine Energieverschil</summary>
    public NumericSensorEntity WasmachineDeltaenergy => new(_haContext, "sensor.wasmachine_deltaenergy");
    ///<summary>Wasmachine Energie</summary>
    public NumericSensorEntity WasmachineEnergy => new(_haContext, "sensor.wasmachine_energy");
    ///<summary>Wasmachine Energy Meter</summary>
    public NumericSensorEntity WasmachineEnergyMeter => new(_haContext, "sensor.wasmachine_energy_meter");
    ///<summary>Wasmachine Energie bespaard</summary>
    public NumericSensorEntity WasmachineEnergysaved => new(_haContext, "sensor.wasmachine_energysaved");
    ///<summary>Wasmachine Vermogen</summary>
    public NumericSensorEntity WasmachinePower => new(_haContext, "sensor.wasmachine_power");
    ///<summary>Wasmachine Power Meter</summary>
    public NumericSensorEntity WasmachinePowerMeter => new(_haContext, "sensor.wasmachine_power_meter");
    ///<summary>Wasmachine Power energy</summary>
    public NumericSensorEntity WasmachinePowerenergy => new(_haContext, "sensor.wasmachine_powerenergy");
    ///<summary>watchman_missing_entities</summary>
    public NumericSensorEntity WatchmanMissingEntities => new(_haContext, "sensor.watchman_missing_entities");
    ///<summary>watchman_missing_services</summary>
    public NumericSensorEntity WatchmanMissingServices => new(_haContext, "sensor.watchman_missing_services");
    ///<summary>Water Sensor Douche Batterij</summary>
    public NumericSensorEntity WaterSensorDoucheBatterij => new(_haContext, "sensor.water_sensor_douche_batterij");
    ///<summary>Watermeter (5c2faf0e9b0a) Water gebruik</summary>
    public NumericSensorEntity Watermeter5c2faf0e9b0aActiveWaterUsage => new(_haContext, "sensor.watermeter_5c2faf0e9b0a_active_water_usage");
    ///<summary>Watermeter (5c2faf0e9b0a) Totaal water verbruik</summary>
    public NumericSensorEntity Watermeter5c2faf0e9b0aTotalWaterUsage => new(_haContext, "sensor.watermeter_5c2faf0e9b0a_total_water_usage");
    public NumericSensorEntity Watermeter5c2faf0e9b0aTotalWaterUsageCost => new(_haContext, "sensor.watermeter_5c2faf0e9b0a_total_water_usage_cost");
    ///<summary>Woonkamer Batterij</summary>
    public NumericSensorEntity WoonkamerBattery => new(_haContext, "sensor.woonkamer_battery");
    ///<summary>Woonkamer Batterij</summary>
    public NumericSensorEntity WoonkamerBattery2 => new(_haContext, "sensor.woonkamer_battery_2");
    ///<summary>Woonkamer Batterij+</summary>
    public NumericSensorEntity WoonkamerBatteryPlus => new(_haContext, "sensor.woonkamer_battery_plus");
    ///<summary>Woonkamer Batterij+</summary>
    public NumericSensorEntity WoonkamerBatteryPlus2 => new(_haContext, "sensor.woonkamer_battery_plus_2");
    ///<summary>woonkamer energy</summary>
    public NumericSensorEntity WoonkamerEnergy => new(_haContext, "sensor.woonkamer_energy");
    ///<summary>woonkamer power</summary>
    public NumericSensorEntity WoonkamerPower => new(_haContext, "sensor.woonkamer_power");
    ///<summary>Geschatte afstand</summary>
    public NumericSensorEntity Wsbc002022010sD867GeschatteAfstand => new(_haContext, "sensor.wsbc002022010s_d867_geschatte_afstand");
}

public partial class SunEntities
{
    private readonly IHaContext _haContext;
    public SunEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all sun entities currently registered (at runtime) in Home Assistant as SunEntity</summary>
    public IEnumerable<SunEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("sun.")).Select(e => new SunEntity(e));
    ///<summary>Sun</summary>
    public SunEntity Sun => new(_haContext, "sun.sun");
}

public partial class SwitchEntities
{
    private readonly IHaContext _haContext;
    public SwitchEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all switch entities currently registered (at runtime) in Home Assistant as SwitchEntity</summary>
    public IEnumerable<SwitchEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("switch.")).Select(e => new SwitchEntity(e));
    ///<summary>API data fetching</summary>
    public SwitchEntity ApiDataFetching => new(_haContext, "switch.api_data_fetching");
    ///<summary>Automation: Badkamer</summary>
    public SwitchEntity AutomationBadkamer => new(_haContext, "switch.automation_badkamer");
    ///<summary>Automation: Badkamer</summary>
    public SwitchEntity AutomationBadkamer2 => new(_haContext, "switch.automation_badkamer_2");
    ///<summary>Automation: Badkamer</summary>
    public SwitchEntity AutomationBadkamer3 => new(_haContext, "switch.automation_badkamer_3");
    ///<summary>Automation: Berging</summary>
    public SwitchEntity AutomationBerging => new(_haContext, "switch.automation_berging");
    ///<summary>Automation: Gang</summary>
    public SwitchEntity AutomationGang => new(_haContext, "switch.automation_gang");
    ///<summary>Automation: Gang</summary>
    public SwitchEntity AutomationGang2 => new(_haContext, "switch.automation_gang_2");
    ///<summary>Automation: Hal</summary>
    public SwitchEntity AutomationHal => new(_haContext, "switch.automation_hal");
    ///<summary>Automation: Slaapkamer</summary>
    public SwitchEntity AutomationSlaapkamer => new(_haContext, "switch.automation_slaapkamer");
    ///<summary>Automation: state_after_streaming</summary>
    public SwitchEntity AutomationStateAfterStreaming => new(_haContext, "switch.automation_state_after_streaming");
    ///<summary>Automation: Switch badkamer spiegel</summary>
    public SwitchEntity AutomationSwitchBadkamerSpiegel => new(_haContext, "switch.automation_switch_badkamer_spiegel");
    ///<summary>Automation: Switch Slaapkamer</summary>
    public SwitchEntity AutomationSwitchSlaapkamer => new(_haContext, "switch.automation_switch_slaapkamer");
    ///<summary>Automation: Thuiskomen</summary>
    public SwitchEntity AutomationThuiskomen => new(_haContext, "switch.automation_thuiskomen");
    ///<summary>Automation: Weg van huis</summary>
    public SwitchEntity AutomationWegVanHuis => new(_haContext, "switch.automation_weg_van_huis");
    ///<summary>Automation: Woonkamer</summary>
    public SwitchEntity AutomationWoonkamer => new(_haContext, "switch.automation_woonkamer");
    ///<summary>Badkamer Illuminance</summary>
    public SwitchEntity BadkamerIlluminance => new(_haContext, "switch.badkamer_illuminance");
    ///<summary>Badkamer Motion</summary>
    public SwitchEntity BadkamerMotion => new(_haContext, "switch.badkamer_motion");
    ///<summary>Badkamer Speaker Do Not Disturb</summary>
    public SwitchEntity BadkamerSpeakerDoNotDisturb => new(_haContext, "switch.badkamer_speaker_do_not_disturb");
    ///<summary>Berging Lichtsensor ingeschakeld</summary>
    public SwitchEntity BergingIlluminance => new(_haContext, "switch.berging_illuminance");
    ///<summary>Berging Bewegingssensor ingeschakeld</summary>
    public SwitchEntity BergingMotion => new(_haContext, "switch.berging_motion");
    public SwitchEntity Bot29ff => new(_haContext, "switch.bot_29ff");
    ///<summary>Galarij deur</summary>
    public SwitchEntity BotA801 => new(_haContext, "switch.bot_a801");
    ///<summary>EnergySocket (5c2faf02a546) Cloud verbinding</summary>
    public SwitchEntity Energysocket5c2faf02a546CloudConnection => new(_haContext, "switch.energysocket_5c2faf02a546_cloud_connection");
    ///<summary>EnergySocket (5c2faf02a546) Schakelslot</summary>
    public SwitchEntity Energysocket5c2faf02a546SwitchLock => new(_haContext, "switch.energysocket_5c2faf02a546_switch_lock");
    ///<summary>EnergySocket (5c2faf0c7564) Cloud verbinding</summary>
    public SwitchEntity Energysocket5c2faf0c7564CloudConnection => new(_haContext, "switch.energysocket_5c2faf0c7564_cloud_connection");
    ///<summary>EnergySocket (5c2faf0c7564) Schakelslot</summary>
    public SwitchEntity Energysocket5c2faf0c7564SwitchLock => new(_haContext, "switch.energysocket_5c2faf0c7564_switch_lock");
    ///<summary>EnergySocket (5c2faf0d8364) Cloud verbinding</summary>
    public SwitchEntity Energysocket5c2faf0d8364CloudConnection => new(_haContext, "switch.energysocket_5c2faf0d8364_cloud_connection");
    ///<summary>EnergySocket (5c2faf0d8364) Schakelslot</summary>
    public SwitchEntity Energysocket5c2faf0d8364SwitchLock => new(_haContext, "switch.energysocket_5c2faf0d8364_switch_lock");
    ///<summary>Gang Lichtsensor ingeschakeld</summary>
    public SwitchEntity GangIlluminance => new(_haContext, "switch.gang_illuminance");
    ///<summary>Gang Bewegingssensor ingeschakeld</summary>
    public SwitchEntity GangMotion => new(_haContext, "switch.gang_motion");
    ///<summary>Gang Speaker 1 Do Not Disturb</summary>
    public SwitchEntity GangSpeaker1DoNotDisturb => new(_haContext, "switch.gang_speaker_1_do_not_disturb");
    ///<summary>Hub Vincent Do Not Disturb</summary>
    public SwitchEntity HubVincentDoNotDisturb => new(_haContext, "switch.hub_vincent_do_not_disturb");
    ///<summary>Keuken Do Not Disturb</summary>
    public SwitchEntity KeukenDoNotDisturb => new(_haContext, "switch.keuken_do_not_disturb");
    ///<summary>P1 meter (3c39e72a64e8) Cloud verbinding</summary>
    public SwitchEntity P1Meter3c39e72a64e8CloudConnection => new(_haContext, "switch.p1_meter_3c39e72a64e8_cloud_connection");
    ///<summary>P1 meter Cloud verbinding</summary>
    public SwitchEntity P1MeterCloudVerbinding => new(_haContext, "switch.p1_meter_cloud_verbinding");
    ///<summary>PetSnowy Fontijn Aan</summary>
    public SwitchEntity PetsnowyFountainIson => new(_haContext, "switch.petsnowy_fountain_ison");
    ///<summary>PetSnowy Licht</summary>
    public SwitchEntity PetsnowyFountainLight => new(_haContext, "switch.petsnowy_fountain_light");
    ///<summary>PetSnowy Litterbox Auto Clean</summary>
    public SwitchEntity PetsnowyLitterboxAutoClean => new(_haContext, "switch.petsnowy_litterbox_auto_clean");
    ///<summary>PetSnowy Litterbox Auto Deodorization</summary>
    public SwitchEntity PetsnowyLitterboxAutoDeodorization => new(_haContext, "switch.petsnowy_litterbox_auto_deodorization");
    ///<summary>PetSnowy Litterbox Child Safety Lock</summary>
    public SwitchEntity PetsnowyLitterboxChildSafetyLock => new(_haContext, "switch.petsnowy_litterbox_child_safety_lock");
    ///<summary>PetSnowy Litterbox DND Mode</summary>
    public SwitchEntity PetsnowyLitterboxDndMode => new(_haContext, "switch.petsnowy_litterbox_dnd_mode");
    ///<summary>PetSnowy Litterbox Light</summary>
    public SwitchEntity PetsnowyLitterboxLight => new(_haContext, "switch.petsnowy_litterbox_light");
    ///<summary>PetSnowy Litterbox Scheduled Clean Cycle</summary>
    public SwitchEntity PetsnowyLitterboxScheduledCleanCycle => new(_haContext, "switch.petsnowy_litterbox_scheduled_clean_cycle");
    ///<summary>PetSnowy Litterbox Scheduled Deodorization</summary>
    public SwitchEntity PetsnowyLitterboxScheduledDeodorization => new(_haContext, "switch.petsnowy_litterbox_scheduled_deodorization");
    ///<summary>PS5</summary>
    public SwitchEntity Ps5VincentPower => new(_haContext, "switch.ps5_vincent_power");
    ///<summary>RT-AX88U Block Internet</summary>
    public SwitchEntity RtAx88uBlockInternet => new(_haContext, "switch.rt_ax88u_block_internet");
    ///<summary>RT-AX88U Guest 2.4 GHz 1</summary>
    public SwitchEntity RtAx88uGuest24Ghz1 => new(_haContext, "switch.rt_ax88u_guest_2_4_ghz_1");
    ///<summary>IOT Network</summary>
    public SwitchEntity RtAx88uGuest24Ghz2 => new(_haContext, "switch.rt_ax88u_guest_2_4_ghz_2");
    ///<summary>RT-AX88U Guest 2.4 GHz 3</summary>
    public SwitchEntity RtAx88uGuest24Ghz3 => new(_haContext, "switch.rt_ax88u_guest_2_4_ghz_3");
    ///<summary>RT-AX88U Guest 5 GHz 1</summary>
    public SwitchEntity RtAx88uGuest5Ghz1 => new(_haContext, "switch.rt_ax88u_guest_5_ghz_1");
    ///<summary>RT-AX88U Guest 5 GHz 2</summary>
    public SwitchEntity RtAx88uGuest5Ghz2 => new(_haContext, "switch.rt_ax88u_guest_5_ghz_2");
    ///<summary>RT-AX88U Guest 5 GHz 3</summary>
    public SwitchEntity RtAx88uGuest5Ghz3 => new(_haContext, "switch.rt_ax88u_guest_5_ghz_3");
    ///<summary>RT-AX88U OpenVPN Client 1</summary>
    public SwitchEntity RtAx88uOpenvpnClient1 => new(_haContext, "switch.rt_ax88u_openvpn_client_1");
    ///<summary>RT-AX88U OpenVPN Client 2</summary>
    public SwitchEntity RtAx88uOpenvpnClient2 => new(_haContext, "switch.rt_ax88u_openvpn_client_2");
    ///<summary>RT-AX88U OpenVPN Client 3</summary>
    public SwitchEntity RtAx88uOpenvpnClient3 => new(_haContext, "switch.rt_ax88u_openvpn_client_3");
    ///<summary>RT-AX88U OpenVPN Client 4</summary>
    public SwitchEntity RtAx88uOpenvpnClient4 => new(_haContext, "switch.rt_ax88u_openvpn_client_4");
    ///<summary>RT-AX88U OpenVPN Client 5</summary>
    public SwitchEntity RtAx88uOpenvpnClient5 => new(_haContext, "switch.rt_ax88u_openvpn_client_5");
    ///<summary>RT-AX88U OpenVPN Server 1</summary>
    public SwitchEntity RtAx88uOpenvpnServer1 => new(_haContext, "switch.rt_ax88u_openvpn_server_1");
    ///<summary>RT-AX88U OpenVPN Server 2</summary>
    public SwitchEntity RtAx88uOpenvpnServer2 => new(_haContext, "switch.rt_ax88u_openvpn_server_2");
    ///<summary>RT-AX88U Parental control</summary>
    public SwitchEntity RtAx88uParentalControl => new(_haContext, "switch.rt_ax88u_parental_control");
    ///<summary>RT-AX88U Port forwarding</summary>
    public SwitchEntity RtAx88uPortForwarding => new(_haContext, "switch.rt_ax88u_port_forwarding");
    ///<summary>RT-AX88U WireGuard Client 1</summary>
    public SwitchEntity RtAx88uWireguardClient1 => new(_haContext, "switch.rt_ax88u_wireguard_client_1");
    ///<summary>RT-AX88U WireGuard Client 2</summary>
    public SwitchEntity RtAx88uWireguardClient2 => new(_haContext, "switch.rt_ax88u_wireguard_client_2");
    ///<summary>RT-AX88U WireGuard Client 3</summary>
    public SwitchEntity RtAx88uWireguardClient3 => new(_haContext, "switch.rt_ax88u_wireguard_client_3");
    ///<summary>RT-AX88U WireGuard Client 4</summary>
    public SwitchEntity RtAx88uWireguardClient4 => new(_haContext, "switch.rt_ax88u_wireguard_client_4");
    ///<summary>RT-AX88U WireGuard Client 5</summary>
    public SwitchEntity RtAx88uWireguardClient5 => new(_haContext, "switch.rt_ax88u_wireguard_client_5");
    ///<summary>RT-AX88U WireGuard Server 1</summary>
    public SwitchEntity RtAx88uWireguardServer1 => new(_haContext, "switch.rt_ax88u_wireguard_server_1");
    ///<summary>RT-AX88U Wireless 2.4 GHz</summary>
    public SwitchEntity RtAx88uWireless24Ghz => new(_haContext, "switch.rt_ax88u_wireless_2_4_ghz");
    ///<summary>RT-AX88U Wireless 5 GHz</summary>
    public SwitchEntity RtAx88uWireless5Ghz => new(_haContext, "switch.rt_ax88u_wireless_5_ghz");
    ///<summary>Soundbar</summary>
    public SwitchEntity Soundbar => new(_haContext, "switch.soundbar");
    ///<summary>Sync Box Dolby Vision compatibiliteit</summary>
    public SwitchEntity SyncBoxDolbyVisionCompatibility => new(_haContext, "switch.sync_box_dolby_vision_compatibility");
    ///<summary>Sync Box Synchroniseren</summary>
    public SwitchEntity SyncBoxLightSync => new(_haContext, "switch.sync_box_light_sync");
    ///<summary>Sync Box Ingeschakeld</summary>
    public SwitchEntity SyncBoxPower => new(_haContext, "switch.sync_box_power");
    ///<summary>TV</summary>
    public SwitchEntity Tv => new(_haContext, "switch.tv");
    ///<summary>Voordeur Bewegingsdetectie</summary>
    public SwitchEntity VoordeurMotionDetection => new(_haContext, "switch.voordeur_motion_detection");
    ///<summary>Wake on LAN</summary>
    public SwitchEntity WakeOnLan => new(_haContext, "switch.wake_on_lan");
    ///<summary>Wasmachine</summary>
    public SwitchEntity Wasmachine => new(_haContext, "switch.wasmachine");
    ///<summary>Wasmachine Bubble Soak</summary>
    public SwitchEntity WasmachineBubbleSoak => new(_haContext, "switch.wasmachine_bubble_soak");
    ///<summary>Watermeter (5c2faf0e9b0a) Cloud verbinding</summary>
    public SwitchEntity Watermeter5c2faf0e9b0aCloudVerbinding => new(_haContext, "switch.watermeter_5c2faf0e9b0a_cloud_verbinding");
    ///<summary>Woonkamer Do Not Disturb</summary>
    public SwitchEntity WoonkamerDoNotDisturb => new(_haContext, "switch.woonkamer_do_not_disturb");
    ///<summary>Zedar_light</summary>
    public SwitchEntity ZedarLight => new(_haContext, "switch.zedar_light");
}

public partial class UpdateEntities
{
    private readonly IHaContext _haContext;
    public UpdateEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all update entities currently registered (at runtime) in Home Assistant as UpdateEntity</summary>
    public IEnumerable<UpdateEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("update.")).Select(e => new UpdateEntity(e));
    ///<summary>ACV garbage collection sensor update</summary>
    public UpdateEntity AcvGarbageCollectionSensorUpdate => new(_haContext, "update.acv_garbage_collection_sensor_update");
    ///<summary>Advanced SSH &amp; Web Terminal Update</summary>
    public UpdateEntity AdvancedSshWebTerminalUpdate => new(_haContext, "update.advanced_ssh_web_terminal_update");
    ///<summary>apexcharts-card update</summary>
    public UpdateEntity ApexchartsCardUpdate => new(_haContext, "update.apexcharts_card_update");
    ///<summary>AsusRouter update</summary>
    public UpdateEntity AsusrouterUpdate => new(_haContext, "update.asusrouter_update");
    ///<summary>auto-entities update</summary>
    public UpdateEntity AutoEntitiesUpdate => new(_haContext, "update.auto_entities_update");
    ///<summary>Mushroom Dashboard Strategy update</summary>
    public UpdateEntity AutoGeneratingMushroomDashboardStrategyUpdate => new(_haContext, "update.auto_generating_mushroom_dashboard_strategy_update");
    ///<summary>Auto Reload update</summary>
    public UpdateEntity AutoReloadUpdate => new(_haContext, "update.auto_reload_update");
    ///<summary>Banner Card update</summary>
    public UpdateEntity BannerCardUpdate => new(_haContext, "update.banner_card_update");
    ///<summary>Battery Notes update</summary>
    public UpdateEntity BatteryNotesUpdate => new(_haContext, "update.battery_notes_update");
    ///<summary>Battery State Card / Entity Row update</summary>
    public UpdateEntity BatteryStateCardEntityRowUpdate => new(_haContext, "update.battery_state_card_entity_row_update");
    ///<summary>bootstrap-grid-card update</summary>
    public UpdateEntity BootstrapGridCardUpdate => new(_haContext, "update.bootstrap_grid_card_update");
    ///<summary>Bubble Card update</summary>
    public UpdateEntity BubbleCardUpdate => new(_haContext, "update.bubble_card_update");
    ///<summary>button-card update</summary>
    public UpdateEntity ButtonCardUpdate => new(_haContext, "update.button_card_update");
    ///<summary>card-mod update</summary>
    public UpdateEntity CardModUpdate => new(_haContext, "update.card_mod_update");
    ///<summary>Catppuccin Theme update</summary>
    public UpdateEntity CatppuccinThemeUpdate => new(_haContext, "update.catppuccin_theme_update");
    ///<summary>Chime TTS update</summary>
    public UpdateEntity ChimeTtsUpdate => new(_haContext, "update.chime_tts_update");
    ///<summary>Circular timer card update</summary>
    public UpdateEntity CircularTimerCardUpdate => new(_haContext, "update.circular_timer_card_update");
    ///<summary>Cowboy update</summary>
    public UpdateEntity CowboyUpdate => new(_haContext, "update.cowboy_update");
    ///<summary>cupertino-icons update</summary>
    public UpdateEntity CupertinoIconsUpdate => new(_haContext, "update.cupertino_icons_update");
    ///<summary>Elasticsearch server Update</summary>
    public UpdateEntity ElasticsearchServerUpdate => new(_haContext, "update.elasticsearch_server_update");
    ///<summary>Energy Period Selector Plus update</summary>
    public UpdateEntity EnergyPeriodSelectorPlusUpdate => new(_haContext, "update.energy_period_selector_plus_update");
    ///<summary>Energy Sankey Card update</summary>
    public UpdateEntity EnergySankeyCardUpdate => new(_haContext, "update.energy_sankey_card_update");
    ///<summary>EPEX Spot update</summary>
    public UpdateEntity EpexSpotUpdate => new(_haContext, "update.epex_spot_update");
    ///<summary>Epic Games Free Update</summary>
    public UpdateEntity EpicGamesFreeUpdate => new(_haContext, "update.epic_games_free_update");
    ///<summary>Feedparser update</summary>
    public UpdateEntity FeedparserUpdate => new(_haContext, "update.feedparser_update");
    ///<summary>Filebrowser Update</summary>
    public UpdateEntity FilebrowserUpdate => new(_haContext, "update.filebrowser_update");
    ///<summary>Flex Table - Highly customizable, Data visualization update</summary>
    public UpdateEntity FlexTableHighlyCustomizableDataVisualizationUpdate => new(_haContext, "update.flex_table_highly_customizable_data_visualization_update");
    ///<summary>Flightradar24 update</summary>
    public UpdateEntity Flightradar24Update => new(_haContext, "update.flightradar24_update");
    ///<summary>fold-entity-row update</summary>
    public UpdateEntity FoldEntityRowUpdate => new(_haContext, "update.fold_entity_row_update");
    ///<summary>fontawesome update</summary>
    public UpdateEntity FontawesomeUpdate => new(_haContext, "update.fontawesome_update");
    ///<summary>FTP Update</summary>
    public UpdateEntity FtpUpdate => new(_haContext, "update.ftp_update");
    ///<summary>Git pull Update</summary>
    public UpdateEntity GitPullUpdate => new(_haContext, "update.git_pull_update");
    ///<summary>Google Home update</summary>
    public UpdateEntity GoogleHomeUpdate => new(_haContext, "update.google_home_update");
    ///<summary>Grafana Update</summary>
    public UpdateEntity GrafanaUpdate => new(_haContext, "update.grafana_update");
    ///<summary>Guacamole Client Update</summary>
    public UpdateEntity GuacamoleClientUpdate => new(_haContext, "update.guacamole_client_update");
    ///<summary>ha-floorplan 🖌🎨 | Your imagination (almost) defines the limits update</summary>
    public UpdateEntity HaFloorplanYourImaginationJustBecameTheNewLimitUpdate => new(_haContext, "update.ha_floorplan_your_imagination_just_became_the_new_limit_update");
    ///<summary>HA (Lovelace) Card Weather Conditions update</summary>
    public UpdateEntity HaLovelaceCardWeatherConditionsUpdate => new(_haContext, "update.ha_lovelace_card_weather_conditions_update");
    ///<summary>HACS update</summary>
    public UpdateEntity HacsUpdate => new(_haContext, "update.hacs_update");
    ///<summary>Healthchecks.io update</summary>
    public UpdateEntity HealthchecksIoUpdate => new(_haContext, "update.healthchecks_io_update");
    ///<summary>Home Assistant Core Update</summary>
    public UpdateEntity HomeAssistantCoreUpdate => new(_haContext, "update.home_assistant_core_update");
    ///<summary>Home Assistant Operating System Update</summary>
    public UpdateEntity HomeAssistantOperatingSystemUpdate => new(_haContext, "update.home_assistant_operating_system_update");
    ///<summary>Home Assistant Supervisor Update</summary>
    public UpdateEntity HomeAssistantSupervisorUpdate => new(_haContext, "update.home_assistant_supervisor_update");
    ///<summary>Home Assistant Swipe Navigation update</summary>
    public UpdateEntity HomeAssistantSwipeNavigationUpdate => new(_haContext, "update.home_assistant_swipe_navigation_update");
    ///<summary>InfluxDB Update</summary>
    public UpdateEntity InfluxdbUpdate => new(_haContext, "update.influxdb_update");
    ///<summary>Jackett NAS Update</summary>
    public UpdateEntity JackettNasUpdate => new(_haContext, "update.jackett_nas_update");
    ///<summary>Jellyfin update</summary>
    public UpdateEntity JellyfinUpdate => new(_haContext, "update.jellyfin_update");
    ///<summary>List Card update</summary>
    public UpdateEntity ListCardUpdate => new(_haContext, "update.list_card_update");
    ///<summary>Local Tuya update</summary>
    public UpdateEntity LocalTuyaUpdate => new(_haContext, "update.local_tuya_update");
    ///<summary>Log Viewer Update</summary>
    public UpdateEntity LogViewerUpdate => new(_haContext, "update.log_viewer_update");
    ///<summary>Lovelace Card Templater update</summary>
    public UpdateEntity LovelaceCardTemplaterUpdate => new(_haContext, "update.lovelace_card_templater_update");
    ///<summary>Mail and Packages update</summary>
    public UpdateEntity MailAndPackagesUpdate => new(_haContext, "update.mail_and_packages_update");
    ///<summary>Material You Theme - A Fully Featured Implementation of Material Design 3 update</summary>
    public UpdateEntity MaterialRoundedThemeBasedOnMaterialYouByGoogleOnAndroidUpdate => new(_haContext, "update.material_rounded_theme_based_on_material_you_by_google_on_android_update");
    ///<summary>mini-graph-card update</summary>
    public UpdateEntity MiniGraphCardUpdate => new(_haContext, "update.mini_graph_card_update");
    ///<summary>Mini Media Player update</summary>
    public UpdateEntity MiniMediaPlayerUpdate => new(_haContext, "update.mini_media_player_update");
    ///<summary>Mosquitto broker Update</summary>
    public UpdateEntity MosquittoBrokerUpdate => new(_haContext, "update.mosquitto_broker_update");
    ///<summary>Multiple Entity Row update</summary>
    public UpdateEntity MultipleEntityRowUpdate => new(_haContext, "update.multiple_entity_row_update");
    ///<summary>Mushroom Themes update</summary>
    public UpdateEntity MushroomThemesUpdate => new(_haContext, "update.mushroom_themes_update");
    ///<summary>Mushroom update</summary>
    public UpdateEntity MushroomUpdate => new(_haContext, "update.mushroom_update");
    ///<summary>Neerslag App update</summary>
    public UpdateEntity NeerslagAppUpdate => new(_haContext, "update.neerslag_app_update");
    ///<summary>Neerslag Card update</summary>
    public UpdateEntity NeerslagCardUpdate => new(_haContext, "update.neerslag_card_update");
    ///<summary>NetDaemon update</summary>
    public UpdateEntity NetdaemonUpdate => new(_haContext, "update.netdaemon_update");
    ///<summary>NetDaemon V5 (.NET 9) Update</summary>
    public UpdateEntity NetdaemonV5Net9Update => new(_haContext, "update.netdaemon_v5_net_9_update");
    ///<summary>NGINX Home Assistant SSL proxy Update</summary>
    public UpdateEntity NginxHomeAssistantSslProxyUpdate => new(_haContext, "update.nginx_home_assistant_ssl_proxy_update");
    ///<summary>Office 365 update</summary>
    public UpdateEntity Office365Update => new(_haContext, "update.office_365_update");
    ///<summary>OneDrive Backup Update</summary>
    public UpdateEntity OnedriveBackupUpdate => new(_haContext, "update.onedrive_backup_update");
    ///<summary>Philips Hue Play HDMI Sync Box update</summary>
    public UpdateEntity PhilipsHuePlayHdmiSyncBoxUpdate => new(_haContext, "update.philips_hue_play_hdmi_sync_box_update");
    ///<summary>Plex recently added sensor update</summary>
    public UpdateEntity PlexRecentlyAddedSensorUpdate => new(_haContext, "update.plex_recently_added_sensor_update");
    ///<summary>Power Flow Card Plus update</summary>
    public UpdateEntity PowerFlowCardPlusUpdate => new(_haContext, "update.power_flow_card_plus_update");
    ///<summary>Powercalc update</summary>
    public UpdateEntity PowercalcUpdate => new(_haContext, "update.powercalc_update");
    ///<summary>Retry update</summary>
    public UpdateEntity RetryUpdate => new(_haContext, "update.retry_update");
    ///<summary>RT-AX88U Firmware update</summary>
    public UpdateEntity RtAx88uFirmwareUpdate => new(_haContext, "update.rt_ax88u_firmware_update");
    ///<summary>Samba share Update</summary>
    public UpdateEntity SambaShareUpdate => new(_haContext, "update.samba_share_update");
    ///<summary>Spook 👻 Your homie update</summary>
    public UpdateEntity SpookYourHomieUpdate => new(_haContext, "update.spook_your_homie_update");
    ///<summary>Spotcast update</summary>
    public UpdateEntity SpotcastUpdate => new(_haContext, "update.spotcast_update");
    ///<summary>Spotify Lovelace Card update</summary>
    public UpdateEntity SpotifyLovelaceCardUpdate => new(_haContext, "update.spotify_lovelace_card_update");
    ///<summary>state-switch update</summary>
    public UpdateEntity StateSwitchUpdate => new(_haContext, "update.state_switch_update");
    ///<summary>Stellantis Vehicles update</summary>
    public UpdateEntity StellantisVehiclesUpdate => new(_haContext, "update.stellantis_vehicles_update");
    ///<summary>Studio Code Server Update</summary>
    public UpdateEntity StudioCodeServerUpdate => new(_haContext, "update.studio_code_server_update");
    ///<summary>Tabbed Card update</summary>
    public UpdateEntity TabbedCardUpdate => new(_haContext, "update.tabbed_card_update");
    ///<summary>Team Tracker Card update</summary>
    public UpdateEntity TeamTrackerCardUpdate => new(_haContext, "update.team_tracker_card_update");
    ///<summary>Team Tracker update</summary>
    public UpdateEntity TeamTrackerUpdate => new(_haContext, "update.team_tracker_update");
    ///<summary>Terminal &amp; SSH Update</summary>
    public UpdateEntity TerminalSshUpdate => new(_haContext, "update.terminal_ssh_update");
    ///<summary>Upcoming Media Card update</summary>
    public UpdateEntity UpcomingMediaCardUpdate => new(_haContext, "update.upcoming_media_card_update");
    ///<summary>Upcoming Media Card update</summary>
    public UpdateEntity UpcomingMediaCardUpdate2 => new(_haContext, "update.upcoming_media_card_update_2");
    ///<summary>Uptime Kuma Update</summary>
    public UpdateEntity UptimeKumaUpdate => new(_haContext, "update.uptime_kuma_update");
    ///<summary>Vacuum Card update</summary>
    public UpdateEntity VacuumCardUpdate => new(_haContext, "update.vacuum_card_update");
    ///<summary>VINCENT-NAS DSM update</summary>
    public UpdateEntity VincentNasDsmUpdate => new(_haContext, "update.vincent_nas_dsm_update");
    ///<summary>Watchman update</summary>
    public UpdateEntity WatchmanUpdate => new(_haContext, "update.watchman_update");
    ///<summary>Weather Card update</summary>
    public UpdateEntity WeatherCardUpdate => new(_haContext, "update.weather_card_update");
    ///<summary>Whoogle Search Update</summary>
    public UpdateEntity WhoogleSearchUpdate => new(_haContext, "update.whoogle_search_update");
    ///<summary>ytube_music_player update</summary>
    public UpdateEntity YtubeMusicPlayerUpdate => new(_haContext, "update.ytube_music_player_update");
}

public partial class WeatherEntities
{
    private readonly IHaContext _haContext;
    public WeatherEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all weather entities currently registered (at runtime) in Home Assistant as WeatherEntity</summary>
    public IEnumerable<WeatherEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("weather.")).Select(e => new WeatherEntity(e));
    ///<summary>Buienradar</summary>
    public WeatherEntity Buienradar => new(_haContext, "weather.buienradar");
    ///<summary>Forecast Thuis</summary>
    public WeatherEntity ForecastThuis => new(_haContext, "weather.forecast_thuis");
}

public partial class ZoneEntities
{
    private readonly IHaContext _haContext;
    public ZoneEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all zone entities currently registered (at runtime) in Home Assistant as ZoneEntity</summary>
    public IEnumerable<ZoneEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("zone.")).Select(e => new ZoneEntity(e));
    ///<summary>Boodschappen AH</summary>
    public ZoneEntity Boodschappen => new(_haContext, "zone.boodschappen");
    ///<summary>Boodschappen COOP </summary>
    public ZoneEntity BoodschappenCoop => new(_haContext, "zone.boodschappen_coop");
    ///<summary>Dewin</summary>
    public ZoneEntity Dewin => new(_haContext, "zone.dewin");
    ///<summary>Efteling</summary>
    public ZoneEntity Efteling => new(_haContext, "zone.efteling");
    ///<summary>Thuis</summary>
    public ZoneEntity Home => new(_haContext, "zone.home");
    ///<summary>Ken</summary>
    public ZoneEntity Ken => new(_haContext, "zone.ken");
    ///<summary>Marloes</summary>
    public ZoneEntity Marloes => new(_haContext, "zone.marloes");
    ///<summary>Ouders</summary>
    public ZoneEntity Ouders => new(_haContext, "zone.ouders");
    ///<summary>Pokemon Raid Hour</summary>
    public ZoneEntity PokemonRaidHour => new(_haContext, "zone.pokemon_raid_hour");
    ///<summary>Timo</summary>
    public ZoneEntity Timo => new(_haContext, "zone.timo");
    ///<summary>Werk</summary>
    public ZoneEntity Werk => new(_haContext, "zone.werk");
}

public partial class SceneEntities
{
    private readonly IHaContext _haContext;
    public SceneEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all scene entities currently registered (at runtime) in Home Assistant as SceneEntity</summary>
    public IEnumerable<SceneEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("scene.")).Select(e => new SceneEntity(e));
    ///<summary>Badkamer Concentreren</summary>
    public SceneEntity BadkamerConcentreren => new(_haContext, "scene.badkamer_concentreren");
    ///<summary>Badkamer Energie</summary>
    public SceneEntity BadkamerEnergie => new(_haContext, "scene.badkamer_energie");
    ///<summary>Badkamer Gedimd</summary>
    public SceneEntity BadkamerGedimd => new(_haContext, "scene.badkamer_gedimd");
    ///<summary>Badkamer Helder</summary>
    public SceneEntity BadkamerHelder => new(_haContext, "scene.badkamer_helder");
    ///<summary>Badkamer Lezen</summary>
    public SceneEntity BadkamerLezen => new(_haContext, "scene.badkamer_lezen");
    ///<summary>Badkamer Nachtlampje</summary>
    public SceneEntity BadkamerNachtlampje => new(_haContext, "scene.badkamer_nachtlampje");
    ///<summary>Badkamer Ontspannen</summary>
    public SceneEntity BadkamerOntspannen => new(_haContext, "scene.badkamer_ontspannen");
    ///<summary>Gang Concentreren</summary>
    public SceneEntity GangConcentreren => new(_haContext, "scene.gang_concentreren");
    ///<summary>Gang Energie</summary>
    public SceneEntity GangEnergie => new(_haContext, "scene.gang_energie");
    ///<summary>Gang Gedimd</summary>
    public SceneEntity GangGedimd => new(_haContext, "scene.gang_gedimd");
    ///<summary>Gang Helder</summary>
    public SceneEntity GangHelder => new(_haContext, "scene.gang_helder");
    ///<summary>Gang Lezen</summary>
    public SceneEntity GangLezen => new(_haContext, "scene.gang_lezen");
    ///<summary>Gang Nachtlampje</summary>
    public SceneEntity GangNachtlampje => new(_haContext, "scene.gang_nachtlampje");
    ///<summary>Gang Ontspannen</summary>
    public SceneEntity GangOntspannen => new(_haContext, "scene.gang_ontspannen");
    ///<summary>Slaapkamer Concentreren</summary>
    public SceneEntity SlaapkamerConcentreren => new(_haContext, "scene.slaapkamer_concentreren");
    ///<summary>Slaapkamer Energie</summary>
    public SceneEntity SlaapkamerEnergie => new(_haContext, "scene.slaapkamer_energie");
    ///<summary>Slaapkamer Helder</summary>
    public SceneEntity SlaapkamerHelder => new(_haContext, "scene.slaapkamer_helder");
    ///<summary>Slaapkamer Lezen</summary>
    public SceneEntity SlaapkamerLezen => new(_haContext, "scene.slaapkamer_lezen");
    ///<summary>Slaapkamer Nachtlampje</summary>
    public SceneEntity SlaapkamerNachtlampje => new(_haContext, "scene.slaapkamer_nachtlampje");
    ///<summary>Slaapkamer Ontspannen</summary>
    public SceneEntity SlaapkamerOntspannen => new(_haContext, "scene.slaapkamer_ontspannen");
    ///<summary>Temp Concentreren</summary>
    public SceneEntity TempConcentreren => new(_haContext, "scene.temp_concentreren");
    ///<summary>Temp Energie</summary>
    public SceneEntity TempEnergie => new(_haContext, "scene.temp_energie");
    ///<summary>Temp Lezen</summary>
    public SceneEntity TempLezen => new(_haContext, "scene.temp_lezen");
    ///<summary>Temp Nachtlampje</summary>
    public SceneEntity TempNachtlampje => new(_haContext, "scene.temp_nachtlampje");
    ///<summary>Temp Ontspannen</summary>
    public SceneEntity TempOntspannen => new(_haContext, "scene.temp_ontspannen");
    ///<summary>Movie</summary>
    public SceneEntity TvKijken => new(_haContext, "scene.tv_kijken");
    ///<summary>Woonkamer Concentreren</summary>
    public SceneEntity WoonkamerConcentreren => new(_haContext, "scene.woonkamer_concentreren");
    ///<summary>Woonkamer Day</summary>
    public SceneEntity WoonkamerDay => new(_haContext, "scene.woonkamer_day");
    ///<summary>Woonkamer Energie</summary>
    public SceneEntity WoonkamerEnergie => new(_haContext, "scene.woonkamer_energie");
    ///<summary>Woonkamer Evening</summary>
    public SceneEntity WoonkamerEvening => new(_haContext, "scene.woonkamer_evening");
    ///<summary>Woonkamer Helder</summary>
    public SceneEntity WoonkamerHelder => new(_haContext, "scene.woonkamer_helder");
    ///<summary>Woonkamer Lezen</summary>
    public SceneEntity WoonkamerLezen => new(_haContext, "scene.woonkamer_lezen");
    ///<summary>Woonkamer Morning</summary>
    public SceneEntity WoonkamerMorning => new(_haContext, "scene.woonkamer_morning");
    ///<summary>Woonkamer Movie</summary>
    public SceneEntity WoonkamerMovie2 => new(_haContext, "scene.woonkamer_movie_2");
    ///<summary>Woonkamer Nachtlampje</summary>
    public SceneEntity WoonkamerNachtlampje => new(_haContext, "scene.woonkamer_nachtlampje");
    ///<summary>Woonkamer Night</summary>
    public SceneEntity WoonkamerNight => new(_haContext, "scene.woonkamer_night");
    ///<summary>Woonkamer Ontspannen</summary>
    public SceneEntity WoonkamerOntspannen => new(_haContext, "scene.woonkamer_ontspannen");
    ///<summary>WoonkamerDay</summary>
    public SceneEntity Woonkamerday => new(_haContext, "scene.woonkamerday");
    ///<summary>WoonkamerEvening</summary>
    public SceneEntity Woonkamerevening => new(_haContext, "scene.woonkamerevening");
    ///<summary>WoonkamerMorning</summary>
    public SceneEntity Woonkamermorning => new(_haContext, "scene.woonkamermorning");
    ///<summary>WoonkamerNight</summary>
    public SceneEntity Woonkamernight => new(_haContext, "scene.woonkamernight");
}

public partial class CoverEntities
{
    private readonly IHaContext _haContext;
    public CoverEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all cover entities currently registered (at runtime) in Home Assistant as CoverEntity</summary>
    public IEnumerable<CoverEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("cover.")).Select(e => new CoverEntity(e));
    ///<summary>RollerBlind 0003</summary>
    public CoverEntity Rollerblind0003 => new(_haContext, "cover.rollerblind_0003");
}

public partial class SelectEntities
{
    private readonly IHaContext _haContext;
    public SelectEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all select entities currently registered (at runtime) in Home Assistant as SelectEntity</summary>
    public IEnumerable<SelectEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("select.")).Select(e => new SelectEntity(e));
    ///<summary>PetSnowy Fontijn Modus</summary>
    public SelectEntity PetsnowyFountainMode => new(_haContext, "select.petsnowy_fountain_mode");
    ///<summary>Sync Box Entertainmentruimte</summary>
    public SelectEntity SyncBoxEntertainmentArea => new(_haContext, "select.sync_box_entertainment_area");
    ///<summary>Sync Box HDMI Ingang</summary>
    public SelectEntity SyncBoxHdmiInput => new(_haContext, "select.sync_box_hdmi_input");
    ///<summary>Sync Box Intensiteit</summary>
    public SelectEntity SyncBoxIntensity => new(_haContext, "select.sync_box_intensity");
    ///<summary>Sync Box Led indicatie</summary>
    public SelectEntity SyncBoxLedIndicator => new(_haContext, "select.sync_box_led_indicator");
    ///<summary>Sync Box Sync modus</summary>
    public SelectEntity SyncBoxSyncMode => new(_haContext, "select.sync_box_sync_mode");
    ///<summary>Wasmachine</summary>
    public SelectEntity Wasmachine => new(_haContext, "select.wasmachine");
    ///<summary>Wasmachine Centrifuge snelheid</summary>
    public SelectEntity WasmachineCentrifugeSnelheid => new(_haContext, "select.wasmachine_centrifuge_snelheid");
}

public partial class VacuumEntities
{
    private readonly IHaContext _haContext;
    public VacuumEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all vacuum entities currently registered (at runtime) in Home Assistant as VacuumEntity</summary>
    public IEnumerable<VacuumEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("vacuum.")).Select(e => new VacuumEntity(e));
    ///<summary>Jaap</summary>
    public VacuumEntity Jaap => new(_haContext, "vacuum.jaap");
}

public partial class RemoteEntities
{
    private readonly IHaContext _haContext;
    public RemoteEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all remote entities currently registered (at runtime) in Home Assistant as RemoteEntity</summary>
    public IEnumerable<RemoteEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("remote.")).Select(e => new RemoteEntity(e));
    ///<summary>TV</summary>
    public RemoteEntity Tv => new(_haContext, "remote.tv");
    ///<summary>Xbox Vincent Remote</summary>
    public RemoteEntity XboxVincentRemote => new(_haContext, "remote.xbox_vincent_remote");
}

public partial class TtsEntities
{
    private readonly IHaContext _haContext;
    public TtsEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all tts entities currently registered (at runtime) in Home Assistant as TtsEntity</summary>
    public IEnumerable<TtsEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("tts.")).Select(e => new TtsEntity(e));
    ///<summary>Google AI TTS</summary>
    public TtsEntity GoogleAiTts => new(_haContext, "tts.google_ai_tts");
    ///<summary>Home Assistant Cloud</summary>
    public TtsEntity HomeAssistantCloud => new(_haContext, "tts.home_assistant_cloud");
}

public partial class EventEntities
{
    private readonly IHaContext _haContext;
    public EventEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all event entities currently registered (at runtime) in Home Assistant as EventEntity</summary>
    public IEnumerable<EventEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("event.")).Select(e => new EventEntity(e));
    ///<summary>Backup Automatic backup</summary>
    public EventEntity BackupAutomaticBackup => new(_haContext, "event.backup_automatic_backup");
    ///<summary>Badkamer Knop 1</summary>
    public EventEntity BadkamerButton1 => new(_haContext, "event.badkamer_button_1");
    ///<summary>Badkamer Knop 1</summary>
    public EventEntity BadkamerButton12 => new(_haContext, "event.badkamer_button_1_2");
    ///<summary>Badkamer Knop 2</summary>
    public EventEntity BadkamerButton2 => new(_haContext, "event.badkamer_button_2");
    ///<summary>Badkamer Knop 2</summary>
    public EventEntity BadkamerButton22 => new(_haContext, "event.badkamer_button_2_2");
    ///<summary>Badkamer Knop 3</summary>
    public EventEntity BadkamerButton3 => new(_haContext, "event.badkamer_button_3");
    ///<summary>Badkamer Knop 4</summary>
    public EventEntity BadkamerButton4 => new(_haContext, "event.badkamer_button_4");
    ///<summary>Gang Knop 1</summary>
    public EventEntity GangButton1 => new(_haContext, "event.gang_button_1");
    ///<summary>Gang Knop 2</summary>
    public EventEntity GangButton2 => new(_haContext, "event.gang_button_2");
    ///<summary>Gang Knop 3</summary>
    public EventEntity GangButton3 => new(_haContext, "event.gang_button_3");
    ///<summary>Gang Knop 4</summary>
    public EventEntity GangButton4 => new(_haContext, "event.gang_button_4");
    ///<summary>Hal Knop 1</summary>
    public EventEntity HalButton1 => new(_haContext, "event.hal_button_1");
    ///<summary>Repairs</summary>
    public EventEntity Repair => new(_haContext, "event.repair");
    ///<summary>Slaapkamer Knop 1</summary>
    public EventEntity SlaapkamerButton1 => new(_haContext, "event.slaapkamer_button_1");
    ///<summary>Switch badkamer spiegel Knop 1</summary>
    public EventEntity SwitchBadkamerSpiegelButton1 => new(_haContext, "event.switch_badkamer_spiegel_button_1");
    ///<summary>Switch badkamer spiegel Knop 2</summary>
    public EventEntity SwitchBadkamerSpiegelButton2 => new(_haContext, "event.switch_badkamer_spiegel_button_2");
    ///<summary>Switch badkamer spiegel Knop 3</summary>
    public EventEntity SwitchBadkamerSpiegelButton3 => new(_haContext, "event.switch_badkamer_spiegel_button_3");
    ///<summary>Switch badkamer spiegel Knop 4</summary>
    public EventEntity SwitchBadkamerSpiegelButton4 => new(_haContext, "event.switch_badkamer_spiegel_button_4");
    ///<summary>Switch Slaapkamer Knop 1</summary>
    public EventEntity SwitchSlaapkamerButton1 => new(_haContext, "event.switch_slaapkamer_button_1");
    ///<summary>Switch Slaapkamer Knop 2</summary>
    public EventEntity SwitchSlaapkamerButton2 => new(_haContext, "event.switch_slaapkamer_button_2");
    ///<summary>Switch Slaapkamer Knop 3</summary>
    public EventEntity SwitchSlaapkamerButton3 => new(_haContext, "event.switch_slaapkamer_button_3");
    ///<summary>Switch Slaapkamer Knop 4</summary>
    public EventEntity SwitchSlaapkamerButton4 => new(_haContext, "event.switch_slaapkamer_button_4");
    ///<summary>Voordeur Beweging</summary>
    public EventEntity VoordeurBeweging => new(_haContext, "event.voordeur_beweging");
    ///<summary>Voordeur Ding</summary>
    public EventEntity VoordeurDing => new(_haContext, "event.voordeur_ding");
    ///<summary>Woonkamer Knop 1</summary>
    public EventEntity WoonkamerButton1 => new(_haContext, "event.woonkamer_button_1");
    ///<summary>Woonkamer Knop 1</summary>
    public EventEntity WoonkamerButton12 => new(_haContext, "event.woonkamer_button_1_2");
    ///<summary>Woonkamer Knop 2</summary>
    public EventEntity WoonkamerButton2 => new(_haContext, "event.woonkamer_button_2");
    ///<summary>Woonkamer Knop 3</summary>
    public EventEntity WoonkamerButton3 => new(_haContext, "event.woonkamer_button_3");
    ///<summary>Woonkamer Knop 4</summary>
    public EventEntity WoonkamerButton4 => new(_haContext, "event.woonkamer_button_4");
}

public partial class CounterEntities
{
    private readonly IHaContext _haContext;
    public CounterEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all counter entities currently registered (at runtime) in Home Assistant as CounterEntity</summary>
    public IEnumerable<CounterEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("counter.")).Select(e => new CounterEntity(e));
    ///<summary>PetSnowyLitterBoxEmptying</summary>
    public CounterEntity Petsnowylitterboxemptying => new(_haContext, "counter.petsnowylitterboxemptying");
    ///<summary>PetSnowyLitterBoxPixelInIt</summary>
    public CounterEntity Petsnowylitterboxpixelinit => new(_haContext, "counter.petsnowylitterboxpixelinit");
    ///<summary>PetSnowyLittleBoxCleaning</summary>
    public CounterEntity Petsnowylittleboxcleaning => new(_haContext, "counter.petsnowylittleboxcleaning");
}

public partial class TodoEntities
{
    private readonly IHaContext _haContext;
    public TodoEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all todo entities currently registered (at runtime) in Home Assistant as TodoEntity</summary>
    public IEnumerable<TodoEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("todo.")).Select(e => new TodoEntity(e));
    ///<summary>Dagelijks</summary>
    public TodoEntity Dagelijks => new(_haContext, "todo.dagelijks");
}

public partial class SttEntities
{
    private readonly IHaContext _haContext;
    public SttEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all stt entities currently registered (at runtime) in Home Assistant as SttEntity</summary>
    public IEnumerable<SttEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("stt.")).Select(e => new SttEntity(e));
    ///<summary>Google AI STT</summary>
    public SttEntity GoogleAiStt => new(_haContext, "stt.google_ai_stt");
    ///<summary>Home Assistant Cloud</summary>
    public SttEntity HomeAssistantCloud => new(_haContext, "stt.home_assistant_cloud");
}

public partial class ConversationEntities
{
    private readonly IHaContext _haContext;
    public ConversationEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all conversation entities currently registered (at runtime) in Home Assistant as ConversationEntity</summary>
    public IEnumerable<ConversationEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("conversation.")).Select(e => new ConversationEntity(e));
    ///<summary>Google AI Conversation</summary>
    public ConversationEntity GoogleAiConversation => new(_haContext, "conversation.google_ai_conversation");
    ///<summary>Home Assistant</summary>
    public ConversationEntity HomeAssistant => new(_haContext, "conversation.home_assistant");
    ///<summary>OpenAI Conversation</summary>
    public ConversationEntity OpenaiConversation => new(_haContext, "conversation.openai_conversation");
}

public partial class TagEntities
{
    private readonly IHaContext _haContext;
    public TagEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all tag entities currently registered (at runtime) in Home Assistant as TagEntity</summary>
    public IEnumerable<TagEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("tag.")).Select(e => new TagEntity(e));
    ///<summary>Away</summary>
    public TagEntity Away => new(_haContext, "tag.away");
    ///<summary>Open Deur</summary>
    public TagEntity OpenDeur => new(_haContext, "tag.open_deur");
    ///<summary>Sleeping</summary>
    public TagEntity Sleeping => new(_haContext, "tag.sleeping");
}

public partial class TextEntities
{
    private readonly IHaContext _haContext;
    public TextEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all text entities currently registered (at runtime) in Home Assistant as TextEntity</summary>
    public IEnumerable<TextEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("text.")).Select(e => new TextEntity(e));
    ///<summary>FlightRadar24 Add to track</summary>
    public TextEntity Flightradar24AddToTrack => new(_haContext, "text.flightradar24_add_to_track");
    ///<summary>FlightRadar24 Remove from track</summary>
    public TextEntity Flightradar24RemoveFromTrack => new(_haContext, "text.flightradar24_remove_from_track");
}

public partial class AiTaskEntities
{
    private readonly IHaContext _haContext;
    public AiTaskEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all ai_task entities currently registered (at runtime) in Home Assistant as AiTaskEntity</summary>
    public IEnumerable<AiTaskEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("ai_task.")).Select(e => new AiTaskEntity(e));
    ///<summary>Google AI Task</summary>
    public AiTaskEntity GoogleAiTask => new(_haContext, "ai_task.google_ai_task");
    ///<summary>OpenAI AI Task</summary>
    public AiTaskEntity OpenaiAiTask => new(_haContext, "ai_task.openai_ai_task");
}

public partial class ImageEntities
{
    private readonly IHaContext _haContext;
    public ImageEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all image entities currently registered (at runtime) in Home Assistant as ImageEntity</summary>
    public IEnumerable<ImageEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("image.")).Select(e => new ImageEntity(e));
    ///<summary>vinnie1234 Avatar</summary>
    public ImageEntity Vinnie1234Avatar => new(_haContext, "image.vinnie1234_avatar");
    ///<summary>vinnie1234 Now playing</summary>
    public ImageEntity Vinnie1234NowPlaying => new(_haContext, "image.vinnie1234_now_playing");
    ///<summary>vinnie1234 Share profile</summary>
    public ImageEntity Vinnie1234ShareProfile => new(_haContext, "image.vinnie1234_share_profile");
}

public partial class NotifyEntities
{
    private readonly IHaContext _haContext;
    public NotifyEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all notify entities currently registered (at runtime) in Home Assistant as NotifyEntity</summary>
    public IEnumerable<NotifyEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("notify.")).Select(e => new NotifyEntity(e));
    ///<summary>vinnie1234 Group: Dewinster</summary>
    public NotifyEntity Vinnie1234GroupDewinster => new(_haContext, "notify.vinnie1234_group_dewinster");
    ///<summary>vinnie1234 Group: Dewinster, Mute_Xenon</summary>
    public NotifyEntity Vinnie1234GroupDewinsterMuteXenon => new(_haContext, "notify.vinnie1234_group_dewinster_mute_xenon");
    ///<summary>vinnie1234 Group: Dewinster, timothaking5</summary>
    public NotifyEntity Vinnie1234GroupDewinsterTimothaking5 => new(_haContext, "notify.vinnie1234_group_dewinster_timothaking5");
    ///<summary>vinnie1234 Group: Dewinster, timothaking5</summary>
    public NotifyEntity Vinnie1234GroupDewinsterTimothaking52 => new(_haContext, "notify.vinnie1234_group_dewinster_timothaking5_2");
    ///<summary>vinnie1234 Group: Hoi🤪🤪</summary>
    public NotifyEntity Vinnie1234GroupHoi => new(_haContext, "notify.vinnie1234_group_hoi");
    ///<summary>vinnie1234 Group: Kennieman23, timothaking5</summary>
    public NotifyEntity Vinnie1234GroupKennieman23Timothaking5 => new(_haContext, "notify.vinnie1234_group_kennieman23_timothaking5");
    ///<summary>vinnie1234 Group: Kennieman23, UltiControl</summary>
    public NotifyEntity Vinnie1234GroupKennieman23Ulticontrol => new(_haContext, "notify.vinnie1234_group_kennieman23_ulticontrol");
    ///<summary>vinnie1234 Group: Kennieman23, UltiControl, timothaking5</summary>
    public NotifyEntity Vinnie1234GroupKennieman23UlticontrolTimothaking5 => new(_haContext, "notify.vinnie1234_group_kennieman23_ulticontrol_timothaking5");
    ///<summary>vinnie1234 Group: Kennieman23, UltiControl, timothaking5</summary>
    public NotifyEntity Vinnie1234GroupKennieman23UlticontrolTimothaking52 => new(_haContext, "notify.vinnie1234_group_kennieman23_ulticontrol_timothaking5_2");
    ///<summary>vinnie1234 Group: lovelace_42</summary>
    public NotifyEntity Vinnie1234GroupLovelace42 => new(_haContext, "notify.vinnie1234_group_lovelace_42");
    ///<summary>vinnie1234 Group: lovelace_42</summary>
    public NotifyEntity Vinnie1234GroupLovelace422 => new(_haContext, "notify.vinnie1234_group_lovelace_42_2");
    ///<summary>vinnie1234 Group: party hard</summary>
    public NotifyEntity Vinnie1234GroupPartyHard => new(_haContext, "notify.vinnie1234_group_party_hard");
    ///<summary>vinnie1234 Group: VTK-Prostyle</summary>
    public NotifyEntity Vinnie1234GroupVtkProstyle => new(_haContext, "notify.vinnie1234_group_vtk_prostyle");
}

public partial record AutomationEntity : Entity<AutomationEntity, EntityState<AutomationAttributes>, AutomationAttributes>, IAutomationEntityCore
{
    public AutomationEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public AutomationEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record AutomationAttributes
{
    [JsonPropertyName("last_triggered")]
    public string? LastTriggered { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("current")]
    public double? Current { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("id")]
    public string? Id { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record BinarySensorEntity : Entity<BinarySensorEntity, EntityState<BinarySensorAttributes>, BinarySensorAttributes>, IBinarySensorEntityCore
{
    public BinarySensorEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public BinarySensorEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record BinarySensorAttributes
{
    [JsonPropertyName("round_trip_time_avg")]
    public double? RoundTripTimeAvg { get; init; }

    [JsonPropertyName("round_trip_time_max")]
    public double? RoundTripTimeMax { get; init; }

    [JsonPropertyName("round_trip_time_mdev")]
    public string? RoundTripTimeMdev { get; init; }

    [JsonPropertyName("round_trip_time_min")]
    public double? RoundTripTimeMin { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("raw_state")]
    public string? RawState { get; init; }

    [JsonPropertyName("end_time")]
    public string? EndTime { get; init; }

    [JsonPropertyName("end_uv")]
    public double? EndUv { get; init; }

    [JsonPropertyName("start_uv")]
    public double? StartUv { get; init; }

    [JsonPropertyName("start_time")]
    public string? StartTime { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("motion_valid")]
    public bool? MotionValid { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("state")]
    public string? State { get; init; }

    [JsonPropertyName("expires_at")]
    public string? ExpiresAt { get; init; }

    [JsonPropertyName("dns")]
    public object? Dns { get; init; }

    [JsonPropertyName("gateway")]
    public string? Gateway { get; init; }

    [JsonPropertyName("ip")]
    public string? Ip { get; init; }

    [JsonPropertyName("ip_type")]
    public string? IpType { get; init; }

    [JsonPropertyName("mask")]
    public string? Mask { get; init; }

    [JsonPropertyName("private_subnet")]
    public double? PrivateSubnet { get; init; }

    [JsonPropertyName("xdns")]
    public object? Xdns { get; init; }

    [JsonPropertyName("xip")]
    public string? Xip { get; init; }

    [JsonPropertyName("xmask")]
    public string? Xmask { get; init; }

    [JsonPropertyName("alias")]
    public string? Alias { get; init; }

    [JsonPropertyName("level")]
    public double? Level { get; init; }

    [JsonPropertyName("mac")]
    public string? Mac { get; init; }

    [JsonPropertyName("model")]
    public string? Model { get; init; }

    [JsonPropertyName("parent")]
    public object? Parent { get; init; }

    [JsonPropertyName("product_id")]
    public string? ProductId { get; init; }

    [JsonPropertyName("type")]
    public string? Type { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("malware")]
    public string? Malware { get; init; }

    [JsonPropertyName("network")]
    public string? Network { get; init; }

    [JsonPropertyName("securitySetting")]
    public string? SecuritySetting { get; init; }

    [JsonPropertyName("systemCheck")]
    public string? SystemCheck { get; init; }

    [JsonPropertyName("update")]
    public string? Update { get; init; }

    [JsonPropertyName("userInfo")]
    public string? UserInfo { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("connection_type")]
    public string? ConnectionType { get; init; }

    [JsonPropertyName("last_ping")]
    public string? LastPing { get; init; }

    [JsonPropertyName("ip_address")]
    public string? IpAddress { get; init; }

    [JsonPropertyName("wan_unit")]
    public double? WanUnit { get; init; }

    [JsonPropertyName("link")]
    public bool? Link { get; init; }

    [JsonPropertyName("primary")]
    public bool? Primary { get; init; }

    [JsonPropertyName("battery_low_threshold")]
    public double? BatteryLowThreshold { get; init; }

    [JsonPropertyName("list")]
    public object? List { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("priority")]
    public IReadOnlyList<string>? Priority { get; init; }

    [JsonPropertyName("ports")]
    public IReadOnlyList<object>? Ports { get; init; }

    [JsonPropertyName("battery_quantity")]
    public double? BatteryQuantity { get; init; }

    [JsonPropertyName("battery_type")]
    public string? BatteryType { get; init; }

    [JsonPropertyName("battery_type_and_quantity")]
    public string? BatteryTypeAndQuantity { get; init; }

    [JsonPropertyName("battery_last_replaced")]
    public object? BatteryLastReplaced { get; init; }

    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }

    [JsonPropertyName("source_entity_id")]
    public string? SourceEntityId { get; init; }

    [JsonPropertyName("device_name")]
    public string? DeviceName { get; init; }
}

public partial record ButtonEntity : Entity<ButtonEntity, EntityState<ButtonAttributes>, ButtonAttributes>, IButtonEntityCore
{
    public ButtonEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ButtonEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ButtonAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record CalendarEntity : Entity<CalendarEntity, EntityState<CalendarAttributes>, CalendarAttributes>, ICalendarEntityCore
{
    public CalendarEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public CalendarEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record CalendarAttributes
{
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    [JsonPropertyName("all_day")]
    public bool? AllDay { get; init; }

    [JsonPropertyName("start_time")]
    public string? StartTime { get; init; }

    [JsonPropertyName("end_time")]
    public string? EndTime { get; init; }

    [JsonPropertyName("location")]
    public string? Location { get; init; }

    [JsonPropertyName("description")]
    public string? Description { get; init; }

    [JsonPropertyName("offset_reached")]
    public bool? OffsetReached { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }
}

public partial record CameraEntity : Entity<CameraEntity, EntityState<CameraAttributes>, CameraAttributes>, ICameraEntityCore
{
    public CameraEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public CameraEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record CameraAttributes
{
    [JsonPropertyName("access_token")]
    public string? AccessToken { get; init; }

    [JsonPropertyName("file_path")]
    public string? FilePath { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("video_url")]
    public string? VideoUrl { get; init; }

    [JsonPropertyName("last_video_id")]
    public double? LastVideoId { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("motion_detection")]
    public bool? MotionDetection { get; init; }

    [JsonPropertyName("frontend_stream_type")]
    public string? FrontendStreamType { get; init; }
}

public partial record DeviceTrackerEntity : Entity<DeviceTrackerEntity, EntityState<DeviceTrackerAttributes>, DeviceTrackerAttributes>, IDeviceTrackerEntityCore
{
    public DeviceTrackerEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public DeviceTrackerEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record DeviceTrackerAttributes
{
    [JsonPropertyName("source_type")]
    public string? SourceType { get; init; }

    [JsonPropertyName("latitude")]
    public double? Latitude { get; init; }

    [JsonPropertyName("longitude")]
    public double? Longitude { get; init; }

    [JsonPropertyName("gps_accuracy")]
    public double? GpsAccuracy { get; init; }

    [JsonPropertyName("altitude")]
    public double? Altitude { get; init; }

    [JsonPropertyName("course")]
    public double? Course { get; init; }

    [JsonPropertyName("speed")]
    public double? Speed { get; init; }

    [JsonPropertyName("vertical_accuracy")]
    public double? VerticalAccuracy { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("mac")]
    public string? Mac { get; init; }

    [JsonPropertyName("name")]
    public string? Name { get; init; }

    [JsonPropertyName("ip")]
    public string? Ip { get; init; }

    [JsonPropertyName("host_name")]
    public string? HostName { get; init; }

    [JsonPropertyName("connection_time")]
    public string? ConnectionTime { get; init; }

    [JsonPropertyName("connection_type")]
    public string? ConnectionType { get; init; }

    [JsonPropertyName("guest")]
    public bool? Guest { get; init; }

    [JsonPropertyName("guest_id")]
    public object? GuestId { get; init; }

    [JsonPropertyName("internet")]
    public bool? Internet { get; init; }

    [JsonPropertyName("internet_mode")]
    public string? InternetMode { get; init; }

    [JsonPropertyName("ip_type")]
    public string? IpType { get; init; }

    [JsonPropertyName("last_activity")]
    public string? LastActivity { get; init; }

    [JsonPropertyName("node")]
    public string? Node { get; init; }

    [JsonPropertyName("rssi")]
    public object? Rssi { get; init; }

    [JsonPropertyName("rx_speed")]
    public double? RxSpeed { get; init; }

    [JsonPropertyName("tx_speed")]
    public double? TxSpeed { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("vendor")]
    public string? Vendor { get; init; }

    [JsonPropertyName("connected")]
    public string? Connected { get; init; }

    [JsonPropertyName("accuracy")]
    public double? Accuracy { get; init; }

    [JsonPropertyName("location_name")]
    public object? LocationName { get; init; }

    [JsonPropertyName("location_received_at")]
    public string? LocationReceivedAt { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }
}

public partial record InputBooleanEntity : Entity<InputBooleanEntity, EntityState<InputBooleanAttributes>, InputBooleanAttributes>, IInputBooleanEntityCore
{
    public InputBooleanEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputBooleanEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputBooleanAttributes
{
    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record InputButtonEntity : Entity<InputButtonEntity, EntityState<InputButtonAttributes>, InputButtonAttributes>, IInputButtonEntityCore
{
    public InputButtonEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputButtonEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputButtonAttributes
{
    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record InputDatetimeEntity : Entity<InputDatetimeEntity, EntityState<InputDatetimeAttributes>, InputDatetimeAttributes>, IInputDatetimeEntityCore
{
    public InputDatetimeEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputDatetimeEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputDatetimeAttributes
{
    [JsonPropertyName("has_date")]
    public bool? HasDate { get; init; }

    [JsonPropertyName("has_time")]
    public bool? HasTime { get; init; }

    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("hour")]
    public double? Hour { get; init; }

    [JsonPropertyName("minute")]
    public double? Minute { get; init; }

    [JsonPropertyName("second")]
    public double? Second { get; init; }

    [JsonPropertyName("timestamp")]
    public double? Timestamp { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("year")]
    public double? Year { get; init; }

    [JsonPropertyName("month")]
    public double? Month { get; init; }

    [JsonPropertyName("day")]
    public double? Day { get; init; }
}

public partial record InputNumberEntity : NumericEntity<InputNumberEntity, NumericEntityState<InputNumberAttributes>, InputNumberAttributes>, IInputNumberEntityCore
{
    public InputNumberEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputNumberEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputNumberAttributes
{
    [JsonPropertyName("initial")]
    public object? Initial { get; init; }

    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("min")]
    public double? Min { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("step")]
    public double? Step { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record InputSelectEntity : Entity<InputSelectEntity, EntityState<InputSelectAttributes>, InputSelectAttributes>, IInputSelectEntityCore
{
    public InputSelectEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputSelectEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputSelectAttributes
{
    [JsonPropertyName("options")]
    public IReadOnlyList<string>? Options { get; init; }

    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record InputTextEntity : Entity<InputTextEntity, EntityState<InputTextAttributes>, InputTextAttributes>, IInputTextEntityCore
{
    public InputTextEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputTextEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputTextAttributes
{
    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("min")]
    public double? Min { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("pattern")]
    public object? Pattern { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record LightEntity : Entity<LightEntity, EntityState<LightAttributes>, LightAttributes>, ILightEntityCore
{
    public LightEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public LightEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record LightAttributes
{
    [JsonPropertyName("min_color_temp_kelvin")]
    public double? MinColorTempKelvin { get; init; }

    [JsonPropertyName("max_color_temp_kelvin")]
    public double? MaxColorTempKelvin { get; init; }

    [JsonPropertyName("min_mireds")]
    public double? MinMireds { get; init; }

    [JsonPropertyName("max_mireds")]
    public double? MaxMireds { get; init; }

    [JsonPropertyName("effect_list")]
    public IReadOnlyList<string>? EffectList { get; init; }

    [JsonPropertyName("supported_color_modes")]
    public IReadOnlyList<string>? SupportedColorModes { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("dynamics")]
    public object? Dynamics { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("color_mode")]
    public string? ColorMode { get; init; }

    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }

    [JsonPropertyName("color_temp_kelvin")]
    public object? ColorTempKelvin { get; init; }

    [JsonPropertyName("color_temp")]
    public object? ColorTemp { get; init; }

    [JsonPropertyName("hs_color")]
    public IReadOnlyList<double>? HsColor { get; init; }

    [JsonPropertyName("rgb_color")]
    public IReadOnlyList<double>? RgbColor { get; init; }

    [JsonPropertyName("xy_color")]
    public IReadOnlyList<double>? XyColor { get; init; }

    [JsonPropertyName("effect")]
    public string? Effect { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("is_hue_group")]
    public bool? IsHueGroup { get; init; }

    [JsonPropertyName("hue_scenes")]
    public IReadOnlyList<string>? HueScenes { get; init; }

    [JsonPropertyName("hue_type")]
    public string? HueType { get; init; }

    [JsonPropertyName("lights")]
    public IReadOnlyList<string>? Lights { get; init; }

    [JsonPropertyName("entity_id")]
    public IReadOnlyList<string>? EntityId { get; init; }
}

public partial record MediaPlayerEntity : Entity<MediaPlayerEntity, EntityState<MediaPlayerAttributes>, MediaPlayerAttributes>, IMediaPlayerEntityCore
{
    public MediaPlayerEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public MediaPlayerEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record MediaPlayerAttributes
{
    [JsonPropertyName("source_list")]
    public IReadOnlyList<string>? SourceList { get; init; }

    [JsonPropertyName("sound_mode_list")]
    public IReadOnlyList<string>? SoundModeList { get; init; }

    [JsonPropertyName("volume_level")]
    public double? VolumeLevel { get; init; }

    [JsonPropertyName("media_content_type")]
    public string? MediaContentType { get; init; }

    [JsonPropertyName("media_title")]
    public string? MediaTitle { get; init; }

    [JsonPropertyName("media_artist")]
    public string? MediaArtist { get; init; }

    [JsonPropertyName("source")]
    public string? Source { get; init; }

    [JsonPropertyName("sound_mode")]
    public string? SoundMode { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("entertainment_area_list")]
    public IReadOnlyList<string>? EntertainmentAreaList { get; init; }

    [JsonPropertyName("entertainment_area")]
    public string? EntertainmentArea { get; init; }

    [JsonPropertyName("bridge_unique_id")]
    public string? BridgeUniqueId { get; init; }

    [JsonPropertyName("bridge_connection_state")]
    public string? BridgeConnectionState { get; init; }

    [JsonPropertyName("hdmi1_status")]
    public string? Hdmi1Status { get; init; }

    [JsonPropertyName("hdmi2_status")]
    public string? Hdmi2Status { get; init; }

    [JsonPropertyName("hdmi3_status")]
    public string? Hdmi3Status { get; init; }

    [JsonPropertyName("hdmi4_status")]
    public string? Hdmi4Status { get; init; }

    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }

    [JsonPropertyName("intensity")]
    public string? Intensity { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("is_volume_muted")]
    public bool? IsVolumeMuted { get; init; }

    [JsonPropertyName("media_content_id")]
    public string? MediaContentId { get; init; }

    [JsonPropertyName("media_duration")]
    public double? MediaDuration { get; init; }

    [JsonPropertyName("media_position")]
    public double? MediaPosition { get; init; }

    [JsonPropertyName("media_position_updated_at")]
    public string? MediaPositionUpdatedAt { get; init; }

    [JsonPropertyName("app_id")]
    public string? AppId { get; init; }

    [JsonPropertyName("app_name")]
    public string? AppName { get; init; }

    [JsonPropertyName("entity_picture_local")]
    public object? EntityPictureLocal { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("media_playlist")]
    public string? MediaPlaylist { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("media_album_name")]
    public string? MediaAlbumName { get; init; }

    [JsonPropertyName("media_track")]
    public double? MediaTrack { get; init; }

    [JsonPropertyName("shuffle")]
    public bool? Shuffle { get; init; }

    [JsonPropertyName("repeat")]
    public string? Repeat { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("media_album_artist")]
    public string? MediaAlbumArtist { get; init; }

    [JsonPropertyName("id")]
    public string? Id { get; init; }

    [JsonPropertyName("is_active")]
    public bool? IsActive { get; init; }

    [JsonPropertyName("is_private_session")]
    public bool? IsPrivateSession { get; init; }

    [JsonPropertyName("is_restricted")]
    public bool? IsRestricted { get; init; }

    [JsonPropertyName("name")]
    public string? Name { get; init; }

    [JsonPropertyName("supports_volume")]
    public bool? SupportsVolume { get; init; }

    [JsonPropertyName("type")]
    public string? Type { get; init; }

    [JsonPropertyName("volume_percent")]
    public double? VolumePercent { get; init; }
}

public partial record NumberEntity : NumericEntity<NumberEntity, NumericEntityState<NumberAttributes>, NumberAttributes>, INumberEntityCore
{
    public NumberEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public NumberEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record NumberAttributes
{
    [JsonPropertyName("min")]
    public double? Min { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("step")]
    public double? Step { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("raw_state")]
    public double? RawState { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("unit_of_measurement")]
    public string? UnitOfMeasurement { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }
}

public partial record PersistentNotificationEntity : Entity<PersistentNotificationEntity, EntityState<PersistentNotificationAttributes>, PersistentNotificationAttributes>
{
    public PersistentNotificationEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public PersistentNotificationEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record PersistentNotificationAttributes
{
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    [JsonPropertyName("title")]
    public string? Title { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record PersonEntity : Entity<PersonEntity, EntityState<PersonAttributes>, PersonAttributes>, IPersonEntityCore
{
    public PersonEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public PersonEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record PersonAttributes
{
    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("id")]
    public string? Id { get; init; }

    [JsonPropertyName("latitude")]
    public double? Latitude { get; init; }

    [JsonPropertyName("longitude")]
    public double? Longitude { get; init; }

    [JsonPropertyName("gps_accuracy")]
    public double? GpsAccuracy { get; init; }

    [JsonPropertyName("source")]
    public string? Source { get; init; }

    [JsonPropertyName("user_id")]
    public string? UserId { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("device_trackers")]
    public IReadOnlyList<string>? DeviceTrackers { get; init; }
}

public partial record SensorEntity : Entity<SensorEntity, EntityState<SensorAttributes>, SensorAttributes>, ISensorEntityCore
{
    public SensorEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SensorEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SensorAttributes
{
    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("date")]
    public string? Date { get; init; }

    [JsonPropertyName("trash_type")]
    public string? TrashType { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("options")]
    public IReadOnlyList<string>? Options { get; init; }

    [JsonPropertyName("data")]
    public object? Data { get; init; }

    [JsonPropertyName("raw_state")]
    public object? RawState { get; init; }

    [JsonPropertyName("state_class")]
    public string? StateClass { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("sport")]
    public string? Sport { get; init; }

    [JsonPropertyName("league")]
    public string? League { get; init; }

    [JsonPropertyName("league_logo")]
    public string? LeagueLogo { get; init; }

    [JsonPropertyName("team_abbr")]
    public string? TeamAbbr { get; init; }

    [JsonPropertyName("opponent_abbr")]
    public string? OpponentAbbr { get; init; }

    [JsonPropertyName("event_name")]
    public string? EventName { get; init; }

    [JsonPropertyName("kickoff_in")]
    public string? KickoffIn { get; init; }

    [JsonPropertyName("venue")]
    public string? Venue { get; init; }

    [JsonPropertyName("location")]
    public object? Location { get; init; }

    [JsonPropertyName("tv_network")]
    public object? TvNetwork { get; init; }

    [JsonPropertyName("odds")]
    public object? Odds { get; init; }

    [JsonPropertyName("overunder")]
    public object? Overunder { get; init; }

    [JsonPropertyName("team_name")]
    public string? TeamName { get; init; }

    [JsonPropertyName("team_id")]
    public string? TeamId { get; init; }

    [JsonPropertyName("team_record")]
    public object? TeamRecord { get; init; }

    [JsonPropertyName("team_rank")]
    public object? TeamRank { get; init; }

    [JsonPropertyName("team_homeaway")]
    public string? TeamHomeaway { get; init; }

    [JsonPropertyName("team_logo")]
    public string? TeamLogo { get; init; }

    [JsonPropertyName("team_colors")]
    public IReadOnlyList<string>? TeamColors { get; init; }

    [JsonPropertyName("team_score")]
    public string? TeamScore { get; init; }

    [JsonPropertyName("team_win_probability")]
    public object? TeamWinProbability { get; init; }

    [JsonPropertyName("team_timeouts")]
    public object? TeamTimeouts { get; init; }

    [JsonPropertyName("opponent_name")]
    public string? OpponentName { get; init; }

    [JsonPropertyName("opponent_id")]
    public string? OpponentId { get; init; }

    [JsonPropertyName("opponent_record")]
    public object? OpponentRecord { get; init; }

    [JsonPropertyName("opponent_rank")]
    public object? OpponentRank { get; init; }

    [JsonPropertyName("opponent_homeaway")]
    public string? OpponentHomeaway { get; init; }

    [JsonPropertyName("opponent_logo")]
    public string? OpponentLogo { get; init; }

    [JsonPropertyName("opponent_colors")]
    public IReadOnlyList<string>? OpponentColors { get; init; }

    [JsonPropertyName("opponent_score")]
    public string? OpponentScore { get; init; }

    [JsonPropertyName("opponent_win_probability")]
    public object? OpponentWinProbability { get; init; }

    [JsonPropertyName("opponent_timeouts")]
    public object? OpponentTimeouts { get; init; }

    [JsonPropertyName("quarter")]
    public object? Quarter { get; init; }

    [JsonPropertyName("clock")]
    public string? Clock { get; init; }

    [JsonPropertyName("possession")]
    public object? Possession { get; init; }

    [JsonPropertyName("last_play")]
    public object? LastPlay { get; init; }

    [JsonPropertyName("down_distance_text")]
    public object? DownDistanceText { get; init; }

    [JsonPropertyName("outs")]
    public object? Outs { get; init; }

    [JsonPropertyName("balls")]
    public object? Balls { get; init; }

    [JsonPropertyName("strikes")]
    public object? Strikes { get; init; }

    [JsonPropertyName("on_first")]
    public object? OnFirst { get; init; }

    [JsonPropertyName("on_second")]
    public object? OnSecond { get; init; }

    [JsonPropertyName("on_third")]
    public object? OnThird { get; init; }

    [JsonPropertyName("team_shots_on_target")]
    public object? TeamShotsOnTarget { get; init; }

    [JsonPropertyName("team_total_shots")]
    public object? TeamTotalShots { get; init; }

    [JsonPropertyName("opponent_shots_on_target")]
    public object? OpponentShotsOnTarget { get; init; }

    [JsonPropertyName("opponent_total_shots")]
    public object? OpponentTotalShots { get; init; }

    [JsonPropertyName("team_sets_won")]
    public object? TeamSetsWon { get; init; }

    [JsonPropertyName("opponent_sets_won")]
    public object? OpponentSetsWon { get; init; }

    [JsonPropertyName("last_update")]
    public string? LastUpdate { get; init; }

    [JsonPropertyName("api_message")]
    public string? ApiMessage { get; init; }

    [JsonPropertyName("Stationname")]
    public string? Stationname { get; init; }

    [JsonPropertyName("Measured")]
    public string? Measured { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("power")]
    public string? Power { get; init; }

    [JsonPropertyName("device_status")]
    public string? DeviceStatus { get; init; }

    [JsonPropertyName("activity")]
    public string? Activity { get; init; }

    [JsonPropertyName("created_at")]
    public string? CreatedAt { get; init; }

    [JsonPropertyName("answered")]
    public bool? Answered { get; init; }

    [JsonPropertyName("recording_status")]
    public string? RecordingStatus { get; init; }

    [JsonPropertyName("category")]
    public string? Category { get; init; }

    [JsonPropertyName("dns")]
    public object? Dns { get; init; }

    [JsonPropertyName("gateway")]
    public string? Gateway { get; init; }

    [JsonPropertyName("ip_type")]
    public string? IpType { get; init; }

    [JsonPropertyName("mask")]
    public string? Mask { get; init; }

    [JsonPropertyName("private_subnet")]
    public double? PrivateSubnet { get; init; }

    [JsonPropertyName("xdns")]
    public object? Xdns { get; init; }

    [JsonPropertyName("xip")]
    public string? Xip { get; init; }

    [JsonPropertyName("xmask")]
    public string? Xmask { get; init; }

    [JsonPropertyName("devices")]
    public IReadOnlyList<object>? Devices { get; init; }

    [JsonPropertyName("list")]
    public IReadOnlyList<object>? List { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("Last Local backup date")]
    public string? LastLocalbackupdate { get; init; }

    [JsonPropertyName("Last OneDrive backup date")]
    public string? LastOneDrivebackupdate { get; init; }

    [JsonPropertyName("Backups in Home Assistant")]
    public string? BackupsinHomeAssistant { get; init; }

    [JsonPropertyName("Backups in OneDrive")]
    public string? BackupsinOneDrive { get; init; }

    [JsonPropertyName("Current backup upload percentage")]
    public object? Currentbackupuploadpercentage { get; init; }

    [JsonPropertyName("Current backup upload speed (KB/s)")]
    public object? CurrentbackupuploadspeedKBs { get; init; }

    [JsonPropertyName("Backup download percentage")]
    public object? Backupdownloadpercentage { get; init; }

    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }

    [JsonPropertyName("device_name")]
    public string? DeviceName { get; init; }

    [JsonPropertyName("auth_token")]
    public string? AuthToken { get; init; }

    [JsonPropertyName("ip_address")]
    public string? IpAddress { get; init; }

    [JsonPropertyName("available")]
    public bool? Available { get; init; }

    [JsonPropertyName("next_alarm_status")]
    public string? NextAlarmStatus { get; init; }

    [JsonPropertyName("alarm_volume")]
    public double? AlarmVolume { get; init; }

    [JsonPropertyName("alarms")]
    public IReadOnlyList<object>? Alarms { get; init; }

    [JsonPropertyName("next_timer_status")]
    public string? NextTimerStatus { get; init; }

    [JsonPropertyName("timers")]
    public IReadOnlyList<object>? Timers { get; init; }

    [JsonPropertyName("team_winner")]
    public bool? TeamWinner { get; init; }

    [JsonPropertyName("opponent_winner")]
    public bool? OpponentWinner { get; init; }

    [JsonPropertyName("assumed_state")]
    public bool? AssumedState { get; init; }

    [JsonPropertyName("still")]
    public double? Still { get; init; }

    [JsonPropertyName("is_hidden")]
    public bool? IsHidden { get; init; }

    [JsonPropertyName("Local Time")]
    public string? LocalTime { get; init; }

    [JsonPropertyName("Package")]
    public string? Package { get; init; }

    [JsonPropertyName("Time in Milliseconds")]
    public double? TimeinMilliseconds { get; init; }

    [JsonPropertyName("sha")]
    public string? Sha { get; init; }

    [JsonPropertyName("url")]
    public string? Url { get; init; }

    [JsonPropertyName("in_vehicle")]
    public double? InVehicle { get; init; }

    [JsonPropertyName("on_bicycle")]
    public double? OnBicycle { get; init; }

    [JsonPropertyName("on_foot")]
    public double? OnFoot { get; init; }

    [JsonPropertyName("running")]
    public double? Running { get; init; }

    [JsonPropertyName("unknown")]
    public double? Unknown { get; init; }

    [JsonPropertyName("walking")]
    public double? Walking { get; init; }

    [JsonPropertyName("Current file upload percentage")]
    public object? Currentfileuploadpercentage { get; init; }

    [JsonPropertyName("Current file upload speed (KB/s)")]
    public object? CurrentfileuploadspeedKBs { get; init; }

    [JsonPropertyName("entries")]
    public IReadOnlyList<object>? Entries { get; init; }

    [JsonPropertyName("number")]
    public double? Number { get; init; }

    [JsonPropertyName("last_online")]
    public string? LastOnline { get; init; }

    [JsonPropertyName("level")]
    public double? Level { get; init; }

    [JsonPropertyName("AudioSessions")]
    public IReadOnlyList<object>? AudioSessions { get; init; }

    [JsonPropertyName("Name")]
    public string? Name_0 { get; init; }

    [JsonPropertyName("name")]
    public string? Name_1 { get; init; }

    [JsonPropertyName("Label")]
    public string? Label { get; init; }

    [JsonPropertyName("FileSystem")]
    public string? FileSystem { get; init; }

    [JsonPropertyName("TotalSizeMB")]
    public double? TotalSizeMB { get; init; }

    [JsonPropertyName("AvailableSpaceMB")]
    public double? AvailableSpaceMB { get; init; }

    [JsonPropertyName("UsedSpaceMB")]
    public double? UsedSpaceMB { get; init; }

    [JsonPropertyName("AvailableSpacePercentage")]
    public double? AvailableSpacePercentage { get; init; }

    [JsonPropertyName("UsedSpacePercentage")]
    public double? UsedSpacePercentage { get; init; }

    [JsonPropertyName("WindowsUpdates")]
    public IReadOnlyList<object>? WindowsUpdates { get; init; }

    [JsonPropertyName("battery_quantity")]
    public double? BatteryQuantity { get; init; }

    [JsonPropertyName("battery_type")]
    public string? BatteryType { get; init; }

    [JsonPropertyName("Number of local backups marked to retain indefinitely")]
    public string? Numberoflocalbackupsmarkedtoretainindefinitely { get; init; }

    [JsonPropertyName("Number of OneDrive backups marked to retain indefinitely")]
    public string? NumberofOneDrivebackupsmarkedtoretainindefinitely { get; init; }

    [JsonPropertyName("series_summary")]
    public object? SeriesSummary { get; init; }

    [JsonPropertyName("event_url")]
    public string? EventUrl { get; init; }

    [JsonPropertyName("team_url")]
    public string? TeamUrl { get; init; }

    [JsonPropertyName("opponent_url")]
    public string? OpponentUrl { get; init; }

    [JsonPropertyName("administrative_area")]
    public string? AdministrativeArea { get; init; }

    [JsonPropertyName("country")]
    public string? Country { get; init; }

    [JsonPropertyName("iso_country_code")]
    public string? IsoCountryCode { get; init; }

    [JsonPropertyName("locality")]
    public string? Locality { get; init; }

    [JsonPropertyName("phone")]
    public string? Phone { get; init; }

    [JsonPropertyName("postal_code")]
    public string? PostalCode { get; init; }

    [JsonPropertyName("premises")]
    public string? Premises { get; init; }

    [JsonPropertyName("sub_administrative_area")]
    public string? SubAdministrativeArea { get; init; }

    [JsonPropertyName("sub_locality")]
    public string? SubLocality { get; init; }

    [JsonPropertyName("sub_thoroughfare")]
    public string? SubThoroughfare { get; init; }

    [JsonPropertyName("thoroughfare")]
    public string? Thoroughfare { get; init; }

    [JsonPropertyName("flights")]
    public object? Flights { get; init; }

    [JsonPropertyName("latitude")]
    public string? Latitude { get; init; }

    [JsonPropertyName("longitude")]
    public string? Longitude { get; init; }

    [JsonPropertyName("team_long_name")]
    public string? TeamLongName { get; init; }

    [JsonPropertyName("opponent_long_name")]
    public string? OpponentLongName { get; init; }

    [JsonPropertyName("season")]
    public string? Season { get; init; }

    [JsonPropertyName("last_updated")]
    public string? LastUpdated { get; init; }

    [JsonPropertyName("sport_path")]
    public string? SportPath { get; init; }

    [JsonPropertyName("league_path")]
    public string? LeaguePath { get; init; }

    [JsonPropertyName("team_conference_id")]
    public object? TeamConferenceId { get; init; }

    [JsonPropertyName("opponent_conference_id")]
    public object? OpponentConferenceId { get; init; }

    [JsonPropertyName("api_url")]
    public string? ApiUrl { get; init; }

    [JsonPropertyName("critical_devices")]
    public IReadOnlyList<object>? CriticalDevices { get; init; }

    [JsonPropertyName("warning_devices")]
    public IReadOnlyList<object>? WarningDevices { get; init; }

    [JsonPropertyName("display_name")]
    public string? DisplayName { get; init; }

    [JsonPropertyName("id")]
    public string? Id { get; init; }

    [JsonPropertyName("product")]
    public string? Product { get; init; }

    [JsonPropertyName("type")]
    public string? Type { get; init; }

    [JsonPropertyName("uri")]
    public string? Uri { get; init; }

    [JsonPropertyName("filter_explicit_enabled")]
    public bool? FilterExplicitEnabled { get; init; }

    [JsonPropertyName("filter_explicit_locked")]
    public bool? FilterExplicitLocked { get; init; }

    [JsonPropertyName("followers_count")]
    public double? FollowersCount { get; init; }

    [JsonPropertyName("entry_id")]
    public string? EntryId { get; init; }
}

public partial record NumericSensorEntity : NumericEntity<NumericSensorEntity, NumericEntityState<NumericSensorAttributes>, NumericSensorAttributes>, ISensorEntityCore
{
    public NumericSensorEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public NumericSensorEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record NumericSensorAttributes
{
    [JsonPropertyName("unit_of_measurement")]
    public string? UnitOfMeasurement { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("state_class")]
    public string? StateClass { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("tracking_#")]
    public IReadOnlyList<object>? Tracking { get; init; }

    [JsonPropertyName("time")]
    public string? Time { get; init; }

    [JsonPropertyName("server_name")]
    public string? ServerName { get; init; }

    [JsonPropertyName("server_country")]
    public string? ServerCountry { get; init; }

    [JsonPropertyName("server_id")]
    public string? ServerId { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("bytes_received")]
    public double? BytesReceived { get; init; }

    [JsonPropertyName("bytes_sent")]
    public double? BytesSent { get; init; }

    [JsonPropertyName("Stationname")]
    public string? Stationname { get; init; }

    [JsonPropertyName("Measured")]
    public string? Measured { get; init; }

    [JsonPropertyName("entities")]
    public IReadOnlyList<object>? Entities { get; init; }

    [JsonPropertyName("temperature_valid")]
    public bool? TemperatureValid { get; init; }

    [JsonPropertyName("light_level")]
    public double? LightLevel { get; init; }

    [JsonPropertyName("light_level_valid")]
    public bool? LightLevelValid { get; init; }

    [JsonPropertyName("battery_state")]
    public string? BatteryState { get; init; }

    [JsonPropertyName("repositories")]
    public IReadOnlyList<object>? Repositories { get; init; }

    [JsonPropertyName("current")]
    public double? Current { get; init; }

    [JsonPropertyName("voltage")]
    public double? Voltage { get; init; }

    [JsonPropertyName("last_run_success")]
    public object? LastRunSuccess { get; init; }

    [JsonPropertyName("power_consumption_start")]
    public string? PowerConsumptionStart { get; init; }

    [JsonPropertyName("power_consumption_end")]
    public string? PowerConsumptionEnd { get; init; }

    [JsonPropertyName("free")]
    public double? Free { get; init; }

    [JsonPropertyName("total")]
    public double? Total { get; init; }

    [JsonPropertyName("used")]
    public double? Used { get; init; }

    [JsonPropertyName("core_1")]
    public double? Core1 { get; init; }

    [JsonPropertyName("core_2")]
    public double? Core2 { get; init; }

    [JsonPropertyName("core_3")]
    public double? Core3 { get; init; }

    [JsonPropertyName("core_4")]
    public double? Core4 { get; init; }

    [JsonPropertyName("battery_voltage")]
    public double? BatteryVoltage { get; init; }

    [JsonPropertyName("raw_state")]
    public double? RawState { get; init; }

    [JsonPropertyName("last_reset")]
    public string? LastReset { get; init; }

    [JsonPropertyName("data")]
    public IReadOnlyList<object>? Data { get; init; }

    [JsonPropertyName("price_ct_per_kwh")]
    public double? PriceCtPerKwh { get; init; }

    [JsonPropertyName("start_time")]
    public string? StartTime { get; init; }

    [JsonPropertyName("end_time")]
    public string? EndTime { get; init; }

    [JsonPropertyName("country_code")]
    public string? CountryCode { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("calculation_mode")]
    public string? CalculationMode { get; init; }

    [JsonPropertyName("integration")]
    public string? Integration { get; init; }

    [JsonPropertyName("source_entity")]
    public string? SourceEntity { get; init; }

    [JsonPropertyName("source_domain")]
    public string? SourceDomain { get; init; }

    [JsonPropertyName("energy_sensor_entity_id")]
    public string? EnergySensorEntityId { get; init; }

    [JsonPropertyName("source")]
    public string? Source { get; init; }

    [JsonPropertyName("destination_addresses")]
    public IReadOnlyList<string>? DestinationAddresses { get; init; }

    [JsonPropertyName("origin_addresses")]
    public IReadOnlyList<string>? OriginAddresses { get; init; }

    [JsonPropertyName("status")]
    public string? Status { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("units")]
    public string? Units { get; init; }

    [JsonPropertyName("duration_in_traffic")]
    public string? DurationInTraffic { get; init; }

    [JsonPropertyName("duration")]
    public string? Duration { get; init; }

    [JsonPropertyName("distance")]
    public string? Distance { get; init; }

    [JsonPropertyName("origin")]
    public string? Origin { get; init; }

    [JsonPropertyName("destination")]
    public string? Destination { get; init; }

    [JsonPropertyName("assumed_state")]
    public bool? AssumedState { get; init; }

    [JsonPropertyName("android.appInfo_com.nianticlabs.pokemongo_0")]
    public string? Android_appInfoCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("android.bigText_com.nianticlabs.pokemongo_0")]
    public string? Android_bigTextCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("android.infoText_com.nianticlabs.pokemongo_0")]
    public string? Android_infoTextCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("android.largeIcon_com.nianticlabs.pokemongo_0")]
    public string? Android_largeIconCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.nianticlabs.pokemongo_0")]
    public bool? Android_progressIndeterminateCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("android.progressMax_com.nianticlabs.pokemongo_0")]
    public double? Android_progressMaxCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("android.progress_com.nianticlabs.pokemongo_0")]
    public double? Android_progressCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("android.reduced.images_com.nianticlabs.pokemongo_0")]
    public bool? Android_reduced_imagesCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.nianticlabs.pokemongo_0")]
    public string? Android_remoteInputHistoryCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("android.showChronometer_com.nianticlabs.pokemongo_0")]
    public bool? Android_showChronometerCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("android.showWhen_com.nianticlabs.pokemongo_0")]
    public bool? Android_showWhenCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("android.subText_com.nianticlabs.pokemongo_0")]
    public string? Android_subTextCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("android.template_com.nianticlabs.pokemongo_0")]
    public string? Android_templateCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("android.text_com.nianticlabs.pokemongo_0")]
    public string? Android_textCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("android.title_com.nianticlabs.pokemongo_0")]
    public string? Android_titleCom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.nianticlabs.pokemongo_0")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_nianticlabs_pokemongo0 { get; init; }

    [JsonPropertyName("com.nianticlabs.pokemongo_0_category")]
    public string? Com_nianticlabs_pokemongo0Category { get; init; }

    [JsonPropertyName("com.nianticlabs.pokemongo_0_channel_id")]
    public string? Com_nianticlabs_pokemongo0ChannelId { get; init; }

    [JsonPropertyName("com.nianticlabs.pokemongo_0_group_id")]
    public string? Com_nianticlabs_pokemongo0GroupId { get; init; }

    [JsonPropertyName("com.nianticlabs.pokemongo_0_is_clearable")]
    public bool? Com_nianticlabs_pokemongo0IsClearable { get; init; }

    [JsonPropertyName("com.nianticlabs.pokemongo_0_is_ongoing")]
    public bool? Com_nianticlabs_pokemongo0IsOngoing { get; init; }

    [JsonPropertyName("com.nianticlabs.pokemongo_0_post_time")]
    public double? Com_nianticlabs_pokemongo0PostTime { get; init; }

    [JsonPropertyName("light")]
    public double? Light { get; init; }

    [JsonPropertyName("motion")]
    public double? Motion { get; init; }

    [JsonPropertyName("timestamp")]
    public double? Timestamp { get; init; }

    [JsonPropertyName("end")]
    public double? End { get; init; }

    [JsonPropertyName("start")]
    public double? Start { get; init; }

    [JsonPropertyName("connected_not_paired_devices")]
    public IReadOnlyList<object>? ConnectedNotPairedDevices { get; init; }

    [JsonPropertyName("connected_paired_devices")]
    public object? ConnectedPairedDevices { get; init; }

    [JsonPropertyName("paired_devices")]
    public IReadOnlyList<string>? PairedDevices { get; init; }

    [JsonPropertyName("Chrome.NotificationBundleIconIdExtra_com.android.chrome_1000268")]
    public double? Chrome_NotificationBundleIconIdExtraCom_android_chrome1000268 { get; init; }

    [JsonPropertyName("android.appInfo_com.android.chrome_1000268")]
    public string? Android_appInfoCom_android_chrome1000268 { get; init; }

    [JsonPropertyName("android.appInfo_com.supercell.clashofclans_1255853014")]
    public string? Android_appInfoCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-925747351")]
    public string? Android_appInfoIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-926481880")]
    public string? Android_appInfoIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.appInfo_org.telegram.messenger_-1387645189")]
    public string? Android_appInfoOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.bigText_com.supercell.clashofclans_1255853014")]
    public string? Android_bigTextCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.bigText_io.homeassistant.companion.android_-925747351")]
    public string? Android_bigTextIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.bigText_io.homeassistant.companion.android_-926481880")]
    public string? Android_bigTextIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.conversationUnreadMessageCount_org.telegram.messenger_-1387645189")]
    public double? Android_conversationUnreadMessageCountOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.hiddenConversationTitle_org.telegram.messenger_-1387645189")]
    public string? Android_hiddenConversationTitleOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.infoText_com.android.chrome_1000268")]
    public string? Android_infoTextCom_android_chrome1000268 { get; init; }

    [JsonPropertyName("android.infoText_com.supercell.clashofclans_1255853014")]
    public string? Android_infoTextCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-925747351")]
    public string? Android_infoTextIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-926481880")]
    public string? Android_infoTextIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.infoText_org.telegram.messenger_-1387645189")]
    public string? Android_infoTextOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.isGroupConversation_org.telegram.messenger_-1387645189")]
    public bool? Android_isGroupConversationOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.largeIcon_com.android.chrome_1000268")]
    public string? Android_largeIconCom_android_chrome1000268 { get; init; }

    [JsonPropertyName("android.largeIcon_com.supercell.clashofclans_1255853014")]
    public string? Android_largeIconCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-925747351")]
    public string? Android_largeIconIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-926481880")]
    public string? Android_largeIconIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.largeIcon_org.telegram.messenger_-1387645189")]
    public string? Android_largeIconOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.messages_org.telegram.messenger_-1387645189")]
    public IReadOnlyList<string>? Android_messagesOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.messagingStyleUser_org.telegram.messenger_-1387645189")]
    public string? Android_messagingStyleUserOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.messagingUser_org.telegram.messenger_-1387645189")]
    public string? Android_messagingUserOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.android.chrome_1000268")]
    public bool? Android_progressIndeterminateCom_android_chrome1000268 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.supercell.clashofclans_1255853014")]
    public bool? Android_progressIndeterminateCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-925747351")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-926481880")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_org.telegram.messenger_-1387645189")]
    public bool? Android_progressIndeterminateOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.progressMax_com.android.chrome_1000268")]
    public double? Android_progressMaxCom_android_chrome1000268 { get; init; }

    [JsonPropertyName("android.progressMax_com.supercell.clashofclans_1255853014")]
    public double? Android_progressMaxCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-925747351")]
    public double? Android_progressMaxIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-926481880")]
    public double? Android_progressMaxIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.progressMax_org.telegram.messenger_-1387645189")]
    public double? Android_progressMaxOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.progress_com.android.chrome_1000268")]
    public double? Android_progressCom_android_chrome1000268 { get; init; }

    [JsonPropertyName("android.progress_com.supercell.clashofclans_1255853014")]
    public double? Android_progressCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-925747351")]
    public double? Android_progressIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-926481880")]
    public double? Android_progressIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.progress_org.telegram.messenger_-1387645189")]
    public double? Android_progressOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.reduced.images_com.android.chrome_1000268")]
    public bool? Android_reduced_imagesCom_android_chrome1000268 { get; init; }

    [JsonPropertyName("android.reduced.images_com.supercell.clashofclans_1255853014")]
    public bool? Android_reduced_imagesCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-925747351")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-926481880")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.reduced.images_org.telegram.messenger_-1387645189")]
    public bool? Android_reduced_imagesOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.android.chrome_1000268")]
    public string? Android_remoteInputHistoryCom_android_chrome1000268 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.supercell.clashofclans_1255853014")]
    public string? Android_remoteInputHistoryCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-925747351")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-926481880")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_org.telegram.messenger_-1387645189")]
    public string? Android_remoteInputHistoryOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.selfDisplayName_org.telegram.messenger_-1387645189")]
    public string? Android_selfDisplayNameOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.showChronometer_com.android.chrome_1000268")]
    public bool? Android_showChronometerCom_android_chrome1000268 { get; init; }

    [JsonPropertyName("android.showChronometer_com.supercell.clashofclans_1255853014")]
    public bool? Android_showChronometerCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-925747351")]
    public bool? Android_showChronometerIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-926481880")]
    public bool? Android_showChronometerIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.showChronometer_org.telegram.messenger_-1387645189")]
    public bool? Android_showChronometerOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.showWhen_com.android.chrome_1000268")]
    public bool? Android_showWhenCom_android_chrome1000268 { get; init; }

    [JsonPropertyName("android.showWhen_com.supercell.clashofclans_1255853014")]
    public bool? Android_showWhenCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-925747351")]
    public bool? Android_showWhenIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-926481880")]
    public bool? Android_showWhenIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.showWhen_org.telegram.messenger_-1387645189")]
    public bool? Android_showWhenOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.subText_com.android.chrome_1000268")]
    public string? Android_subTextCom_android_chrome1000268 { get; init; }

    [JsonPropertyName("android.subText_com.supercell.clashofclans_1255853014")]
    public string? Android_subTextCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-925747351")]
    public string? Android_subTextIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-926481880")]
    public string? Android_subTextIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.subText_org.telegram.messenger_-1387645189")]
    public string? Android_subTextOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.template_com.supercell.clashofclans_1255853014")]
    public string? Android_templateCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-925747351")]
    public string? Android_templateIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-926481880")]
    public string? Android_templateIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.template_org.telegram.messenger_-1387645189")]
    public string? Android_templateOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.text_com.android.chrome_1000268")]
    public string? Android_textCom_android_chrome1000268 { get; init; }

    [JsonPropertyName("android.text_com.supercell.clashofclans_1255853014")]
    public string? Android_textCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-925747351")]
    public string? Android_textIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-926481880")]
    public string? Android_textIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.text_org.telegram.messenger_-1387645189")]
    public string? Android_textOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.title_com.android.chrome_1000268")]
    public string? Android_titleCom_android_chrome1000268 { get; init; }

    [JsonPropertyName("android.title_com.supercell.clashofclans_1255853014")]
    public string? Android_titleCom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-925747351")]
    public string? Android_titleIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-926481880")]
    public string? Android_titleIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("android.title_org.telegram.messenger_-1387645189")]
    public string? Android_titleOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("android.wearable.EXTENSIONS_org.telegram.messenger_-1387645189")]
    public string? Android_wearable_EXTENSIONSOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.supercell.clashofclans_1255853014")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_supercell_clashofclans1255853014 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-925747351")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android925747351 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-926481880")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android926481880 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_org.telegram.messenger_-1387645189")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEOrg_telegram_messenger1387645189 { get; init; }

    [JsonPropertyName("com.android.chrome_1000268_category")]
    public string? Com_android_chrome1000268Category { get; init; }

    [JsonPropertyName("com.android.chrome_1000268_channel_id")]
    public string? Com_android_chrome1000268ChannelId { get; init; }

    [JsonPropertyName("com.android.chrome_1000268_group_id")]
    public string? Com_android_chrome1000268GroupId { get; init; }

    [JsonPropertyName("com.android.chrome_1000268_is_clearable")]
    public bool? Com_android_chrome1000268IsClearable { get; init; }

    [JsonPropertyName("com.android.chrome_1000268_is_ongoing")]
    public bool? Com_android_chrome1000268IsOngoing { get; init; }

    [JsonPropertyName("com.android.chrome_1000268_post_time")]
    public double? Com_android_chrome1000268PostTime { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_1255853014_category")]
    public string? Com_supercell_clashofclans1255853014Category { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_1255853014_channel_id")]
    public string? Com_supercell_clashofclans1255853014ChannelId { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_1255853014_group_id")]
    public string? Com_supercell_clashofclans1255853014GroupId { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_1255853014_is_clearable")]
    public bool? Com_supercell_clashofclans1255853014IsClearable { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_1255853014_is_ongoing")]
    public bool? Com_supercell_clashofclans1255853014IsOngoing { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_1255853014_post_time")]
    public double? Com_supercell_clashofclans1255853014PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-925747351_category")]
    public string? Io_homeassistant_companion_android925747351Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-925747351_channel_id")]
    public string? Io_homeassistant_companion_android925747351ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-925747351_group_id")]
    public string? Io_homeassistant_companion_android925747351GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-925747351_is_clearable")]
    public bool? Io_homeassistant_companion_android925747351IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-925747351_is_ongoing")]
    public bool? Io_homeassistant_companion_android925747351IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-925747351_post_time")]
    public double? Io_homeassistant_companion_android925747351PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-926481880_category")]
    public string? Io_homeassistant_companion_android926481880Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-926481880_channel_id")]
    public string? Io_homeassistant_companion_android926481880ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-926481880_group_id")]
    public string? Io_homeassistant_companion_android926481880GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-926481880_is_clearable")]
    public bool? Io_homeassistant_companion_android926481880IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-926481880_is_ongoing")]
    public bool? Io_homeassistant_companion_android926481880IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-926481880_post_time")]
    public double? Io_homeassistant_companion_android926481880PostTime { get; init; }

    [JsonPropertyName("org.telegram.messenger_-1387645189_category")]
    public string? Org_telegram_messenger1387645189Category { get; init; }

    [JsonPropertyName("org.telegram.messenger_-1387645189_channel_id")]
    public string? Org_telegram_messenger1387645189ChannelId { get; init; }

    [JsonPropertyName("org.telegram.messenger_-1387645189_group_id")]
    public string? Org_telegram_messenger1387645189GroupId { get; init; }

    [JsonPropertyName("org.telegram.messenger_-1387645189_is_clearable")]
    public bool? Org_telegram_messenger1387645189IsClearable { get; init; }

    [JsonPropertyName("org.telegram.messenger_-1387645189_is_ongoing")]
    public bool? Org_telegram_messenger1387645189IsOngoing { get; init; }

    [JsonPropertyName("org.telegram.messenger_-1387645189_post_time")]
    public double? Org_telegram_messenger1387645189PostTime { get; init; }

    [JsonPropertyName("Free internal storage")]
    public string? Freeinternalstorage { get; init; }

    [JsonPropertyName("Total internal storage")]
    public string? Totalinternalstorage { get; init; }

    [JsonPropertyName("android.appInfo_com.android.systemui_2131428972")]
    public string? Android_appInfoCom_android_systemui2131428972 { get; init; }

    [JsonPropertyName("android.appInfo_com.nextdoor_601899204")]
    public string? Android_appInfoCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.appInfo_com.samsung.android.app.routines_103")]
    public string? Android_appInfoCom_samsung_android_app_routines103 { get; init; }

    [JsonPropertyName("android.appInfo_com.spotify.music_2131430823")]
    public string? Android_appInfoCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-498207599")]
    public string? Android_appInfoIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("android.bigText_com.android.systemui_2131428972")]
    public string? Android_bigTextCom_android_systemui2131428972 { get; init; }

    [JsonPropertyName("android.bigText_com.nextdoor_601899204")]
    public string? Android_bigTextCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.bigText_com.samsung.android.app.routines_103")]
    public string? Android_bigTextCom_samsung_android_app_routines103 { get; init; }

    [JsonPropertyName("android.bigText_io.homeassistant.companion.android_-498207599")]
    public string? Android_bigTextIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("android.colorized_com.samsung.android.app.routines_103")]
    public bool? Android_colorizedCom_samsung_android_app_routines103 { get; init; }

    [JsonPropertyName("android.compactActions_com.spotify.music_2131430823")]
    public IReadOnlyList<double>? Android_compactActionsCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.infoText_com.nextdoor_601899204")]
    public string? Android_infoTextCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.infoText_com.spotify.music_2131430823")]
    public string? Android_infoTextCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-498207599")]
    public string? Android_infoTextIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("android.largeIcon_com.nextdoor_601899204")]
    public string? Android_largeIconCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.largeIcon_com.spotify.music_2131430823")]
    public string? Android_largeIconCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-498207599")]
    public string? Android_largeIconIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("android.mediaSession_com.spotify.music_2131430823")]
    public string? Android_mediaSessionCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.nextdoor_601899204")]
    public bool? Android_progressIndeterminateCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.spotify.music_2131430823")]
    public bool? Android_progressIndeterminateCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-498207599")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("android.progressMax_com.nextdoor_601899204")]
    public double? Android_progressMaxCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.progressMax_com.spotify.music_2131430823")]
    public double? Android_progressMaxCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-498207599")]
    public double? Android_progressMaxIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("android.progress_com.nextdoor_601899204")]
    public double? Android_progressCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.progress_com.spotify.music_2131430823")]
    public double? Android_progressCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-498207599")]
    public double? Android_progressIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("android.reduced.images_com.android.systemui_2131428972")]
    public bool? Android_reduced_imagesCom_android_systemui2131428972 { get; init; }

    [JsonPropertyName("android.reduced.images_com.nextdoor_601899204")]
    public bool? Android_reduced_imagesCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.reduced.images_com.samsung.android.app.routines_103")]
    public bool? Android_reduced_imagesCom_samsung_android_app_routines103 { get; init; }

    [JsonPropertyName("android.reduced.images_com.spotify.music_2131430823")]
    public bool? Android_reduced_imagesCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-498207599")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.nextdoor_601899204")]
    public string? Android_remoteInputHistoryCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.spotify.music_2131430823")]
    public string? Android_remoteInputHistoryCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-498207599")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("android.showChronometer_com.nextdoor_601899204")]
    public bool? Android_showChronometerCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.showChronometer_com.spotify.music_2131430823")]
    public bool? Android_showChronometerCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-498207599")]
    public bool? Android_showChronometerIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("android.showWhen_com.android.systemui_2131428972")]
    public bool? Android_showWhenCom_android_systemui2131428972 { get; init; }

    [JsonPropertyName("android.showWhen_com.nextdoor_601899204")]
    public bool? Android_showWhenCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.showWhen_com.samsung.android.app.routines_103")]
    public bool? Android_showWhenCom_samsung_android_app_routines103 { get; init; }

    [JsonPropertyName("android.showWhen_com.spotify.music_2131430823")]
    public bool? Android_showWhenCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-498207599")]
    public bool? Android_showWhenIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("android.subText_com.nextdoor_601899204")]
    public string? Android_subTextCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.subText_com.spotify.music_2131430823")]
    public string? Android_subTextCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-498207599")]
    public string? Android_subTextIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("android.substName_com.android.systemui_2131428972")]
    public string? Android_substNameCom_android_systemui2131428972 { get; init; }

    [JsonPropertyName("android.summaryText_com.nextdoor_601899204")]
    public string? Android_summaryTextCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.template_com.android.systemui_2131428972")]
    public string? Android_templateCom_android_systemui2131428972 { get; init; }

    [JsonPropertyName("android.template_com.nextdoor_601899204")]
    public string? Android_templateCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.template_com.samsung.android.app.routines_103")]
    public string? Android_templateCom_samsung_android_app_routines103 { get; init; }

    [JsonPropertyName("android.template_com.spotify.music_2131430823")]
    public string? Android_templateCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-498207599")]
    public string? Android_templateIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("android.text_com.android.systemui_2131428972")]
    public string? Android_textCom_android_systemui2131428972 { get; init; }

    [JsonPropertyName("android.text_com.nextdoor_601899204")]
    public string? Android_textCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.text_com.samsung.android.app.routines_103")]
    public string? Android_textCom_samsung_android_app_routines103 { get; init; }

    [JsonPropertyName("android.text_com.spotify.music_2131430823")]
    public string? Android_textCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-498207599")]
    public string? Android_textIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("android.title.big_com.android.systemui_2131428972")]
    public string? Android_title_bigCom_android_systemui2131428972 { get; init; }

    [JsonPropertyName("android.title.big_com.samsung.android.app.routines_103")]
    public string? Android_title_bigCom_samsung_android_app_routines103 { get; init; }

    [JsonPropertyName("android.title_com.android.systemui_2131428972")]
    public string? Android_titleCom_android_systemui2131428972 { get; init; }

    [JsonPropertyName("android.title_com.nextdoor_601899204")]
    public string? Android_titleCom_nextdoor601899204 { get; init; }

    [JsonPropertyName("android.title_com.samsung.android.app.routines_103")]
    public string? Android_titleCom_samsung_android_app_routines103 { get; init; }

    [JsonPropertyName("android.title_com.spotify.music_2131430823")]
    public string? Android_titleCom_spotify_music2131430823 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-498207599")]
    public string? Android_titleIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.nextdoor_601899204")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_nextdoor601899204 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-498207599")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android498207599 { get; init; }

    [JsonPropertyName("com.android.systemui_2131428972_category")]
    public string? Com_android_systemui2131428972Category { get; init; }

    [JsonPropertyName("com.android.systemui_2131428972_channel_id")]
    public string? Com_android_systemui2131428972ChannelId { get; init; }

    [JsonPropertyName("com.android.systemui_2131428972_group_id")]
    public string? Com_android_systemui2131428972GroupId { get; init; }

    [JsonPropertyName("com.android.systemui_2131428972_is_clearable")]
    public bool? Com_android_systemui2131428972IsClearable { get; init; }

    [JsonPropertyName("com.android.systemui_2131428972_is_ongoing")]
    public bool? Com_android_systemui2131428972IsOngoing { get; init; }

    [JsonPropertyName("com.android.systemui_2131428972_post_time")]
    public double? Com_android_systemui2131428972PostTime { get; init; }

    [JsonPropertyName("com.nextdoor_601899204_category")]
    public string? Com_nextdoor601899204Category { get; init; }

    [JsonPropertyName("com.nextdoor_601899204_channel_id")]
    public string? Com_nextdoor601899204ChannelId { get; init; }

    [JsonPropertyName("com.nextdoor_601899204_group_id")]
    public string? Com_nextdoor601899204GroupId { get; init; }

    [JsonPropertyName("com.nextdoor_601899204_is_clearable")]
    public bool? Com_nextdoor601899204IsClearable { get; init; }

    [JsonPropertyName("com.nextdoor_601899204_is_ongoing")]
    public bool? Com_nextdoor601899204IsOngoing { get; init; }

    [JsonPropertyName("com.nextdoor_601899204_post_time")]
    public double? Com_nextdoor601899204PostTime { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_103_category")]
    public string? Com_samsung_android_app_routines103Category { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_103_channel_id")]
    public string? Com_samsung_android_app_routines103ChannelId { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_103_group_id")]
    public string? Com_samsung_android_app_routines103GroupId { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_103_is_clearable")]
    public bool? Com_samsung_android_app_routines103IsClearable { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_103_is_ongoing")]
    public bool? Com_samsung_android_app_routines103IsOngoing { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_103_post_time")]
    public double? Com_samsung_android_app_routines103PostTime { get; init; }

    [JsonPropertyName("com.spotify.music_2131430823_category")]
    public string? Com_spotify_music2131430823Category { get; init; }

    [JsonPropertyName("com.spotify.music_2131430823_channel_id")]
    public string? Com_spotify_music2131430823ChannelId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430823_group_id")]
    public string? Com_spotify_music2131430823GroupId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430823_is_clearable")]
    public bool? Com_spotify_music2131430823IsClearable { get; init; }

    [JsonPropertyName("com.spotify.music_2131430823_is_ongoing")]
    public bool? Com_spotify_music2131430823IsOngoing { get; init; }

    [JsonPropertyName("com.spotify.music_2131430823_post_time")]
    public double? Com_spotify_music2131430823PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-498207599_category")]
    public string? Io_homeassistant_companion_android498207599Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-498207599_channel_id")]
    public string? Io_homeassistant_companion_android498207599ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-498207599_group_id")]
    public string? Io_homeassistant_companion_android498207599GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-498207599_is_clearable")]
    public bool? Io_homeassistant_companion_android498207599IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-498207599_is_ongoing")]
    public bool? Io_homeassistant_companion_android498207599IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-498207599_post_time")]
    public double? Io_homeassistant_companion_android498207599PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.instagram.android_64278")]
    public string? Android_appInfoCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.appInfo_com.samsung.android.messaging_123")]
    public string? Android_appInfoCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.appInfo_com.whatsapp_1")]
    public string? Android_appInfoCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.conversationUnreadMessageCount_com.samsung.android.messaging_123")]
    public double? Android_conversationUnreadMessageCountCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.conversationUnreadMessageCount_com.whatsapp_1")]
    public double? Android_conversationUnreadMessageCountCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.hiddenConversationTitle_com.samsung.android.messaging_123")]
    public string? Android_hiddenConversationTitleCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.hiddenConversationTitle_com.whatsapp_1")]
    public string? Android_hiddenConversationTitleCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.infoText_com.instagram.android_64278")]
    public string? Android_infoTextCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.infoText_com.samsung.android.messaging_123")]
    public string? Android_infoTextCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.infoText_com.whatsapp_1")]
    public string? Android_infoTextCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.isGroupConversation_com.samsung.android.messaging_123")]
    public bool? Android_isGroupConversationCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.isGroupConversation_com.whatsapp_1")]
    public bool? Android_isGroupConversationCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.largeIcon_com.instagram.android_64278")]
    public string? Android_largeIconCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.largeIcon_com.samsung.android.messaging_123")]
    public string? Android_largeIconCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.largeIcon_com.whatsapp_1")]
    public string? Android_largeIconCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.messages_com.samsung.android.messaging_123")]
    public IReadOnlyList<string>? Android_messagesCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.messages_com.whatsapp_1")]
    public IReadOnlyList<string>? Android_messagesCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.messagingStyleUser_com.samsung.android.messaging_123")]
    public string? Android_messagingStyleUserCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.messagingStyleUser_com.whatsapp_1")]
    public string? Android_messagingStyleUserCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.messagingUser_com.samsung.android.messaging_123")]
    public string? Android_messagingUserCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.messagingUser_com.whatsapp_1")]
    public string? Android_messagingUserCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.people.list_com.samsung.android.messaging_123")]
    public IReadOnlyList<string>? Android_people_listCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.people.list_com.whatsapp_1")]
    public IReadOnlyList<string>? Android_people_listCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.instagram.android_64278")]
    public bool? Android_progressIndeterminateCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.samsung.android.messaging_123")]
    public bool? Android_progressIndeterminateCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.whatsapp_1")]
    public bool? Android_progressIndeterminateCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.progressMax_com.instagram.android_64278")]
    public double? Android_progressMaxCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.progressMax_com.samsung.android.messaging_123")]
    public double? Android_progressMaxCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.progressMax_com.whatsapp_1")]
    public double? Android_progressMaxCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.progress_com.instagram.android_64278")]
    public double? Android_progressCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.progress_com.samsung.android.messaging_123")]
    public double? Android_progressCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.progress_com.whatsapp_1")]
    public double? Android_progressCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.reduced.images_com.instagram.android_64278")]
    public bool? Android_reduced_imagesCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.reduced.images_com.samsung.android.messaging_123")]
    public bool? Android_reduced_imagesCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.reduced.images_com.whatsapp_1")]
    public bool? Android_reduced_imagesCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.instagram.android_64278")]
    public string? Android_remoteInputHistoryCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.samsung.android.messaging_123")]
    public string? Android_remoteInputHistoryCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.whatsapp_1")]
    public string? Android_remoteInputHistoryCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.selfDisplayName_com.samsung.android.messaging_123")]
    public string? Android_selfDisplayNameCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.selfDisplayName_com.whatsapp_1")]
    public string? Android_selfDisplayNameCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.showChronometer_com.instagram.android_64278")]
    public bool? Android_showChronometerCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.showChronometer_com.samsung.android.messaging_123")]
    public bool? Android_showChronometerCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.showChronometer_com.whatsapp_1")]
    public bool? Android_showChronometerCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.showWhen_com.instagram.android_64278")]
    public bool? Android_showWhenCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.showWhen_com.samsung.android.messaging_123")]
    public bool? Android_showWhenCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.showWhen_com.whatsapp_1")]
    public bool? Android_showWhenCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.subText_com.instagram.android_64278")]
    public string? Android_subTextCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.subText_com.samsung.android.messaging_123")]
    public string? Android_subTextCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.subText_com.whatsapp_1")]
    public string? Android_subTextCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.template_com.instagram.android_64278")]
    public string? Android_templateCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.template_com.samsung.android.messaging_123")]
    public string? Android_templateCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.template_com.whatsapp_1")]
    public string? Android_templateCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.textLines_com.instagram.android_64278")]
    public IReadOnlyList<string>? Android_textLinesCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.text_com.instagram.android_64278")]
    public string? Android_textCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.text_com.samsung.android.messaging_123")]
    public string? Android_textCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.text_com.whatsapp_1")]
    public string? Android_textCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.title_com.instagram.android_64278")]
    public string? Android_titleCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.title_com.samsung.android.messaging_123")]
    public string? Android_titleCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("android.title_com.whatsapp_1")]
    public string? Android_titleCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.wearable.EXTENSIONS_com.whatsapp_1")]
    public string? Android_wearable_EXTENSIONSCom_whatsapp1 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.instagram.android_64278")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_instagram_android64278 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.samsung.android.messaging_123")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.whatsapp_1")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_whatsapp1 { get; init; }

    [JsonPropertyName("com.instagram.android.igns.logging.channel_type_com.instagram.android_64278")]
    public string? Com_instagram_android_igns_logging_channelTypeCom_instagram_android64278 { get; init; }

    [JsonPropertyName("com.instagram.android.igns.logging.collapse_key_com.instagram.android_64278")]
    public string? Com_instagram_android_igns_logging_collapseKeyCom_instagram_android64278 { get; init; }

    [JsonPropertyName("com.instagram.android.igns.logging.has_message_com.instagram.android_64278")]
    public bool? Com_instagram_android_igns_logging_hasMessageCom_instagram_android64278 { get; init; }

    [JsonPropertyName("com.instagram.android.igns.logging.ig_action_com.instagram.android_64278")]
    public string? Com_instagram_android_igns_logging_igActionCom_instagram_android64278 { get; init; }

    [JsonPropertyName("com.instagram.android.igns.logging.intended_recipient_id_com.instagram.android_64278")]
    public string? Com_instagram_android_igns_logging_intendedRecipientIdCom_instagram_android64278 { get; init; }

    [JsonPropertyName("com.instagram.android.igns.logging.push_category_com.instagram.android_64278")]
    public string? Com_instagram_android_igns_logging_pushCategoryCom_instagram_android64278 { get; init; }

    [JsonPropertyName("com.instagram.android.igns.logging.push_id_com.instagram.android_64278")]
    public string? Com_instagram_android_igns_logging_pushIdCom_instagram_android64278 { get; init; }

    [JsonPropertyName("com.instagram.android.igns.logging.revoked_id_com.instagram.android_64278")]
    public string? Com_instagram_android_igns_logging_revokedIdCom_instagram_android64278 { get; init; }

    [JsonPropertyName("com.instagram.android.igns.logging.sender_id_com.instagram.android_64278")]
    public string? Com_instagram_android_igns_logging_senderIdCom_instagram_android64278 { get; init; }

    [JsonPropertyName("com.instagram.android_64278_category")]
    public string? Com_instagram_android64278Category { get; init; }

    [JsonPropertyName("com.instagram.android_64278_channel_id")]
    public string? Com_instagram_android64278ChannelId { get; init; }

    [JsonPropertyName("com.instagram.android_64278_group_id")]
    public string? Com_instagram_android64278GroupId { get; init; }

    [JsonPropertyName("com.instagram.android_64278_is_clearable")]
    public bool? Com_instagram_android64278IsClearable { get; init; }

    [JsonPropertyName("com.instagram.android_64278_is_ongoing")]
    public bool? Com_instagram_android64278IsOngoing { get; init; }

    [JsonPropertyName("com.instagram.android_64278_post_time")]
    public double? Com_instagram_android64278PostTime { get; init; }

    [JsonPropertyName("com.samsung.android.messaging_123_category")]
    public string? Com_samsung_android_messaging123Category { get; init; }

    [JsonPropertyName("com.samsung.android.messaging_123_channel_id")]
    public string? Com_samsung_android_messaging123ChannelId { get; init; }

    [JsonPropertyName("com.samsung.android.messaging_123_group_id")]
    public string? Com_samsung_android_messaging123GroupId { get; init; }

    [JsonPropertyName("com.samsung.android.messaging_123_is_clearable")]
    public bool? Com_samsung_android_messaging123IsClearable { get; init; }

    [JsonPropertyName("com.samsung.android.messaging_123_is_ongoing")]
    public bool? Com_samsung_android_messaging123IsOngoing { get; init; }

    [JsonPropertyName("com.samsung.android.messaging_123_post_time")]
    public double? Com_samsung_android_messaging123PostTime { get; init; }

    [JsonPropertyName("com.whatsapp_1_category")]
    public string? Com_whatsapp1Category { get; init; }

    [JsonPropertyName("com.whatsapp_1_channel_id")]
    public string? Com_whatsapp1ChannelId { get; init; }

    [JsonPropertyName("com.whatsapp_1_group_id")]
    public string? Com_whatsapp1GroupId { get; init; }

    [JsonPropertyName("com.whatsapp_1_is_clearable")]
    public bool? Com_whatsapp1IsClearable { get; init; }

    [JsonPropertyName("com.whatsapp_1_is_ongoing")]
    public bool? Com_whatsapp1IsOngoing { get; init; }

    [JsonPropertyName("com.whatsapp_1_post_time")]
    public double? Com_whatsapp1PostTime { get; init; }

    [JsonPropertyName("dismissalId_com.samsung.android.messaging_123")]
    public string? DismissalIdCom_samsung_android_messaging123 { get; init; }

    [JsonPropertyName("last_row_id_com.whatsapp_1")]
    public double? LastRowIdCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.appInfo_com.google.android.gms_1727814434")]
    public string? Android_appInfoCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.compactActions_com.google.android.gms_1727814434")]
    public IReadOnlyList<double>? Android_compactActionsCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.infoText_com.google.android.gms_1727814434")]
    public string? Android_infoTextCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.largeIcon_com.google.android.gms_1727814434")]
    public string? Android_largeIconCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.google.android.gms_1727814434")]
    public bool? Android_progressIndeterminateCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.progressMax_com.google.android.gms_1727814434")]
    public double? Android_progressMaxCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.progress_com.google.android.gms_1727814434")]
    public double? Android_progressCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.reduced.images_com.google.android.gms_1727814434")]
    public bool? Android_reduced_imagesCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.google.android.gms_1727814434")]
    public string? Android_remoteInputHistoryCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.showChronometer_com.google.android.gms_1727814434")]
    public bool? Android_showChronometerCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.showWhen_com.google.android.gms_1727814434")]
    public bool? Android_showWhenCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.subText_com.google.android.gms_1727814434")]
    public string? Android_subTextCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.substName_com.google.android.gms_1727814434")]
    public string? Android_substNameCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.template_com.google.android.gms_1727814434")]
    public string? Android_templateCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.text_com.google.android.gms_1727814434")]
    public string? Android_textCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("android.title_com.google.android.gms_1727814434")]
    public string? Android_titleCom_google_android_gms1727814434 { get; init; }

    [JsonPropertyName("com.google.android.gms_1727814434_category")]
    public string? Com_google_android_gms1727814434Category { get; init; }

    [JsonPropertyName("com.google.android.gms_1727814434_channel_id")]
    public string? Com_google_android_gms1727814434ChannelId { get; init; }

    [JsonPropertyName("com.google.android.gms_1727814434_group_id")]
    public string? Com_google_android_gms1727814434GroupId { get; init; }

    [JsonPropertyName("com.google.android.gms_1727814434_is_clearable")]
    public bool? Com_google_android_gms1727814434IsClearable { get; init; }

    [JsonPropertyName("com.google.android.gms_1727814434_is_ongoing")]
    public bool? Com_google_android_gms1727814434IsOngoing { get; init; }

    [JsonPropertyName("com.google.android.gms_1727814434_post_time")]
    public double? Com_google_android_gms1727814434PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.google.android.youtube_2")]
    public string? Android_appInfoCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.compactActions_com.google.android.youtube_2")]
    public IReadOnlyList<double>? Android_compactActionsCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.infoText_com.google.android.youtube_2")]
    public string? Android_infoTextCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.largeIcon_com.google.android.youtube_2")]
    public string? Android_largeIconCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.mediaSession_com.google.android.youtube_2")]
    public string? Android_mediaSessionCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.google.android.youtube_2")]
    public bool? Android_progressIndeterminateCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.progressMax_com.google.android.youtube_2")]
    public double? Android_progressMaxCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.progress_com.google.android.youtube_2")]
    public double? Android_progressCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.reduced.images_com.google.android.youtube_2")]
    public bool? Android_reduced_imagesCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.google.android.youtube_2")]
    public string? Android_remoteInputHistoryCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.showChronometer_com.google.android.youtube_2")]
    public bool? Android_showChronometerCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.showWhen_com.google.android.youtube_2")]
    public bool? Android_showWhenCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.subText_com.google.android.youtube_2")]
    public string? Android_subTextCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.template_com.google.android.youtube_2")]
    public string? Android_templateCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.text_com.google.android.youtube_2")]
    public string? Android_textCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("android.title_com.google.android.youtube_2")]
    public string? Android_titleCom_google_android_youtube2 { get; init; }

    [JsonPropertyName("com.google.android.youtube_2_category")]
    public string? Com_google_android_youtube2Category { get; init; }

    [JsonPropertyName("com.google.android.youtube_2_channel_id")]
    public string? Com_google_android_youtube2ChannelId { get; init; }

    [JsonPropertyName("com.google.android.youtube_2_group_id")]
    public string? Com_google_android_youtube2GroupId { get; init; }

    [JsonPropertyName("com.google.android.youtube_2_is_clearable")]
    public bool? Com_google_android_youtube2IsClearable { get; init; }

    [JsonPropertyName("com.google.android.youtube_2_is_ongoing")]
    public bool? Com_google_android_youtube2IsOngoing { get; init; }

    [JsonPropertyName("com.google.android.youtube_2_post_time")]
    public double? Com_google_android_youtube2PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.samsung.android.app.smartcapture_5755")]
    public string? Android_appInfoCom_samsung_android_app_smartcapture5755 { get; init; }

    [JsonPropertyName("android.appInfo_com.supercell.clashofclans_-1188546228")]
    public string? Android_appInfoCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.appInfo_com.supercell.clashofclans_774330200")]
    public string? Android_appInfoCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_1535233167")]
    public string? Android_appInfoCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.bigText_com.supercell.clashofclans_-1188546228")]
    public string? Android_bigTextCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.bigText_com.supercell.clashofclans_774330200")]
    public string? Android_bigTextCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_1535233167")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.infoText_com.supercell.clashofclans_-1188546228")]
    public string? Android_infoTextCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.infoText_com.supercell.clashofclans_774330200")]
    public string? Android_infoTextCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_1535233167")]
    public string? Android_infoTextCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.largeIcon.big_com.samsung.android.app.smartcapture_5755")]
    public string? Android_largeIcon_bigCom_samsung_android_app_smartcapture5755 { get; init; }

    [JsonPropertyName("android.largeIcon_com.samsung.android.app.smartcapture_5755")]
    public string? Android_largeIconCom_samsung_android_app_smartcapture5755 { get; init; }

    [JsonPropertyName("android.largeIcon_com.supercell.clashofclans_-1188546228")]
    public string? Android_largeIconCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.largeIcon_com.supercell.clashofclans_774330200")]
    public string? Android_largeIconCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_1535233167")]
    public string? Android_largeIconCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.pictureIcon_com.samsung.android.app.smartcapture_5755")]
    public string? Android_pictureIconCom_samsung_android_app_smartcapture5755 { get; init; }

    [JsonPropertyName("android.picture_com.samsung.android.app.smartcapture_5755")]
    public string? Android_pictureCom_samsung_android_app_smartcapture5755 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.supercell.clashofclans_-1188546228")]
    public bool? Android_progressIndeterminateCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.supercell.clashofclans_774330200")]
    public bool? Android_progressIndeterminateCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_1535233167")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.progressMax_com.supercell.clashofclans_-1188546228")]
    public double? Android_progressMaxCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.progressMax_com.supercell.clashofclans_774330200")]
    public double? Android_progressMaxCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_1535233167")]
    public double? Android_progressMaxCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.progress_com.supercell.clashofclans_-1188546228")]
    public double? Android_progressCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.progress_com.supercell.clashofclans_774330200")]
    public double? Android_progressCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_1535233167")]
    public double? Android_progressCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.reduced.images_com.samsung.android.app.smartcapture_5755")]
    public bool? Android_reduced_imagesCom_samsung_android_app_smartcapture5755 { get; init; }

    [JsonPropertyName("android.reduced.images_com.supercell.clashofclans_-1188546228")]
    public bool? Android_reduced_imagesCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.reduced.images_com.supercell.clashofclans_774330200")]
    public bool? Android_reduced_imagesCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_1535233167")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.supercell.clashofclans_-1188546228")]
    public string? Android_remoteInputHistoryCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.supercell.clashofclans_774330200")]
    public string? Android_remoteInputHistoryCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_1535233167")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.showBigPictureWhenCollapsed_com.samsung.android.app.smartcapture_5755")]
    public bool? Android_showBigPictureWhenCollapsedCom_samsung_android_app_smartcapture5755 { get; init; }

    [JsonPropertyName("android.showChronometer_com.supercell.clashofclans_-1188546228")]
    public bool? Android_showChronometerCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.showChronometer_com.supercell.clashofclans_774330200")]
    public bool? Android_showChronometerCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_1535233167")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.showWhen_com.samsung.android.app.smartcapture_5755")]
    public bool? Android_showWhenCom_samsung_android_app_smartcapture5755 { get; init; }

    [JsonPropertyName("android.showWhen_com.supercell.clashofclans_-1188546228")]
    public bool? Android_showWhenCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.showWhen_com.supercell.clashofclans_774330200")]
    public bool? Android_showWhenCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_1535233167")]
    public bool? Android_showWhenCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.subText_com.supercell.clashofclans_-1188546228")]
    public string? Android_subTextCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.subText_com.supercell.clashofclans_774330200")]
    public string? Android_subTextCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_1535233167")]
    public string? Android_subTextCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.substName_com.samsung.android.app.smartcapture_5755")]
    public string? Android_substNameCom_samsung_android_app_smartcapture5755 { get; init; }

    [JsonPropertyName("android.template_com.samsung.android.app.smartcapture_5755")]
    public string? Android_templateCom_samsung_android_app_smartcapture5755 { get; init; }

    [JsonPropertyName("android.template_com.supercell.clashofclans_-1188546228")]
    public string? Android_templateCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.template_com.supercell.clashofclans_774330200")]
    public string? Android_templateCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_1535233167")]
    public string? Android_templateCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.text_com.supercell.clashofclans_-1188546228")]
    public string? Android_textCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.text_com.supercell.clashofclans_774330200")]
    public string? Android_textCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_1535233167")]
    public string? Android_textCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.title_com.samsung.android.app.smartcapture_5755")]
    public string? Android_titleCom_samsung_android_app_smartcapture5755 { get; init; }

    [JsonPropertyName("android.title_com.supercell.clashofclans_-1188546228")]
    public string? Android_titleCom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("android.title_com.supercell.clashofclans_774330200")]
    public string? Android_titleCom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_1535233167")]
    public string? Android_titleCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.supercell.clashofclans_-1188546228")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_supercell_clashofclans1188546228 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.supercell.clashofclans_774330200")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_supercell_clashofclans774330200 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_1535233167")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("com.samsung.android.app.smartcapture_5755_category")]
    public string? Com_samsung_android_app_smartcapture5755Category { get; init; }

    [JsonPropertyName("com.samsung.android.app.smartcapture_5755_channel_id")]
    public string? Com_samsung_android_app_smartcapture5755ChannelId { get; init; }

    [JsonPropertyName("com.samsung.android.app.smartcapture_5755_group_id")]
    public string? Com_samsung_android_app_smartcapture5755GroupId { get; init; }

    [JsonPropertyName("com.samsung.android.app.smartcapture_5755_is_clearable")]
    public bool? Com_samsung_android_app_smartcapture5755IsClearable { get; init; }

    [JsonPropertyName("com.samsung.android.app.smartcapture_5755_is_ongoing")]
    public bool? Com_samsung_android_app_smartcapture5755IsOngoing { get; init; }

    [JsonPropertyName("com.samsung.android.app.smartcapture_5755_post_time")]
    public double? Com_samsung_android_app_smartcapture5755PostTime { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1188546228_category")]
    public string? Com_supercell_clashofclans1188546228Category { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1188546228_channel_id")]
    public string? Com_supercell_clashofclans1188546228ChannelId { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1188546228_group_id")]
    public string? Com_supercell_clashofclans1188546228GroupId { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1188546228_is_clearable")]
    public bool? Com_supercell_clashofclans1188546228IsClearable { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1188546228_is_ongoing")]
    public bool? Com_supercell_clashofclans1188546228IsOngoing { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1188546228_post_time")]
    public double? Com_supercell_clashofclans1188546228PostTime { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_774330200_category")]
    public string? Com_supercell_clashofclans774330200Category { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_774330200_channel_id")]
    public string? Com_supercell_clashofclans774330200ChannelId { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_774330200_group_id")]
    public string? Com_supercell_clashofclans774330200GroupId { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_774330200_is_clearable")]
    public bool? Com_supercell_clashofclans774330200IsClearable { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_774330200_is_ongoing")]
    public bool? Com_supercell_clashofclans774330200IsOngoing { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_774330200_post_time")]
    public double? Com_supercell_clashofclans774330200PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1535233167_category")]
    public string? Com_zhiliaoapp_musically1535233167Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1535233167_channel_id")]
    public string? Com_zhiliaoapp_musically1535233167ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1535233167_group_id")]
    public string? Com_zhiliaoapp_musically1535233167GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1535233167_is_clearable")]
    public bool? Com_zhiliaoapp_musically1535233167IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1535233167_is_ongoing")]
    public bool? Com_zhiliaoapp_musically1535233167IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1535233167_post_time")]
    public double? Com_zhiliaoapp_musically1535233167PostTime { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_1535233167")]
    public string? ConversationIdCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_1535233167")]
    public string? PushLabelCom_zhiliaoapp_musically1535233167 { get; init; }

    [JsonPropertyName("android.appInfo_com.microsoft.office.outlook_1")]
    public string? Android_appInfoCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.appInfo_com.microsoft.office.outlook_2")]
    public string? Android_appInfoCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.bigText_com.microsoft.office.outlook_1")]
    public string? Android_bigTextCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.bigText_com.microsoft.office.outlook_2")]
    public string? Android_bigTextCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.infoText_com.microsoft.office.outlook_1")]
    public string? Android_infoTextCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.infoText_com.microsoft.office.outlook_2")]
    public string? Android_infoTextCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.largeIcon_com.microsoft.office.outlook_1")]
    public string? Android_largeIconCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.largeIcon_com.microsoft.office.outlook_2")]
    public string? Android_largeIconCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.microsoft.office.outlook_1")]
    public bool? Android_progressIndeterminateCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.microsoft.office.outlook_2")]
    public bool? Android_progressIndeterminateCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.progressMax_com.microsoft.office.outlook_1")]
    public double? Android_progressMaxCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.progressMax_com.microsoft.office.outlook_2")]
    public double? Android_progressMaxCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.progress_com.microsoft.office.outlook_1")]
    public double? Android_progressCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.progress_com.microsoft.office.outlook_2")]
    public double? Android_progressCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.reduced.images_com.microsoft.office.outlook_1")]
    public bool? Android_reduced_imagesCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.reduced.images_com.microsoft.office.outlook_2")]
    public bool? Android_reduced_imagesCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.microsoft.office.outlook_1")]
    public string? Android_remoteInputHistoryCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.microsoft.office.outlook_2")]
    public string? Android_remoteInputHistoryCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.showChronometer_com.microsoft.office.outlook_1")]
    public bool? Android_showChronometerCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.showChronometer_com.microsoft.office.outlook_2")]
    public bool? Android_showChronometerCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.showWhen_com.microsoft.office.outlook_1")]
    public bool? Android_showWhenCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.showWhen_com.microsoft.office.outlook_2")]
    public bool? Android_showWhenCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.subText_com.microsoft.office.outlook_1")]
    public string? Android_subTextCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.subText_com.microsoft.office.outlook_2")]
    public string? Android_subTextCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.template_com.microsoft.office.outlook_1")]
    public string? Android_templateCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.template_com.microsoft.office.outlook_2")]
    public string? Android_templateCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.text_com.microsoft.office.outlook_1")]
    public string? Android_textCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.text_com.microsoft.office.outlook_2")]
    public string? Android_textCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.title.big_com.microsoft.office.outlook_1")]
    public string? Android_title_bigCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.title.big_com.microsoft.office.outlook_2")]
    public string? Android_title_bigCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.title_com.microsoft.office.outlook_1")]
    public string? Android_titleCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.title_com.microsoft.office.outlook_2")]
    public string? Android_titleCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.microsoft.office.outlook_1")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.microsoft.office.outlook_2")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_1_category")]
    public string? Com_microsoft_office_outlook1Category { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_1_channel_id")]
    public string? Com_microsoft_office_outlook1ChannelId { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_1_group_id")]
    public string? Com_microsoft_office_outlook1GroupId { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_1_is_clearable")]
    public bool? Com_microsoft_office_outlook1IsClearable { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_1_is_ongoing")]
    public bool? Com_microsoft_office_outlook1IsOngoing { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_1_post_time")]
    public double? Com_microsoft_office_outlook1PostTime { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_2_category")]
    public string? Com_microsoft_office_outlook2Category { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_2_channel_id")]
    public string? Com_microsoft_office_outlook2ChannelId { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_2_group_id")]
    public string? Com_microsoft_office_outlook2GroupId { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_2_is_clearable")]
    public bool? Com_microsoft_office_outlook2IsClearable { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_2_is_ongoing")]
    public bool? Com_microsoft_office_outlook2IsOngoing { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_2_post_time")]
    public double? Com_microsoft_office_outlook2PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.samsung.android.app.routines_100")]
    public string? Android_appInfoCom_samsung_android_app_routines100 { get; init; }

    [JsonPropertyName("android.appInfo_com.samsung.android.app.routines_105")]
    public string? Android_appInfoCom_samsung_android_app_routines105 { get; init; }

    [JsonPropertyName("android.appInfo_com.spotify.music_2131430879")]
    public string? Android_appInfoCom_spotify_music2131430879 { get; init; }

    [JsonPropertyName("android.appInfo_com.spotify.music_2131430880")]
    public string? Android_appInfoCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.bigText_com.samsung.android.app.routines_105")]
    public string? Android_bigTextCom_samsung_android_app_routines105 { get; init; }

    [JsonPropertyName("android.colorized_com.samsung.android.app.routines_100")]
    public bool? Android_colorizedCom_samsung_android_app_routines100 { get; init; }

    [JsonPropertyName("android.colorized_com.samsung.android.app.routines_105")]
    public bool? Android_colorizedCom_samsung_android_app_routines105 { get; init; }

    [JsonPropertyName("android.compactActions_com.spotify.music_2131430880")]
    public IReadOnlyList<double>? Android_compactActionsCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.infoText_com.spotify.music_2131430879")]
    public string? Android_infoTextCom_spotify_music2131430879 { get; init; }

    [JsonPropertyName("android.infoText_com.spotify.music_2131430880")]
    public string? Android_infoTextCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.largeIcon_com.spotify.music_2131430879")]
    public string? Android_largeIconCom_spotify_music2131430879 { get; init; }

    [JsonPropertyName("android.largeIcon_com.spotify.music_2131430880")]
    public string? Android_largeIconCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.mediaSession_com.spotify.music_2131430880")]
    public string? Android_mediaSessionCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.spotify.music_2131430879")]
    public bool? Android_progressIndeterminateCom_spotify_music2131430879 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.spotify.music_2131430880")]
    public bool? Android_progressIndeterminateCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.progressMax_com.spotify.music_2131430879")]
    public double? Android_progressMaxCom_spotify_music2131430879 { get; init; }

    [JsonPropertyName("android.progressMax_com.spotify.music_2131430880")]
    public double? Android_progressMaxCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.progress_com.spotify.music_2131430879")]
    public double? Android_progressCom_spotify_music2131430879 { get; init; }

    [JsonPropertyName("android.progress_com.spotify.music_2131430880")]
    public double? Android_progressCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.reduced.images_com.samsung.android.app.routines_100")]
    public bool? Android_reduced_imagesCom_samsung_android_app_routines100 { get; init; }

    [JsonPropertyName("android.reduced.images_com.samsung.android.app.routines_105")]
    public bool? Android_reduced_imagesCom_samsung_android_app_routines105 { get; init; }

    [JsonPropertyName("android.reduced.images_com.spotify.music_2131430879")]
    public bool? Android_reduced_imagesCom_spotify_music2131430879 { get; init; }

    [JsonPropertyName("android.reduced.images_com.spotify.music_2131430880")]
    public bool? Android_reduced_imagesCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.spotify.music_2131430879")]
    public string? Android_remoteInputHistoryCom_spotify_music2131430879 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.spotify.music_2131430880")]
    public string? Android_remoteInputHistoryCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.showChronometer_com.spotify.music_2131430879")]
    public bool? Android_showChronometerCom_spotify_music2131430879 { get; init; }

    [JsonPropertyName("android.showChronometer_com.spotify.music_2131430880")]
    public bool? Android_showChronometerCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.showWhen_com.samsung.android.app.routines_100")]
    public bool? Android_showWhenCom_samsung_android_app_routines100 { get; init; }

    [JsonPropertyName("android.showWhen_com.samsung.android.app.routines_105")]
    public bool? Android_showWhenCom_samsung_android_app_routines105 { get; init; }

    [JsonPropertyName("android.showWhen_com.spotify.music_2131430879")]
    public bool? Android_showWhenCom_spotify_music2131430879 { get; init; }

    [JsonPropertyName("android.showWhen_com.spotify.music_2131430880")]
    public bool? Android_showWhenCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.subText_com.spotify.music_2131430879")]
    public string? Android_subTextCom_spotify_music2131430879 { get; init; }

    [JsonPropertyName("android.subText_com.spotify.music_2131430880")]
    public string? Android_subTextCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.summaryText_com.whatsapp_1")]
    public string? Android_summaryTextCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.template_com.samsung.android.app.routines_105")]
    public string? Android_templateCom_samsung_android_app_routines105 { get; init; }

    [JsonPropertyName("android.template_com.spotify.music_2131430880")]
    public string? Android_templateCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.textLines_com.whatsapp_1")]
    public IReadOnlyList<string>? Android_textLinesCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.text_com.samsung.android.app.routines_105")]
    public string? Android_textCom_samsung_android_app_routines105 { get; init; }

    [JsonPropertyName("android.text_com.spotify.music_2131430879")]
    public string? Android_textCom_spotify_music2131430879 { get; init; }

    [JsonPropertyName("android.text_com.spotify.music_2131430880")]
    public string? Android_textCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("android.title.big_com.samsung.android.app.routines_105")]
    public string? Android_title_bigCom_samsung_android_app_routines105 { get; init; }

    [JsonPropertyName("android.title_com.samsung.android.app.routines_100")]
    public string? Android_titleCom_samsung_android_app_routines100 { get; init; }

    [JsonPropertyName("android.title_com.samsung.android.app.routines_105")]
    public string? Android_titleCom_samsung_android_app_routines105 { get; init; }

    [JsonPropertyName("android.title_com.spotify.music_2131430879")]
    public string? Android_titleCom_spotify_music2131430879 { get; init; }

    [JsonPropertyName("android.title_com.spotify.music_2131430880")]
    public string? Android_titleCom_spotify_music2131430880 { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_100_category")]
    public string? Com_samsung_android_app_routines100Category { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_100_channel_id")]
    public string? Com_samsung_android_app_routines100ChannelId { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_100_group_id")]
    public string? Com_samsung_android_app_routines100GroupId { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_100_is_clearable")]
    public bool? Com_samsung_android_app_routines100IsClearable { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_100_is_ongoing")]
    public bool? Com_samsung_android_app_routines100IsOngoing { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_100_post_time")]
    public double? Com_samsung_android_app_routines100PostTime { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_105_category")]
    public string? Com_samsung_android_app_routines105Category { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_105_channel_id")]
    public string? Com_samsung_android_app_routines105ChannelId { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_105_group_id")]
    public string? Com_samsung_android_app_routines105GroupId { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_105_is_clearable")]
    public bool? Com_samsung_android_app_routines105IsClearable { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_105_is_ongoing")]
    public bool? Com_samsung_android_app_routines105IsOngoing { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_105_post_time")]
    public double? Com_samsung_android_app_routines105PostTime { get; init; }

    [JsonPropertyName("com.spotify.music_2131430879_category")]
    public string? Com_spotify_music2131430879Category { get; init; }

    [JsonPropertyName("com.spotify.music_2131430879_channel_id")]
    public string? Com_spotify_music2131430879ChannelId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430879_group_id")]
    public string? Com_spotify_music2131430879GroupId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430879_is_clearable")]
    public bool? Com_spotify_music2131430879IsClearable { get; init; }

    [JsonPropertyName("com.spotify.music_2131430879_is_ongoing")]
    public bool? Com_spotify_music2131430879IsOngoing { get; init; }

    [JsonPropertyName("com.spotify.music_2131430879_post_time")]
    public double? Com_spotify_music2131430879PostTime { get; init; }

    [JsonPropertyName("com.spotify.music_2131430880_category")]
    public string? Com_spotify_music2131430880Category { get; init; }

    [JsonPropertyName("com.spotify.music_2131430880_channel_id")]
    public string? Com_spotify_music2131430880ChannelId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430880_group_id")]
    public string? Com_spotify_music2131430880GroupId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430880_is_clearable")]
    public bool? Com_spotify_music2131430880IsClearable { get; init; }

    [JsonPropertyName("com.spotify.music_2131430880_is_ongoing")]
    public bool? Com_spotify_music2131430880IsOngoing { get; init; }

    [JsonPropertyName("com.spotify.music_2131430880_post_time")]
    public double? Com_spotify_music2131430880PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.spotify.music_2131430819")]
    public string? Android_appInfoCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.compactActions_com.spotify.music_2131430819")]
    public IReadOnlyList<double>? Android_compactActionsCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.infoText_com.spotify.music_2131430819")]
    public string? Android_infoTextCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.largeIcon_com.spotify.music_2131430819")]
    public string? Android_largeIconCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.mediaSession_com.spotify.music_2131430819")]
    public string? Android_mediaSessionCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.spotify.music_2131430819")]
    public bool? Android_progressIndeterminateCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.progressMax_com.spotify.music_2131430819")]
    public double? Android_progressMaxCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.progress_com.spotify.music_2131430819")]
    public double? Android_progressCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.reduced.images_com.spotify.music_2131430819")]
    public bool? Android_reduced_imagesCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.spotify.music_2131430819")]
    public string? Android_remoteInputHistoryCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.showChronometer_com.spotify.music_2131430819")]
    public bool? Android_showChronometerCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.showWhen_com.spotify.music_2131430819")]
    public bool? Android_showWhenCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.subText_com.spotify.music_2131430819")]
    public string? Android_subTextCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.template_com.spotify.music_2131430819")]
    public string? Android_templateCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.text_com.spotify.music_2131430819")]
    public string? Android_textCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("android.title_com.spotify.music_2131430819")]
    public string? Android_titleCom_spotify_music2131430819 { get; init; }

    [JsonPropertyName("com.spotify.music_2131430819_category")]
    public string? Com_spotify_music2131430819Category { get; init; }

    [JsonPropertyName("com.spotify.music_2131430819_channel_id")]
    public string? Com_spotify_music2131430819ChannelId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430819_group_id")]
    public string? Com_spotify_music2131430819GroupId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430819_is_clearable")]
    public bool? Com_spotify_music2131430819IsClearable { get; init; }

    [JsonPropertyName("com.spotify.music_2131430819_is_ongoing")]
    public bool? Com_spotify_music2131430819IsOngoing { get; init; }

    [JsonPropertyName("com.spotify.music_2131430819_post_time")]
    public double? Com_spotify_music2131430819PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.microsoft.bing_0")]
    public string? Android_appInfoCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.appInfo_com.tippingcanoe.peppernl_0")]
    public string? Android_appInfoCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_1366011029")]
    public string? Android_appInfoCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-1256313069")]
    public string? Android_appInfoIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-1256707642")]
    public string? Android_appInfoIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.appInfo_nl.flitsmeister_526")]
    public string? Android_appInfoNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.bigText_com.microsoft.bing_0")]
    public string? Android_bigTextCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.bigText_com.tippingcanoe.peppernl_0")]
    public string? Android_bigTextCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.bigText_io.homeassistant.companion.android_-1256313069")]
    public string? Android_bigTextIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.bigText_io.homeassistant.companion.android_-1256707642")]
    public string? Android_bigTextIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.bigText_nl.flitsmeister_526")]
    public string? Android_bigTextNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_1366011029")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.infoText_com.microsoft.bing_0")]
    public string? Android_infoTextCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.infoText_com.tippingcanoe.peppernl_0")]
    public string? Android_infoTextCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_1366011029")]
    public string? Android_infoTextCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-1256313069")]
    public string? Android_infoTextIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-1256707642")]
    public string? Android_infoTextIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.infoText_nl.flitsmeister_526")]
    public string? Android_infoTextNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.largeIcon_com.microsoft.bing_0")]
    public string? Android_largeIconCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.largeIcon_com.tippingcanoe.peppernl_0")]
    public string? Android_largeIconCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_1366011029")]
    public string? Android_largeIconCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-1256313069")]
    public string? Android_largeIconIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-1256707642")]
    public string? Android_largeIconIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.largeIcon_nl.flitsmeister_526")]
    public string? Android_largeIconNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.microsoft.bing_0")]
    public bool? Android_progressIndeterminateCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.tippingcanoe.peppernl_0")]
    public bool? Android_progressIndeterminateCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_1366011029")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-1256313069")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-1256707642")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_nl.flitsmeister_526")]
    public bool? Android_progressIndeterminateNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.progressMax_com.microsoft.bing_0")]
    public double? Android_progressMaxCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.progressMax_com.tippingcanoe.peppernl_0")]
    public double? Android_progressMaxCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_1366011029")]
    public double? Android_progressMaxCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-1256313069")]
    public double? Android_progressMaxIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-1256707642")]
    public double? Android_progressMaxIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.progressMax_nl.flitsmeister_526")]
    public double? Android_progressMaxNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.progress_com.microsoft.bing_0")]
    public double? Android_progressCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.progress_com.tippingcanoe.peppernl_0")]
    public double? Android_progressCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_1366011029")]
    public double? Android_progressCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-1256313069")]
    public double? Android_progressIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-1256707642")]
    public double? Android_progressIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.progress_nl.flitsmeister_526")]
    public double? Android_progressNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.reduced.images_com.microsoft.bing_0")]
    public bool? Android_reduced_imagesCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.reduced.images_com.tippingcanoe.peppernl_0")]
    public bool? Android_reduced_imagesCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_1366011029")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-1256313069")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-1256707642")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.reduced.images_nl.flitsmeister_526")]
    public bool? Android_reduced_imagesNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.microsoft.bing_0")]
    public string? Android_remoteInputHistoryCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.tippingcanoe.peppernl_0")]
    public string? Android_remoteInputHistoryCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_1366011029")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-1256313069")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-1256707642")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_nl.flitsmeister_526")]
    public string? Android_remoteInputHistoryNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.showChronometer_com.microsoft.bing_0")]
    public bool? Android_showChronometerCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.showChronometer_com.tippingcanoe.peppernl_0")]
    public bool? Android_showChronometerCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_1366011029")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-1256313069")]
    public bool? Android_showChronometerIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-1256707642")]
    public bool? Android_showChronometerIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.showChronometer_nl.flitsmeister_526")]
    public bool? Android_showChronometerNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.showWhen_com.microsoft.bing_0")]
    public bool? Android_showWhenCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.showWhen_com.tippingcanoe.peppernl_0")]
    public bool? Android_showWhenCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_1366011029")]
    public bool? Android_showWhenCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-1256313069")]
    public bool? Android_showWhenIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-1256707642")]
    public bool? Android_showWhenIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.showWhen_nl.flitsmeister_526")]
    public bool? Android_showWhenNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.subText_com.microsoft.bing_0")]
    public string? Android_subTextCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.subText_com.tippingcanoe.peppernl_0")]
    public string? Android_subTextCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_1366011029")]
    public string? Android_subTextCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-1256313069")]
    public string? Android_subTextIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-1256707642")]
    public string? Android_subTextIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.subText_nl.flitsmeister_526")]
    public string? Android_subTextNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.summaryText_com.tippingcanoe.peppernl_0")]
    public string? Android_summaryTextCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.template_com.microsoft.bing_0")]
    public string? Android_templateCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.template_com.tippingcanoe.peppernl_0")]
    public string? Android_templateCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_1366011029")]
    public string? Android_templateCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-1256313069")]
    public string? Android_templateIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-1256707642")]
    public string? Android_templateIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.template_nl.flitsmeister_526")]
    public string? Android_templateNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.textLines_com.tippingcanoe.peppernl_0")]
    public IReadOnlyList<string>? Android_textLinesCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.text_com.microsoft.bing_0")]
    public string? Android_textCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.text_com.tippingcanoe.peppernl_0")]
    public string? Android_textCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_1366011029")]
    public string? Android_textCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-1256313069")]
    public string? Android_textIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-1256707642")]
    public string? Android_textIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.text_nl.flitsmeister_526")]
    public string? Android_textNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.title.big_com.tippingcanoe.peppernl_0")]
    public string? Android_title_bigCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.title_com.microsoft.bing_0")]
    public string? Android_titleCom_microsoft_bing0 { get; init; }

    [JsonPropertyName("android.title_com.tippingcanoe.peppernl_0")]
    public string? Android_titleCom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_1366011029")]
    public string? Android_titleCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-1256313069")]
    public string? Android_titleIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-1256707642")]
    public string? Android_titleIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("android.title_nl.flitsmeister_526")]
    public string? Android_titleNl_flitsmeister526 { get; init; }

    [JsonPropertyName("android.wearable.EXTENSIONS_nl.flitsmeister_526")]
    public string? Android_wearable_EXTENSIONSNl_flitsmeister526 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.microsoft.bing_0")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_microsoft_bing0 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.tippingcanoe.peppernl_0")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_tippingcanoe_peppernl0 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_1366011029")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-1256313069")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android1256313069 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-1256707642")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android1256707642 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_nl.flitsmeister_526")]
    public string? Androidx_core_app_extra_COMPATTEMPLATENl_flitsmeister526 { get; init; }

    [JsonPropertyName("com.microsoft.bing_0_category")]
    public string? Com_microsoft_bing0Category { get; init; }

    [JsonPropertyName("com.microsoft.bing_0_channel_id")]
    public string? Com_microsoft_bing0ChannelId { get; init; }

    [JsonPropertyName("com.microsoft.bing_0_group_id")]
    public string? Com_microsoft_bing0GroupId { get; init; }

    [JsonPropertyName("com.microsoft.bing_0_is_clearable")]
    public bool? Com_microsoft_bing0IsClearable { get; init; }

    [JsonPropertyName("com.microsoft.bing_0_is_ongoing")]
    public bool? Com_microsoft_bing0IsOngoing { get; init; }

    [JsonPropertyName("com.microsoft.bing_0_post_time")]
    public double? Com_microsoft_bing0PostTime { get; init; }

    [JsonPropertyName("com.tippingcanoe.peppernl_0_category")]
    public string? Com_tippingcanoe_peppernl0Category { get; init; }

    [JsonPropertyName("com.tippingcanoe.peppernl_0_channel_id")]
    public string? Com_tippingcanoe_peppernl0ChannelId { get; init; }

    [JsonPropertyName("com.tippingcanoe.peppernl_0_group_id")]
    public string? Com_tippingcanoe_peppernl0GroupId { get; init; }

    [JsonPropertyName("com.tippingcanoe.peppernl_0_is_clearable")]
    public bool? Com_tippingcanoe_peppernl0IsClearable { get; init; }

    [JsonPropertyName("com.tippingcanoe.peppernl_0_is_ongoing")]
    public bool? Com_tippingcanoe_peppernl0IsOngoing { get; init; }

    [JsonPropertyName("com.tippingcanoe.peppernl_0_post_time")]
    public double? Com_tippingcanoe_peppernl0PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1366011029_category")]
    public string? Com_zhiliaoapp_musically1366011029Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1366011029_channel_id")]
    public string? Com_zhiliaoapp_musically1366011029ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1366011029_group_id")]
    public string? Com_zhiliaoapp_musically1366011029GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1366011029_is_clearable")]
    public bool? Com_zhiliaoapp_musically1366011029IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1366011029_is_ongoing")]
    public bool? Com_zhiliaoapp_musically1366011029IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1366011029_post_time")]
    public double? Com_zhiliaoapp_musically1366011029PostTime { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_1366011029")]
    public string? ConversationIdCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1256313069_category")]
    public string? Io_homeassistant_companion_android1256313069Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1256313069_channel_id")]
    public string? Io_homeassistant_companion_android1256313069ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1256313069_group_id")]
    public string? Io_homeassistant_companion_android1256313069GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1256313069_is_clearable")]
    public bool? Io_homeassistant_companion_android1256313069IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1256313069_is_ongoing")]
    public bool? Io_homeassistant_companion_android1256313069IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1256313069_post_time")]
    public double? Io_homeassistant_companion_android1256313069PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1256707642_category")]
    public string? Io_homeassistant_companion_android1256707642Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1256707642_channel_id")]
    public string? Io_homeassistant_companion_android1256707642ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1256707642_group_id")]
    public string? Io_homeassistant_companion_android1256707642GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1256707642_is_clearable")]
    public bool? Io_homeassistant_companion_android1256707642IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1256707642_is_ongoing")]
    public bool? Io_homeassistant_companion_android1256707642IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1256707642_post_time")]
    public double? Io_homeassistant_companion_android1256707642PostTime { get; init; }

    [JsonPropertyName("nl.flitsmeister_526_category")]
    public string? Nl_flitsmeister526Category { get; init; }

    [JsonPropertyName("nl.flitsmeister_526_channel_id")]
    public string? Nl_flitsmeister526ChannelId { get; init; }

    [JsonPropertyName("nl.flitsmeister_526_group_id")]
    public string? Nl_flitsmeister526GroupId { get; init; }

    [JsonPropertyName("nl.flitsmeister_526_is_clearable")]
    public bool? Nl_flitsmeister526IsClearable { get; init; }

    [JsonPropertyName("nl.flitsmeister_526_is_ongoing")]
    public bool? Nl_flitsmeister526IsOngoing { get; init; }

    [JsonPropertyName("nl.flitsmeister_526_post_time")]
    public double? Nl_flitsmeister526PostTime { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_1366011029")]
    public string? PushLabelCom_zhiliaoapp_musically1366011029 { get; init; }

    [JsonPropertyName("android.appInfo_com.spotify.music_2131430746")]
    public string? Android_appInfoCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-922554317")]
    public string? Android_appInfoIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("android.bigText_io.homeassistant.companion.android_-922554317")]
    public string? Android_bigTextIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("android.compactActions_com.spotify.music_2131430746")]
    public IReadOnlyList<double>? Android_compactActionsCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.infoText_com.spotify.music_2131430746")]
    public string? Android_infoTextCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-922554317")]
    public string? Android_infoTextIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("android.largeIcon_com.spotify.music_2131430746")]
    public string? Android_largeIconCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-922554317")]
    public string? Android_largeIconIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("android.mediaSession_com.spotify.music_2131430746")]
    public string? Android_mediaSessionCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.spotify.music_2131430746")]
    public bool? Android_progressIndeterminateCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-922554317")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("android.progressMax_com.spotify.music_2131430746")]
    public double? Android_progressMaxCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-922554317")]
    public double? Android_progressMaxIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("android.progress_com.spotify.music_2131430746")]
    public double? Android_progressCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-922554317")]
    public double? Android_progressIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("android.reduced.images_com.spotify.music_2131430746")]
    public bool? Android_reduced_imagesCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-922554317")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.spotify.music_2131430746")]
    public string? Android_remoteInputHistoryCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-922554317")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("android.showChronometer_com.spotify.music_2131430746")]
    public bool? Android_showChronometerCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-922554317")]
    public bool? Android_showChronometerIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("android.showWhen_com.spotify.music_2131430746")]
    public bool? Android_showWhenCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-922554317")]
    public bool? Android_showWhenIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("android.subText_com.spotify.music_2131430746")]
    public string? Android_subTextCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-922554317")]
    public string? Android_subTextIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("android.template_com.spotify.music_2131430746")]
    public string? Android_templateCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-922554317")]
    public string? Android_templateIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("android.text_com.spotify.music_2131430746")]
    public string? Android_textCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-922554317")]
    public string? Android_textIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("android.title_com.spotify.music_2131430746")]
    public string? Android_titleCom_spotify_music2131430746 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-922554317")]
    public string? Android_titleIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-922554317")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android922554317 { get; init; }

    [JsonPropertyName("com.spotify.music_2131430746_category")]
    public string? Com_spotify_music2131430746Category { get; init; }

    [JsonPropertyName("com.spotify.music_2131430746_channel_id")]
    public string? Com_spotify_music2131430746ChannelId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430746_group_id")]
    public string? Com_spotify_music2131430746GroupId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430746_is_clearable")]
    public bool? Com_spotify_music2131430746IsClearable { get; init; }

    [JsonPropertyName("com.spotify.music_2131430746_is_ongoing")]
    public bool? Com_spotify_music2131430746IsOngoing { get; init; }

    [JsonPropertyName("com.spotify.music_2131430746_post_time")]
    public double? Com_spotify_music2131430746PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-922554317_category")]
    public string? Io_homeassistant_companion_android922554317Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-922554317_channel_id")]
    public string? Io_homeassistant_companion_android922554317ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-922554317_group_id")]
    public string? Io_homeassistant_companion_android922554317GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-922554317_is_clearable")]
    public bool? Io_homeassistant_companion_android922554317IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-922554317_is_ongoing")]
    public bool? Io_homeassistant_companion_android922554317IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-922554317_post_time")]
    public double? Io_homeassistant_companion_android922554317PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.Slack_176316829")]
    public string? Android_appInfoCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.appInfo_com.Slack_269772644")]
    public string? Android_appInfoCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.appInfo_org.yoki.android.buienalarm_-1")]
    public string? Android_appInfoOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("android.bigText_org.yoki.android.buienalarm_-1")]
    public string? Android_bigTextOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("android.conversationUnreadMessageCount_com.Slack_176316829")]
    public double? Android_conversationUnreadMessageCountCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.conversationUnreadMessageCount_com.Slack_269772644")]
    public double? Android_conversationUnreadMessageCountCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.hiddenConversationTitle_com.Slack_176316829")]
    public string? Android_hiddenConversationTitleCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.hiddenConversationTitle_com.Slack_269772644")]
    public string? Android_hiddenConversationTitleCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.infoText_com.Slack_176316829")]
    public string? Android_infoTextCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.infoText_com.Slack_269772644")]
    public string? Android_infoTextCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.infoText_org.yoki.android.buienalarm_-1")]
    public string? Android_infoTextOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("android.isGroupConversation_com.Slack_176316829")]
    public bool? Android_isGroupConversationCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.isGroupConversation_com.Slack_269772644")]
    public bool? Android_isGroupConversationCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.largeIcon_com.Slack_176316829")]
    public string? Android_largeIconCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.largeIcon_com.Slack_269772644")]
    public string? Android_largeIconCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.largeIcon_org.yoki.android.buienalarm_-1")]
    public string? Android_largeIconOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("android.messages_com.Slack_176316829")]
    public IReadOnlyList<string>? Android_messagesCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.messages_com.Slack_269772644")]
    public IReadOnlyList<string>? Android_messagesCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.messagingStyleUser_com.Slack_176316829")]
    public string? Android_messagingStyleUserCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.messagingStyleUser_com.Slack_269772644")]
    public string? Android_messagingStyleUserCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.messagingUser_com.Slack_176316829")]
    public string? Android_messagingUserCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.messagingUser_com.Slack_269772644")]
    public string? Android_messagingUserCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.Slack_176316829")]
    public bool? Android_progressIndeterminateCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.Slack_269772644")]
    public bool? Android_progressIndeterminateCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_org.yoki.android.buienalarm_-1")]
    public bool? Android_progressIndeterminateOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("android.progressMax_com.Slack_176316829")]
    public double? Android_progressMaxCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.progressMax_com.Slack_269772644")]
    public double? Android_progressMaxCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.progressMax_org.yoki.android.buienalarm_-1")]
    public double? Android_progressMaxOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("android.progress_com.Slack_176316829")]
    public double? Android_progressCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.progress_com.Slack_269772644")]
    public double? Android_progressCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.progress_org.yoki.android.buienalarm_-1")]
    public double? Android_progressOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("android.reduced.images_com.Slack_176316829")]
    public bool? Android_reduced_imagesCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.reduced.images_com.Slack_269772644")]
    public bool? Android_reduced_imagesCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.reduced.images_org.yoki.android.buienalarm_-1")]
    public bool? Android_reduced_imagesOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.Slack_176316829")]
    public string? Android_remoteInputHistoryCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.Slack_269772644")]
    public string? Android_remoteInputHistoryCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_org.yoki.android.buienalarm_-1")]
    public string? Android_remoteInputHistoryOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("android.selfDisplayName_com.Slack_176316829")]
    public string? Android_selfDisplayNameCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.selfDisplayName_com.Slack_269772644")]
    public string? Android_selfDisplayNameCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.showChronometer_com.Slack_176316829")]
    public bool? Android_showChronometerCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.showChronometer_com.Slack_269772644")]
    public bool? Android_showChronometerCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.showChronometer_org.yoki.android.buienalarm_-1")]
    public bool? Android_showChronometerOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("android.showWhen_com.Slack_176316829")]
    public bool? Android_showWhenCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.showWhen_com.Slack_269772644")]
    public bool? Android_showWhenCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.showWhen_org.yoki.android.buienalarm_-1")]
    public bool? Android_showWhenOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("android.subText_com.Slack_176316829")]
    public string? Android_subTextCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.subText_com.Slack_269772644")]
    public string? Android_subTextCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.subText_org.yoki.android.buienalarm_-1")]
    public string? Android_subTextOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("android.template_com.Slack_176316829")]
    public string? Android_templateCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.template_com.Slack_269772644")]
    public string? Android_templateCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.template_org.yoki.android.buienalarm_-1")]
    public string? Android_templateOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("android.text_com.Slack_176316829")]
    public string? Android_textCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.text_com.Slack_269772644")]
    public string? Android_textCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.text_org.yoki.android.buienalarm_-1")]
    public string? Android_textOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("android.title_com.Slack_176316829")]
    public string? Android_titleCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.title_com.Slack_269772644")]
    public string? Android_titleCom_Slack269772644 { get; init; }

    [JsonPropertyName("android.title_org.yoki.android.buienalarm_-1")]
    public string? Android_titleOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.Slack_176316829")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_Slack176316829 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.Slack_269772644")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_Slack269772644 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_org.yoki.android.buienalarm_-1")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEOrg_yoki_android_buienalarm1 { get; init; }

    [JsonPropertyName("com.Slack_176316829_category")]
    public string? Com_Slack176316829Category { get; init; }

    [JsonPropertyName("com.Slack_176316829_channel_id")]
    public string? Com_Slack176316829ChannelId { get; init; }

    [JsonPropertyName("com.Slack_176316829_group_id")]
    public string? Com_Slack176316829GroupId { get; init; }

    [JsonPropertyName("com.Slack_176316829_is_clearable")]
    public bool? Com_Slack176316829IsClearable { get; init; }

    [JsonPropertyName("com.Slack_176316829_is_ongoing")]
    public bool? Com_Slack176316829IsOngoing { get; init; }

    [JsonPropertyName("com.Slack_176316829_post_time")]
    public double? Com_Slack176316829PostTime { get; init; }

    [JsonPropertyName("com.Slack_269772644_category")]
    public string? Com_Slack269772644Category { get; init; }

    [JsonPropertyName("com.Slack_269772644_channel_id")]
    public string? Com_Slack269772644ChannelId { get; init; }

    [JsonPropertyName("com.Slack_269772644_group_id")]
    public string? Com_Slack269772644GroupId { get; init; }

    [JsonPropertyName("com.Slack_269772644_is_clearable")]
    public bool? Com_Slack269772644IsClearable { get; init; }

    [JsonPropertyName("com.Slack_269772644_is_ongoing")]
    public bool? Com_Slack269772644IsOngoing { get; init; }

    [JsonPropertyName("com.Slack_269772644_post_time")]
    public double? Com_Slack269772644PostTime { get; init; }

    [JsonPropertyName("org.yoki.android.buienalarm_-1_category")]
    public string? Org_yoki_android_buienalarm1Category { get; init; }

    [JsonPropertyName("org.yoki.android.buienalarm_-1_channel_id")]
    public string? Org_yoki_android_buienalarm1ChannelId { get; init; }

    [JsonPropertyName("org.yoki.android.buienalarm_-1_group_id")]
    public string? Org_yoki_android_buienalarm1GroupId { get; init; }

    [JsonPropertyName("org.yoki.android.buienalarm_-1_is_clearable")]
    public bool? Org_yoki_android_buienalarm1IsClearable { get; init; }

    [JsonPropertyName("org.yoki.android.buienalarm_-1_is_ongoing")]
    public bool? Org_yoki_android_buienalarm1IsOngoing { get; init; }

    [JsonPropertyName("org.yoki.android.buienalarm_-1_post_time")]
    public double? Org_yoki_android_buienalarm1PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.twitter.android_1044")]
    public string? Android_appInfoCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.appInfo_org.telegram.messenger_-755048763")]
    public string? Android_appInfoOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.appInfo_org.telegram.messenger_1")]
    public string? Android_appInfoOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.bigText_com.twitter.android_1044")]
    public string? Android_bigTextCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.conversationTitle_org.telegram.messenger_-755048763")]
    public string? Android_conversationTitleOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.conversationUnreadMessageCount_org.telegram.messenger_-755048763")]
    public double? Android_conversationUnreadMessageCountOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.hiddenConversationTitle_org.telegram.messenger_-755048763")]
    public string? Android_hiddenConversationTitleOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.infoText_com.twitter.android_1044")]
    public string? Android_infoTextCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.infoText_org.telegram.messenger_-755048763")]
    public string? Android_infoTextOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.infoText_org.telegram.messenger_1")]
    public string? Android_infoTextOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.isGroupConversation_org.telegram.messenger_-755048763")]
    public bool? Android_isGroupConversationOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.largeIcon_com.twitter.android_1044")]
    public string? Android_largeIconCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.largeIcon_org.telegram.messenger_-755048763")]
    public string? Android_largeIconOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.largeIcon_org.telegram.messenger_1")]
    public string? Android_largeIconOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.messages_org.telegram.messenger_-755048763")]
    public IReadOnlyList<string>? Android_messagesOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.messagingStyleUser_org.telegram.messenger_-755048763")]
    public string? Android_messagingStyleUserOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.messagingUser_org.telegram.messenger_-755048763")]
    public string? Android_messagingUserOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.twitter.android_1044")]
    public bool? Android_progressIndeterminateCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_org.telegram.messenger_-755048763")]
    public bool? Android_progressIndeterminateOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_org.telegram.messenger_1")]
    public bool? Android_progressIndeterminateOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.progressMax_com.twitter.android_1044")]
    public double? Android_progressMaxCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.progressMax_org.telegram.messenger_-755048763")]
    public double? Android_progressMaxOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.progressMax_org.telegram.messenger_1")]
    public double? Android_progressMaxOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.progress_com.twitter.android_1044")]
    public double? Android_progressCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.progress_org.telegram.messenger_-755048763")]
    public double? Android_progressOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.progress_org.telegram.messenger_1")]
    public double? Android_progressOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.reduced.images_com.twitter.android_1044")]
    public bool? Android_reduced_imagesCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.reduced.images_org.telegram.messenger_-755048763")]
    public bool? Android_reduced_imagesOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.reduced.images_org.telegram.messenger_1")]
    public bool? Android_reduced_imagesOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.twitter.android_1044")]
    public string? Android_remoteInputHistoryCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_org.telegram.messenger_-755048763")]
    public string? Android_remoteInputHistoryOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_org.telegram.messenger_1")]
    public string? Android_remoteInputHistoryOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.selfDisplayName_org.telegram.messenger_-755048763")]
    public string? Android_selfDisplayNameOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.showChronometer_com.twitter.android_1044")]
    public bool? Android_showChronometerCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.showChronometer_org.telegram.messenger_-755048763")]
    public bool? Android_showChronometerOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.showChronometer_org.telegram.messenger_1")]
    public bool? Android_showChronometerOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.showWhen_com.twitter.android_1044")]
    public bool? Android_showWhenCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.showWhen_org.telegram.messenger_-755048763")]
    public bool? Android_showWhenOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.showWhen_org.telegram.messenger_1")]
    public bool? Android_showWhenOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.subText_com.twitter.android_1044")]
    public string? Android_subTextCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.subText_org.telegram.messenger_-755048763")]
    public string? Android_subTextOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.subText_org.telegram.messenger_1")]
    public string? Android_subTextOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.summaryText_org.telegram.messenger_1")]
    public string? Android_summaryTextOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.template_com.twitter.android_1044")]
    public string? Android_templateCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.template_org.telegram.messenger_-755048763")]
    public string? Android_templateOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.template_org.telegram.messenger_1")]
    public string? Android_templateOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.textLines_org.telegram.messenger_1")]
    public IReadOnlyList<string>? Android_textLinesOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.text_com.twitter.android_1044")]
    public string? Android_textCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.text_org.telegram.messenger_-755048763")]
    public string? Android_textOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.text_org.telegram.messenger_1")]
    public string? Android_textOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.title.big_org.telegram.messenger_1")]
    public string? Android_title_bigOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.title_com.twitter.android_1044")]
    public string? Android_titleCom_twitter_android1044 { get; init; }

    [JsonPropertyName("android.title_org.telegram.messenger_-755048763")]
    public string? Android_titleOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("android.title_org.telegram.messenger_1")]
    public string? Android_titleOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("android.wearable.EXTENSIONS_org.telegram.messenger_-755048763")]
    public string? Android_wearable_EXTENSIONSOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.twitter.android_1044")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_twitter_android1044 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_org.telegram.messenger_-755048763")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEOrg_telegram_messenger755048763 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_org.telegram.messenger_1")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEOrg_telegram_messenger1 { get; init; }

    [JsonPropertyName("com.twitter.android_1044_category")]
    public string? Com_twitter_android1044Category { get; init; }

    [JsonPropertyName("com.twitter.android_1044_channel_id")]
    public string? Com_twitter_android1044ChannelId { get; init; }

    [JsonPropertyName("com.twitter.android_1044_group_id")]
    public string? Com_twitter_android1044GroupId { get; init; }

    [JsonPropertyName("com.twitter.android_1044_is_clearable")]
    public bool? Com_twitter_android1044IsClearable { get; init; }

    [JsonPropertyName("com.twitter.android_1044_is_ongoing")]
    public bool? Com_twitter_android1044IsOngoing { get; init; }

    [JsonPropertyName("com.twitter.android_1044_post_time")]
    public double? Com_twitter_android1044PostTime { get; init; }

    [JsonPropertyName("org.telegram.messenger_-755048763_category")]
    public string? Org_telegram_messenger755048763Category { get; init; }

    [JsonPropertyName("org.telegram.messenger_-755048763_channel_id")]
    public string? Org_telegram_messenger755048763ChannelId { get; init; }

    [JsonPropertyName("org.telegram.messenger_-755048763_group_id")]
    public string? Org_telegram_messenger755048763GroupId { get; init; }

    [JsonPropertyName("org.telegram.messenger_-755048763_is_clearable")]
    public bool? Org_telegram_messenger755048763IsClearable { get; init; }

    [JsonPropertyName("org.telegram.messenger_-755048763_is_ongoing")]
    public bool? Org_telegram_messenger755048763IsOngoing { get; init; }

    [JsonPropertyName("org.telegram.messenger_-755048763_post_time")]
    public double? Org_telegram_messenger755048763PostTime { get; init; }

    [JsonPropertyName("org.telegram.messenger_1_category")]
    public string? Org_telegram_messenger1Category { get; init; }

    [JsonPropertyName("org.telegram.messenger_1_channel_id")]
    public string? Org_telegram_messenger1ChannelId { get; init; }

    [JsonPropertyName("org.telegram.messenger_1_group_id")]
    public string? Org_telegram_messenger1GroupId { get; init; }

    [JsonPropertyName("org.telegram.messenger_1_is_clearable")]
    public bool? Org_telegram_messenger1IsClearable { get; init; }

    [JsonPropertyName("org.telegram.messenger_1_is_ongoing")]
    public bool? Org_telegram_messenger1IsOngoing { get; init; }

    [JsonPropertyName("org.telegram.messenger_1_post_time")]
    public double? Org_telegram_messenger1PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.Slack_-758347903")]
    public string? Android_appInfoCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.appInfo_com.peaks_0")]
    public string? Android_appInfoCom_peaks0 { get; init; }

    [JsonPropertyName("android.appInfo_com.spotify.music_774488510")]
    public string? Android_appInfoCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("android.bigText_com.peaks_0")]
    public string? Android_bigTextCom_peaks0 { get; init; }

    [JsonPropertyName("android.bigText_com.spotify.music_774488510")]
    public string? Android_bigTextCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("android.conversationTitle_com.Slack_-758347903")]
    public string? Android_conversationTitleCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.conversationTitle_com.Slack_176316829")]
    public string? Android_conversationTitleCom_Slack176316829 { get; init; }

    [JsonPropertyName("android.conversationUnreadMessageCount_com.Slack_-758347903")]
    public double? Android_conversationUnreadMessageCountCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.hiddenConversationTitle_com.Slack_-758347903")]
    public string? Android_hiddenConversationTitleCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.infoText_com.Slack_-758347903")]
    public string? Android_infoTextCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.infoText_com.peaks_0")]
    public string? Android_infoTextCom_peaks0 { get; init; }

    [JsonPropertyName("android.infoText_com.spotify.music_774488510")]
    public string? Android_infoTextCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("android.isGroupConversation_com.Slack_-758347903")]
    public bool? Android_isGroupConversationCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.largeIcon_com.Slack_-758347903")]
    public string? Android_largeIconCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.largeIcon_com.peaks_0")]
    public string? Android_largeIconCom_peaks0 { get; init; }

    [JsonPropertyName("android.largeIcon_com.spotify.music_774488510")]
    public string? Android_largeIconCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("android.messages_com.Slack_-758347903")]
    public IReadOnlyList<string>? Android_messagesCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.messagingStyleUser_com.Slack_-758347903")]
    public string? Android_messagingStyleUserCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.messagingUser_com.Slack_-758347903")]
    public string? Android_messagingUserCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.Slack_-758347903")]
    public bool? Android_progressIndeterminateCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.peaks_0")]
    public bool? Android_progressIndeterminateCom_peaks0 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.spotify.music_774488510")]
    public bool? Android_progressIndeterminateCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("android.progressMax_com.Slack_-758347903")]
    public double? Android_progressMaxCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.progressMax_com.peaks_0")]
    public double? Android_progressMaxCom_peaks0 { get; init; }

    [JsonPropertyName("android.progressMax_com.spotify.music_774488510")]
    public double? Android_progressMaxCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("android.progress_com.Slack_-758347903")]
    public double? Android_progressCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.progress_com.peaks_0")]
    public double? Android_progressCom_peaks0 { get; init; }

    [JsonPropertyName("android.progress_com.spotify.music_774488510")]
    public double? Android_progressCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("android.reduced.images_com.Slack_-758347903")]
    public bool? Android_reduced_imagesCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.reduced.images_com.peaks_0")]
    public bool? Android_reduced_imagesCom_peaks0 { get; init; }

    [JsonPropertyName("android.reduced.images_com.spotify.music_774488510")]
    public bool? Android_reduced_imagesCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.Slack_-758347903")]
    public string? Android_remoteInputHistoryCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.peaks_0")]
    public string? Android_remoteInputHistoryCom_peaks0 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.spotify.music_774488510")]
    public string? Android_remoteInputHistoryCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("android.selfDisplayName_com.Slack_-758347903")]
    public string? Android_selfDisplayNameCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.showChronometer_com.Slack_-758347903")]
    public bool? Android_showChronometerCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.showChronometer_com.peaks_0")]
    public bool? Android_showChronometerCom_peaks0 { get; init; }

    [JsonPropertyName("android.showChronometer_com.spotify.music_774488510")]
    public bool? Android_showChronometerCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("android.showWhen_com.Slack_-758347903")]
    public bool? Android_showWhenCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.showWhen_com.peaks_0")]
    public bool? Android_showWhenCom_peaks0 { get; init; }

    [JsonPropertyName("android.showWhen_com.spotify.music_774488510")]
    public bool? Android_showWhenCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("android.subText_com.Slack_-758347903")]
    public string? Android_subTextCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.subText_com.peaks_0")]
    public string? Android_subTextCom_peaks0 { get; init; }

    [JsonPropertyName("android.subText_com.spotify.music_774488510")]
    public string? Android_subTextCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("android.template_com.Slack_-758347903")]
    public string? Android_templateCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.template_com.peaks_0")]
    public string? Android_templateCom_peaks0 { get; init; }

    [JsonPropertyName("android.template_com.spotify.music_774488510")]
    public string? Android_templateCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("android.text_com.Slack_-758347903")]
    public string? Android_textCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.text_com.peaks_0")]
    public string? Android_textCom_peaks0 { get; init; }

    [JsonPropertyName("android.text_com.spotify.music_774488510")]
    public string? Android_textCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("android.title_com.Slack_-758347903")]
    public string? Android_titleCom_Slack758347903 { get; init; }

    [JsonPropertyName("android.title_com.peaks_0")]
    public string? Android_titleCom_peaks0 { get; init; }

    [JsonPropertyName("android.title_com.spotify.music_774488510")]
    public string? Android_titleCom_spotify_music774488510 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.Slack_-758347903")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_Slack758347903 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.peaks_0")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_peaks0 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.spotify.music_774488510")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_spotify_music774488510 { get; init; }

    [JsonPropertyName("com.Slack_-758347903_category")]
    public string? Com_Slack758347903Category { get; init; }

    [JsonPropertyName("com.Slack_-758347903_channel_id")]
    public string? Com_Slack758347903ChannelId { get; init; }

    [JsonPropertyName("com.Slack_-758347903_group_id")]
    public string? Com_Slack758347903GroupId { get; init; }

    [JsonPropertyName("com.Slack_-758347903_is_clearable")]
    public bool? Com_Slack758347903IsClearable { get; init; }

    [JsonPropertyName("com.Slack_-758347903_is_ongoing")]
    public bool? Com_Slack758347903IsOngoing { get; init; }

    [JsonPropertyName("com.Slack_-758347903_post_time")]
    public double? Com_Slack758347903PostTime { get; init; }

    [JsonPropertyName("com.peaks_0_category")]
    public string? Com_peaks0Category { get; init; }

    [JsonPropertyName("com.peaks_0_channel_id")]
    public string? Com_peaks0ChannelId { get; init; }

    [JsonPropertyName("com.peaks_0_group_id")]
    public string? Com_peaks0GroupId { get; init; }

    [JsonPropertyName("com.peaks_0_is_clearable")]
    public bool? Com_peaks0IsClearable { get; init; }

    [JsonPropertyName("com.peaks_0_is_ongoing")]
    public bool? Com_peaks0IsOngoing { get; init; }

    [JsonPropertyName("com.peaks_0_post_time")]
    public double? Com_peaks0PostTime { get; init; }

    [JsonPropertyName("com.spotify.music_774488510_category")]
    public string? Com_spotify_music774488510Category { get; init; }

    [JsonPropertyName("com.spotify.music_774488510_channel_id")]
    public string? Com_spotify_music774488510ChannelId { get; init; }

    [JsonPropertyName("com.spotify.music_774488510_group_id")]
    public string? Com_spotify_music774488510GroupId { get; init; }

    [JsonPropertyName("com.spotify.music_774488510_is_clearable")]
    public bool? Com_spotify_music774488510IsClearable { get; init; }

    [JsonPropertyName("com.spotify.music_774488510_is_ongoing")]
    public bool? Com_spotify_music774488510IsOngoing { get; init; }

    [JsonPropertyName("com.spotify.music_774488510_post_time")]
    public double? Com_spotify_music774488510PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.irobot.home_1577543918")]
    public string? Android_appInfoCom_irobot_home1577543918 { get; init; }

    [JsonPropertyName("android.appInfo_com.spotify.music_2131430757")]
    public string? Android_appInfoCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.compactActions_com.spotify.music_2131430757")]
    public IReadOnlyList<double>? Android_compactActionsCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.infoText_com.irobot.home_1577543918")]
    public string? Android_infoTextCom_irobot_home1577543918 { get; init; }

    [JsonPropertyName("android.infoText_com.spotify.music_2131430757")]
    public string? Android_infoTextCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.largeIcon_com.irobot.home_1577543918")]
    public string? Android_largeIconCom_irobot_home1577543918 { get; init; }

    [JsonPropertyName("android.largeIcon_com.spotify.music_2131430757")]
    public string? Android_largeIconCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.mediaSession_com.spotify.music_2131430757")]
    public string? Android_mediaSessionCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.irobot.home_1577543918")]
    public bool? Android_progressIndeterminateCom_irobot_home1577543918 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.spotify.music_2131430757")]
    public bool? Android_progressIndeterminateCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.progressMax_com.irobot.home_1577543918")]
    public double? Android_progressMaxCom_irobot_home1577543918 { get; init; }

    [JsonPropertyName("android.progressMax_com.spotify.music_2131430757")]
    public double? Android_progressMaxCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.progress_com.irobot.home_1577543918")]
    public double? Android_progressCom_irobot_home1577543918 { get; init; }

    [JsonPropertyName("android.progress_com.spotify.music_2131430757")]
    public double? Android_progressCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.reduced.images_com.irobot.home_1577543918")]
    public bool? Android_reduced_imagesCom_irobot_home1577543918 { get; init; }

    [JsonPropertyName("android.reduced.images_com.spotify.music_2131430757")]
    public bool? Android_reduced_imagesCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.irobot.home_1577543918")]
    public string? Android_remoteInputHistoryCom_irobot_home1577543918 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.spotify.music_2131430757")]
    public string? Android_remoteInputHistoryCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.showChronometer_com.irobot.home_1577543918")]
    public bool? Android_showChronometerCom_irobot_home1577543918 { get; init; }

    [JsonPropertyName("android.showChronometer_com.spotify.music_2131430757")]
    public bool? Android_showChronometerCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.showWhen_com.irobot.home_1577543918")]
    public bool? Android_showWhenCom_irobot_home1577543918 { get; init; }

    [JsonPropertyName("android.showWhen_com.spotify.music_2131430757")]
    public bool? Android_showWhenCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.subText_com.irobot.home_1577543918")]
    public string? Android_subTextCom_irobot_home1577543918 { get; init; }

    [JsonPropertyName("android.subText_com.spotify.music_2131430757")]
    public string? Android_subTextCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.template_com.spotify.music_2131430757")]
    public string? Android_templateCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.text_com.irobot.home_1577543918")]
    public string? Android_textCom_irobot_home1577543918 { get; init; }

    [JsonPropertyName("android.text_com.spotify.music_2131430757")]
    public string? Android_textCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("android.title_com.irobot.home_1577543918")]
    public string? Android_titleCom_irobot_home1577543918 { get; init; }

    [JsonPropertyName("android.title_com.spotify.music_2131430757")]
    public string? Android_titleCom_spotify_music2131430757 { get; init; }

    [JsonPropertyName("com.irobot.home_1577543918_category")]
    public string? Com_irobot_home1577543918Category { get; init; }

    [JsonPropertyName("com.irobot.home_1577543918_channel_id")]
    public string? Com_irobot_home1577543918ChannelId { get; init; }

    [JsonPropertyName("com.irobot.home_1577543918_group_id")]
    public string? Com_irobot_home1577543918GroupId { get; init; }

    [JsonPropertyName("com.irobot.home_1577543918_is_clearable")]
    public bool? Com_irobot_home1577543918IsClearable { get; init; }

    [JsonPropertyName("com.irobot.home_1577543918_is_ongoing")]
    public bool? Com_irobot_home1577543918IsOngoing { get; init; }

    [JsonPropertyName("com.irobot.home_1577543918_post_time")]
    public double? Com_irobot_home1577543918PostTime { get; init; }

    [JsonPropertyName("com.spotify.music_2131430757_category")]
    public string? Com_spotify_music2131430757Category { get; init; }

    [JsonPropertyName("com.spotify.music_2131430757_channel_id")]
    public string? Com_spotify_music2131430757ChannelId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430757_group_id")]
    public string? Com_spotify_music2131430757GroupId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430757_is_clearable")]
    public bool? Com_spotify_music2131430757IsClearable { get; init; }

    [JsonPropertyName("com.spotify.music_2131430757_is_ongoing")]
    public bool? Com_spotify_music2131430757IsOngoing { get; init; }

    [JsonPropertyName("com.spotify.music_2131430757_post_time")]
    public double? Com_spotify_music2131430757PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.microsoft.appmanager_101")]
    public string? Android_appInfoCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.appInfo_com.nextdoor_1377217503")]
    public string? Android_appInfoCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.bigText_com.microsoft.appmanager_101")]
    public string? Android_bigTextCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.bigText_com.nextdoor_1377217503")]
    public string? Android_bigTextCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.infoText_com.microsoft.appmanager_101")]
    public string? Android_infoTextCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.infoText_com.nextdoor_1377217503")]
    public string? Android_infoTextCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.largeIcon_com.microsoft.appmanager_101")]
    public string? Android_largeIconCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.largeIcon_com.nextdoor_1377217503")]
    public string? Android_largeIconCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.microsoft.appmanager_101")]
    public bool? Android_progressIndeterminateCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.nextdoor_1377217503")]
    public bool? Android_progressIndeterminateCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.progressMax_com.microsoft.appmanager_101")]
    public double? Android_progressMaxCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.progressMax_com.nextdoor_1377217503")]
    public double? Android_progressMaxCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.progress_com.microsoft.appmanager_101")]
    public double? Android_progressCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.progress_com.nextdoor_1377217503")]
    public double? Android_progressCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.reduced.images_com.microsoft.appmanager_101")]
    public bool? Android_reduced_imagesCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.reduced.images_com.nextdoor_1377217503")]
    public bool? Android_reduced_imagesCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.microsoft.appmanager_101")]
    public string? Android_remoteInputHistoryCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.nextdoor_1377217503")]
    public string? Android_remoteInputHistoryCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.showChronometer_com.microsoft.appmanager_101")]
    public bool? Android_showChronometerCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.showChronometer_com.nextdoor_1377217503")]
    public bool? Android_showChronometerCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.showWhen_com.microsoft.appmanager_101")]
    public bool? Android_showWhenCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.showWhen_com.nextdoor_1377217503")]
    public bool? Android_showWhenCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.subText_com.microsoft.appmanager_101")]
    public string? Android_subTextCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.subText_com.nextdoor_1377217503")]
    public string? Android_subTextCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.summaryText_com.nextdoor_1377217503")]
    public string? Android_summaryTextCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.template_com.microsoft.appmanager_101")]
    public string? Android_templateCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.template_com.nextdoor_1377217503")]
    public string? Android_templateCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.text_com.microsoft.appmanager_101")]
    public string? Android_textCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.text_com.nextdoor_1377217503")]
    public string? Android_textCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("android.title_com.microsoft.appmanager_101")]
    public string? Android_titleCom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("android.title_com.nextdoor_1377217503")]
    public string? Android_titleCom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.microsoft.appmanager_101")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_microsoft_appmanager101 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.nextdoor_1377217503")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_nextdoor1377217503 { get; init; }

    [JsonPropertyName("com.microsoft.appmanager_101_category")]
    public string? Com_microsoft_appmanager101Category { get; init; }

    [JsonPropertyName("com.microsoft.appmanager_101_channel_id")]
    public string? Com_microsoft_appmanager101ChannelId { get; init; }

    [JsonPropertyName("com.microsoft.appmanager_101_group_id")]
    public string? Com_microsoft_appmanager101GroupId { get; init; }

    [JsonPropertyName("com.microsoft.appmanager_101_is_clearable")]
    public bool? Com_microsoft_appmanager101IsClearable { get; init; }

    [JsonPropertyName("com.microsoft.appmanager_101_is_ongoing")]
    public bool? Com_microsoft_appmanager101IsOngoing { get; init; }

    [JsonPropertyName("com.microsoft.appmanager_101_post_time")]
    public double? Com_microsoft_appmanager101PostTime { get; init; }

    [JsonPropertyName("com.nextdoor_1377217503_category")]
    public string? Com_nextdoor1377217503Category { get; init; }

    [JsonPropertyName("com.nextdoor_1377217503_channel_id")]
    public string? Com_nextdoor1377217503ChannelId { get; init; }

    [JsonPropertyName("com.nextdoor_1377217503_group_id")]
    public string? Com_nextdoor1377217503GroupId { get; init; }

    [JsonPropertyName("com.nextdoor_1377217503_is_clearable")]
    public bool? Com_nextdoor1377217503IsClearable { get; init; }

    [JsonPropertyName("com.nextdoor_1377217503_is_ongoing")]
    public bool? Com_nextdoor1377217503IsOngoing { get; init; }

    [JsonPropertyName("com.nextdoor_1377217503_post_time")]
    public double? Com_nextdoor1377217503PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.tinder_1")]
    public string? Android_appInfoCom_tinder1 { get; init; }

    [JsonPropertyName("android.bigText_com.tinder_1")]
    public string? Android_bigTextCom_tinder1 { get; init; }

    [JsonPropertyName("android.infoText_com.tinder_1")]
    public string? Android_infoTextCom_tinder1 { get; init; }

    [JsonPropertyName("android.largeIcon_com.tinder_1")]
    public string? Android_largeIconCom_tinder1 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.tinder_1")]
    public bool? Android_progressIndeterminateCom_tinder1 { get; init; }

    [JsonPropertyName("android.progressMax_com.tinder_1")]
    public double? Android_progressMaxCom_tinder1 { get; init; }

    [JsonPropertyName("android.progress_com.tinder_1")]
    public double? Android_progressCom_tinder1 { get; init; }

    [JsonPropertyName("android.reduced.images_com.tinder_1")]
    public bool? Android_reduced_imagesCom_tinder1 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.tinder_1")]
    public string? Android_remoteInputHistoryCom_tinder1 { get; init; }

    [JsonPropertyName("android.showChronometer_com.tinder_1")]
    public bool? Android_showChronometerCom_tinder1 { get; init; }

    [JsonPropertyName("android.showWhen_com.tinder_1")]
    public bool? Android_showWhenCom_tinder1 { get; init; }

    [JsonPropertyName("android.subText_com.tinder_1")]
    public string? Android_subTextCom_tinder1 { get; init; }

    [JsonPropertyName("android.template_com.tinder_1")]
    public string? Android_templateCom_tinder1 { get; init; }

    [JsonPropertyName("android.text_com.tinder_1")]
    public string? Android_textCom_tinder1 { get; init; }

    [JsonPropertyName("android.title_com.tinder_1")]
    public string? Android_titleCom_tinder1 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.tinder_1")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_tinder1 { get; init; }

    [JsonPropertyName("com.tinder_1_category")]
    public string? Com_tinder1Category { get; init; }

    [JsonPropertyName("com.tinder_1_channel_id")]
    public string? Com_tinder1ChannelId { get; init; }

    [JsonPropertyName("com.tinder_1_group_id")]
    public string? Com_tinder1GroupId { get; init; }

    [JsonPropertyName("com.tinder_1_is_clearable")]
    public bool? Com_tinder1IsClearable { get; init; }

    [JsonPropertyName("com.tinder_1_is_ongoing")]
    public bool? Com_tinder1IsOngoing { get; init; }

    [JsonPropertyName("com.tinder_1_post_time")]
    public double? Com_tinder1PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.scee.psxandroid_-544997279")]
    public string? Android_appInfoCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.appInfo_com.scee.psxandroid_1051396903")]
    public string? Android_appInfoCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.appInfo_de.axelspringer.yana.zeropage_2")]
    public string? Android_appInfoDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("android.bigText_com.scee.psxandroid_-544997279")]
    public string? Android_bigTextCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.bigText_com.scee.psxandroid_1051396903")]
    public string? Android_bigTextCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.chronometerCountDown_com.scee.psxandroid_-544997279")]
    public bool? Android_chronometerCountDownCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.chronometerCountDown_com.scee.psxandroid_1051396903")]
    public bool? Android_chronometerCountDownCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.colorized_com.scee.psxandroid_-544997279")]
    public bool? Android_colorizedCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.colorized_com.scee.psxandroid_1051396903")]
    public bool? Android_colorizedCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.contains.customView_de.axelspringer.yana.zeropage_2")]
    public bool? Android_contains_customViewDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("android.infoText_com.scee.psxandroid_-544997279")]
    public string? Android_infoTextCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.infoText_com.scee.psxandroid_1051396903")]
    public string? Android_infoTextCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.infoText_de.axelspringer.yana.zeropage_2")]
    public string? Android_infoTextDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("android.largeIcon_com.scee.psxandroid_-544997279")]
    public string? Android_largeIconCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.largeIcon_com.scee.psxandroid_1051396903")]
    public string? Android_largeIconCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.largeIcon_de.axelspringer.yana.zeropage_2")]
    public string? Android_largeIconDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.scee.psxandroid_-544997279")]
    public bool? Android_progressIndeterminateCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.scee.psxandroid_1051396903")]
    public bool? Android_progressIndeterminateCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_de.axelspringer.yana.zeropage_2")]
    public bool? Android_progressIndeterminateDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("android.progressMax_com.scee.psxandroid_-544997279")]
    public double? Android_progressMaxCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.progressMax_com.scee.psxandroid_1051396903")]
    public double? Android_progressMaxCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.progressMax_de.axelspringer.yana.zeropage_2")]
    public double? Android_progressMaxDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("android.progress_com.scee.psxandroid_-544997279")]
    public double? Android_progressCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.progress_com.scee.psxandroid_1051396903")]
    public double? Android_progressCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.progress_de.axelspringer.yana.zeropage_2")]
    public double? Android_progressDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("android.reduced.images_com.scee.psxandroid_-544997279")]
    public bool? Android_reduced_imagesCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.reduced.images_com.scee.psxandroid_1051396903")]
    public bool? Android_reduced_imagesCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.reduced.images_de.axelspringer.yana.zeropage_2")]
    public bool? Android_reduced_imagesDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.scee.psxandroid_-544997279")]
    public string? Android_remoteInputHistoryCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.scee.psxandroid_1051396903")]
    public string? Android_remoteInputHistoryCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_de.axelspringer.yana.zeropage_2")]
    public string? Android_remoteInputHistoryDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("android.showChronometer_com.scee.psxandroid_-544997279")]
    public bool? Android_showChronometerCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.showChronometer_com.scee.psxandroid_1051396903")]
    public bool? Android_showChronometerCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.showChronometer_de.axelspringer.yana.zeropage_2")]
    public bool? Android_showChronometerDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("android.showWhen_com.scee.psxandroid_-544997279")]
    public bool? Android_showWhenCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.showWhen_com.scee.psxandroid_1051396903")]
    public bool? Android_showWhenCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.showWhen_de.axelspringer.yana.zeropage_2")]
    public bool? Android_showWhenDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("android.subText_com.scee.psxandroid_-544997279")]
    public string? Android_subTextCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.subText_com.scee.psxandroid_1051396903")]
    public string? Android_subTextCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.subText_de.axelspringer.yana.zeropage_2")]
    public string? Android_subTextDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("android.summaryText_com.scee.psxandroid_-544997279")]
    public string? Android_summaryTextCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.summaryText_com.scee.psxandroid_1051396903")]
    public string? Android_summaryTextCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.template_com.scee.psxandroid_-544997279")]
    public string? Android_templateCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.template_com.scee.psxandroid_1051396903")]
    public string? Android_templateCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.template_de.axelspringer.yana.zeropage_2")]
    public string? Android_templateDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("android.text_com.scee.psxandroid_-544997279")]
    public string? Android_textCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.text_com.scee.psxandroid_1051396903")]
    public string? Android_textCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.text_de.axelspringer.yana.zeropage_2")]
    public string? Android_textDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("android.title.big_com.scee.psxandroid_-544997279")]
    public string? Android_title_bigCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.title.big_com.scee.psxandroid_1051396903")]
    public string? Android_title_bigCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.title_com.scee.psxandroid_-544997279")]
    public string? Android_titleCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("android.title_com.scee.psxandroid_1051396903")]
    public string? Android_titleCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.title_de.axelspringer.yana.zeropage_2")]
    public string? Android_titleDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.scee.psxandroid_-544997279")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.scee.psxandroid_1051396903")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_de.axelspringer.yana.zeropage_2")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("com.scee.psxandroid_-544997279_category")]
    public string? Com_scee_psxandroid544997279Category { get; init; }

    [JsonPropertyName("com.scee.psxandroid_-544997279_channel_id")]
    public string? Com_scee_psxandroid544997279ChannelId { get; init; }

    [JsonPropertyName("com.scee.psxandroid_-544997279_group_id")]
    public string? Com_scee_psxandroid544997279GroupId { get; init; }

    [JsonPropertyName("com.scee.psxandroid_-544997279_is_clearable")]
    public bool? Com_scee_psxandroid544997279IsClearable { get; init; }

    [JsonPropertyName("com.scee.psxandroid_-544997279_is_ongoing")]
    public bool? Com_scee_psxandroid544997279IsOngoing { get; init; }

    [JsonPropertyName("com.scee.psxandroid_-544997279_post_time")]
    public double? Com_scee_psxandroid544997279PostTime { get; init; }

    [JsonPropertyName("com.scee.psxandroid_1051396903_category")]
    public string? Com_scee_psxandroid1051396903Category { get; init; }

    [JsonPropertyName("com.scee.psxandroid_1051396903_channel_id")]
    public string? Com_scee_psxandroid1051396903ChannelId { get; init; }

    [JsonPropertyName("com.scee.psxandroid_1051396903_group_id")]
    public string? Com_scee_psxandroid1051396903GroupId { get; init; }

    [JsonPropertyName("com.scee.psxandroid_1051396903_is_clearable")]
    public bool? Com_scee_psxandroid1051396903IsClearable { get; init; }

    [JsonPropertyName("com.scee.psxandroid_1051396903_is_ongoing")]
    public bool? Com_scee_psxandroid1051396903IsOngoing { get; init; }

    [JsonPropertyName("com.scee.psxandroid_1051396903_post_time")]
    public double? Com_scee_psxandroid1051396903PostTime { get; init; }

    [JsonPropertyName("de.axelspringer.yana.zeropage_2_category")]
    public string? De_axelspringer_yana_zeropage2Category { get; init; }

    [JsonPropertyName("de.axelspringer.yana.zeropage_2_channel_id")]
    public string? De_axelspringer_yana_zeropage2ChannelId { get; init; }

    [JsonPropertyName("de.axelspringer.yana.zeropage_2_group_id")]
    public string? De_axelspringer_yana_zeropage2GroupId { get; init; }

    [JsonPropertyName("de.axelspringer.yana.zeropage_2_is_clearable")]
    public bool? De_axelspringer_yana_zeropage2IsClearable { get; init; }

    [JsonPropertyName("de.axelspringer.yana.zeropage_2_is_ongoing")]
    public bool? De_axelspringer_yana_zeropage2IsOngoing { get; init; }

    [JsonPropertyName("de.axelspringer.yana.zeropage_2_post_time")]
    public double? De_axelspringer_yana_zeropage2PostTime { get; init; }

    [JsonPropertyName("isRemoteNotification_com.scee.psxandroid_-544997279")]
    public string? IsRemoteNotificationCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("isRemoteNotification_com.scee.psxandroid_1051396903")]
    public string? IsRemoteNotificationCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("is_rich_push_de.axelspringer.yana.zeropage_2")]
    public bool? IsRichPushDe_axelspringer_yana_zeropage2 { get; init; }

    [JsonPropertyName("notifee.notification_com.scee.psxandroid_-544997279")]
    public string? Notifee_notificationCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("notifee.notification_com.scee.psxandroid_1051396903")]
    public string? Notifee_notificationCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("payload_com.scee.psxandroid_-544997279")]
    public string? PayloadCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("payload_com.scee.psxandroid_1051396903")]
    public string? PayloadCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("payloads_com.scee.psxandroid_-544997279")]
    public string? PayloadsCom_scee_psxandroid544997279 { get; init; }

    [JsonPropertyName("payloads_com.scee.psxandroid_1051396903")]
    public string? PayloadsCom_scee_psxandroid1051396903 { get; init; }

    [JsonPropertyName("android.appInfo_com.samsung.android.oneconnect_-464480261")]
    public string? Android_appInfoCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.appInfo_com.samsung.android.oneconnect_-464480499")]
    public string? Android_appInfoCom_samsung_android_oneconnect464480499 { get; init; }

    [JsonPropertyName("android.bigText_com.samsung.android.oneconnect_-464480261")]
    public string? Android_bigTextCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.infoText_com.samsung.android.oneconnect_-464480261")]
    public string? Android_infoTextCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.largeIcon_com.samsung.android.oneconnect_-464480261")]
    public string? Android_largeIconCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.samsung.android.oneconnect_-464480261")]
    public bool? Android_progressIndeterminateCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.progressMax_com.samsung.android.oneconnect_-464480261")]
    public double? Android_progressMaxCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.progress_com.samsung.android.oneconnect_-464480261")]
    public double? Android_progressCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.reduced.images_com.samsung.android.oneconnect_-464480261")]
    public bool? Android_reduced_imagesCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.reduced.images_com.samsung.android.oneconnect_-464480499")]
    public bool? Android_reduced_imagesCom_samsung_android_oneconnect464480499 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.samsung.android.oneconnect_-464480261")]
    public string? Android_remoteInputHistoryCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.showChronometer_com.samsung.android.oneconnect_-464480261")]
    public bool? Android_showChronometerCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.showWhen_com.samsung.android.oneconnect_-464480261")]
    public bool? Android_showWhenCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.subText_com.samsung.android.oneconnect_-464480261")]
    public string? Android_subTextCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.template_com.samsung.android.oneconnect_-464480261")]
    public string? Android_templateCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.text_com.samsung.android.oneconnect_-464480261")]
    public string? Android_textCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.title_com.samsung.android.oneconnect_-464480261")]
    public string? Android_titleCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.samsung.android.oneconnect_-464480261")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_-464480261_category")]
    public string? Com_samsung_android_oneconnect464480261Category { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_-464480261_channel_id")]
    public string? Com_samsung_android_oneconnect464480261ChannelId { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_-464480261_group_id")]
    public string? Com_samsung_android_oneconnect464480261GroupId { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_-464480261_is_clearable")]
    public bool? Com_samsung_android_oneconnect464480261IsClearable { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_-464480261_is_ongoing")]
    public bool? Com_samsung_android_oneconnect464480261IsOngoing { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_-464480261_post_time")]
    public double? Com_samsung_android_oneconnect464480261PostTime { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_-464480499_category")]
    public string? Com_samsung_android_oneconnect464480499Category { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_-464480499_channel_id")]
    public string? Com_samsung_android_oneconnect464480499ChannelId { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_-464480499_group_id")]
    public string? Com_samsung_android_oneconnect464480499GroupId { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_-464480499_is_clearable")]
    public bool? Com_samsung_android_oneconnect464480499IsClearable { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_-464480499_is_ongoing")]
    public bool? Com_samsung_android_oneconnect464480499IsOngoing { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_-464480499_post_time")]
    public double? Com_samsung_android_oneconnect464480499PostTime { get; init; }

    [JsonPropertyName("push_message_com.samsung.android.oneconnect_-464480261")]
    public IReadOnlyList<double>? PushMessageCom_samsung_android_oneconnect464480261 { get; init; }

    [JsonPropertyName("android.appInfo_com.discord_0")]
    public string? Android_appInfoCom_discord0 { get; init; }

    [JsonPropertyName("android.conversationTitle_com.discord_0")]
    public string? Android_conversationTitleCom_discord0 { get; init; }

    [JsonPropertyName("android.conversationUnreadMessageCount_com.discord_0")]
    public double? Android_conversationUnreadMessageCountCom_discord0 { get; init; }

    [JsonPropertyName("android.hiddenConversationTitle_com.discord_0")]
    public string? Android_hiddenConversationTitleCom_discord0 { get; init; }

    [JsonPropertyName("android.infoText_com.discord_0")]
    public string? Android_infoTextCom_discord0 { get; init; }

    [JsonPropertyName("android.isGroupConversation_com.discord_0")]
    public bool? Android_isGroupConversationCom_discord0 { get; init; }

    [JsonPropertyName("android.largeIcon_com.discord_0")]
    public string? Android_largeIconCom_discord0 { get; init; }

    [JsonPropertyName("android.messages_com.discord_0")]
    public IReadOnlyList<string>? Android_messagesCom_discord0 { get; init; }

    [JsonPropertyName("android.messagingStyleUser_com.discord_0")]
    public string? Android_messagingStyleUserCom_discord0 { get; init; }

    [JsonPropertyName("android.messagingUser_com.discord_0")]
    public string? Android_messagingUserCom_discord0 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.discord_0")]
    public bool? Android_progressIndeterminateCom_discord0 { get; init; }

    [JsonPropertyName("android.progressMax_com.discord_0")]
    public double? Android_progressMaxCom_discord0 { get; init; }

    [JsonPropertyName("android.progress_com.discord_0")]
    public double? Android_progressCom_discord0 { get; init; }

    [JsonPropertyName("android.reduced.images_com.discord_0")]
    public bool? Android_reduced_imagesCom_discord0 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.discord_0")]
    public string? Android_remoteInputHistoryCom_discord0 { get; init; }

    [JsonPropertyName("android.selfDisplayName_com.discord_0")]
    public string? Android_selfDisplayNameCom_discord0 { get; init; }

    [JsonPropertyName("android.showChronometer_com.discord_0")]
    public bool? Android_showChronometerCom_discord0 { get; init; }

    [JsonPropertyName("android.showWhen_com.discord_0")]
    public bool? Android_showWhenCom_discord0 { get; init; }

    [JsonPropertyName("android.subText_com.discord_0")]
    public string? Android_subTextCom_discord0 { get; init; }

    [JsonPropertyName("android.template_com.discord_0")]
    public string? Android_templateCom_discord0 { get; init; }

    [JsonPropertyName("android.text_com.discord_0")]
    public string? Android_textCom_discord0 { get; init; }

    [JsonPropertyName("android.title_com.discord_0")]
    public string? Android_titleCom_discord0 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.discord_0")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_discord0 { get; init; }

    [JsonPropertyName("com.discord_0_category")]
    public string? Com_discord0Category { get; init; }

    [JsonPropertyName("com.discord_0_channel_id")]
    public string? Com_discord0ChannelId { get; init; }

    [JsonPropertyName("com.discord_0_group_id")]
    public string? Com_discord0GroupId { get; init; }

    [JsonPropertyName("com.discord_0_is_clearable")]
    public bool? Com_discord0IsClearable { get; init; }

    [JsonPropertyName("com.discord_0_is_ongoing")]
    public bool? Com_discord0IsOngoing { get; init; }

    [JsonPropertyName("com.discord_0_post_time")]
    public double? Com_discord0PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.sec.android.app.shealth_105")]
    public string? Android_appInfoCom_sec_android_app_shealth105 { get; init; }

    [JsonPropertyName("android.appInfo_com.supercell.clashofclans_-1242848762")]
    public string? Android_appInfoCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_70158210")]
    public string? Android_appInfoCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.bigText_com.supercell.clashofclans_-1242848762")]
    public string? Android_bigTextCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_70158210")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.infoText_com.supercell.clashofclans_-1242848762")]
    public string? Android_infoTextCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_70158210")]
    public string? Android_infoTextCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.largeIcon_com.supercell.clashofclans_-1242848762")]
    public string? Android_largeIconCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_70158210")]
    public string? Android_largeIconCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.supercell.clashofclans_-1242848762")]
    public bool? Android_progressIndeterminateCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_70158210")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.progressMax_com.supercell.clashofclans_-1242848762")]
    public double? Android_progressMaxCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_70158210")]
    public double? Android_progressMaxCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.progress_com.supercell.clashofclans_-1242848762")]
    public double? Android_progressCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_70158210")]
    public double? Android_progressCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.reduced.images_com.sec.android.app.shealth_105")]
    public bool? Android_reduced_imagesCom_sec_android_app_shealth105 { get; init; }

    [JsonPropertyName("android.reduced.images_com.supercell.clashofclans_-1242848762")]
    public bool? Android_reduced_imagesCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_70158210")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.supercell.clashofclans_-1242848762")]
    public string? Android_remoteInputHistoryCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_70158210")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.showChronometer_com.supercell.clashofclans_-1242848762")]
    public bool? Android_showChronometerCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_70158210")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.showWhen_com.sec.android.app.shealth_105")]
    public bool? Android_showWhenCom_sec_android_app_shealth105 { get; init; }

    [JsonPropertyName("android.showWhen_com.supercell.clashofclans_-1242848762")]
    public bool? Android_showWhenCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_70158210")]
    public bool? Android_showWhenCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.subText_com.supercell.clashofclans_-1242848762")]
    public string? Android_subTextCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_70158210")]
    public string? Android_subTextCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.template_com.supercell.clashofclans_-1242848762")]
    public string? Android_templateCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_70158210")]
    public string? Android_templateCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.text_com.supercell.clashofclans_-1242848762")]
    public string? Android_textCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_70158210")]
    public string? Android_textCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.title_com.sec.android.app.shealth_105")]
    public string? Android_titleCom_sec_android_app_shealth105 { get; init; }

    [JsonPropertyName("android.title_com.supercell.clashofclans_-1242848762")]
    public string? Android_titleCom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_70158210")]
    public string? Android_titleCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.supercell.clashofclans_-1242848762")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_supercell_clashofclans1242848762 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_70158210")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("com.sec.android.app.shealth_105_category")]
    public string? Com_sec_android_app_shealth105Category { get; init; }

    [JsonPropertyName("com.sec.android.app.shealth_105_channel_id")]
    public string? Com_sec_android_app_shealth105ChannelId { get; init; }

    [JsonPropertyName("com.sec.android.app.shealth_105_group_id")]
    public string? Com_sec_android_app_shealth105GroupId { get; init; }

    [JsonPropertyName("com.sec.android.app.shealth_105_is_clearable")]
    public bool? Com_sec_android_app_shealth105IsClearable { get; init; }

    [JsonPropertyName("com.sec.android.app.shealth_105_is_ongoing")]
    public bool? Com_sec_android_app_shealth105IsOngoing { get; init; }

    [JsonPropertyName("com.sec.android.app.shealth_105_post_time")]
    public double? Com_sec_android_app_shealth105PostTime { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1242848762_category")]
    public string? Com_supercell_clashofclans1242848762Category { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1242848762_channel_id")]
    public string? Com_supercell_clashofclans1242848762ChannelId { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1242848762_group_id")]
    public string? Com_supercell_clashofclans1242848762GroupId { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1242848762_is_clearable")]
    public bool? Com_supercell_clashofclans1242848762IsClearable { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1242848762_is_ongoing")]
    public bool? Com_supercell_clashofclans1242848762IsOngoing { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1242848762_post_time")]
    public double? Com_supercell_clashofclans1242848762PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_70158210_category")]
    public string? Com_zhiliaoapp_musically70158210Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_70158210_channel_id")]
    public string? Com_zhiliaoapp_musically70158210ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_70158210_group_id")]
    public string? Com_zhiliaoapp_musically70158210GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_70158210_is_clearable")]
    public bool? Com_zhiliaoapp_musically70158210IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_70158210_is_ongoing")]
    public bool? Com_zhiliaoapp_musically70158210IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_70158210_post_time")]
    public double? Com_zhiliaoapp_musically70158210PostTime { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_70158210")]
    public string? PushLabelCom_zhiliaoapp_musically70158210 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_34706")]
    public string? Android_appInfoCom_zhiliaoapp_musically34706 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_70320198")]
    public string? Android_appInfoCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_70320198")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_34706")]
    public string? Android_infoTextCom_zhiliaoapp_musically34706 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_70320198")]
    public string? Android_infoTextCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_34706")]
    public string? Android_largeIconCom_zhiliaoapp_musically34706 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_70320198")]
    public string? Android_largeIconCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_34706")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically34706 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_70320198")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_34706")]
    public double? Android_progressMaxCom_zhiliaoapp_musically34706 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_70320198")]
    public double? Android_progressMaxCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_34706")]
    public double? Android_progressCom_zhiliaoapp_musically34706 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_70320198")]
    public double? Android_progressCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_34706")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically34706 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_70320198")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_34706")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically34706 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_70320198")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_34706")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically34706 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_70320198")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_34706")]
    public bool? Android_showWhenCom_zhiliaoapp_musically34706 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_70320198")]
    public bool? Android_showWhenCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_34706")]
    public string? Android_subTextCom_zhiliaoapp_musically34706 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_70320198")]
    public string? Android_subTextCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_70320198")]
    public string? Android_templateCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_34706")]
    public string? Android_textCom_zhiliaoapp_musically34706 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_70320198")]
    public string? Android_textCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_34706")]
    public string? Android_titleCom_zhiliaoapp_musically34706 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_70320198")]
    public string? Android_titleCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_70320198")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_34706_category")]
    public string? Com_zhiliaoapp_musically34706Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_34706_channel_id")]
    public string? Com_zhiliaoapp_musically34706ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_34706_group_id")]
    public string? Com_zhiliaoapp_musically34706GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_34706_is_clearable")]
    public bool? Com_zhiliaoapp_musically34706IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_34706_is_ongoing")]
    public bool? Com_zhiliaoapp_musically34706IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_34706_post_time")]
    public double? Com_zhiliaoapp_musically34706PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_70320198_category")]
    public string? Com_zhiliaoapp_musically70320198Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_70320198_channel_id")]
    public string? Com_zhiliaoapp_musically70320198ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_70320198_group_id")]
    public string? Com_zhiliaoapp_musically70320198GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_70320198_is_clearable")]
    public bool? Com_zhiliaoapp_musically70320198IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_70320198_is_ongoing")]
    public bool? Com_zhiliaoapp_musically70320198IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_70320198_post_time")]
    public double? Com_zhiliaoapp_musically70320198PostTime { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_70320198")]
    public string? PushLabelCom_zhiliaoapp_musically70320198 { get; init; }

    [JsonPropertyName("android.appInfo_com.samsung.android.game.gametools_2131296759")]
    public string? Android_appInfoCom_samsung_android_game_gametools2131296759 { get; init; }

    [JsonPropertyName("android.infoText_com.samsung.android.game.gametools_2131296759")]
    public string? Android_infoTextCom_samsung_android_game_gametools2131296759 { get; init; }

    [JsonPropertyName("android.largeIcon_com.samsung.android.game.gametools_2131296759")]
    public string? Android_largeIconCom_samsung_android_game_gametools2131296759 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.samsung.android.game.gametools_2131296759")]
    public bool? Android_progressIndeterminateCom_samsung_android_game_gametools2131296759 { get; init; }

    [JsonPropertyName("android.progressMax_com.samsung.android.game.gametools_2131296759")]
    public double? Android_progressMaxCom_samsung_android_game_gametools2131296759 { get; init; }

    [JsonPropertyName("android.progress_com.samsung.android.game.gametools_2131296759")]
    public double? Android_progressCom_samsung_android_game_gametools2131296759 { get; init; }

    [JsonPropertyName("android.reduced.images_com.samsung.android.game.gametools_2131296759")]
    public bool? Android_reduced_imagesCom_samsung_android_game_gametools2131296759 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.samsung.android.game.gametools_2131296759")]
    public string? Android_remoteInputHistoryCom_samsung_android_game_gametools2131296759 { get; init; }

    [JsonPropertyName("android.showChronometer_com.samsung.android.game.gametools_2131296759")]
    public bool? Android_showChronometerCom_samsung_android_game_gametools2131296759 { get; init; }

    [JsonPropertyName("android.showWhen_com.samsung.android.game.gametools_2131296759")]
    public bool? Android_showWhenCom_samsung_android_game_gametools2131296759 { get; init; }

    [JsonPropertyName("android.subText_com.samsung.android.game.gametools_2131296759")]
    public string? Android_subTextCom_samsung_android_game_gametools2131296759 { get; init; }

    [JsonPropertyName("android.text_com.samsung.android.game.gametools_2131296759")]
    public string? Android_textCom_samsung_android_game_gametools2131296759 { get; init; }

    [JsonPropertyName("android.title_com.samsung.android.game.gametools_2131296759")]
    public string? Android_titleCom_samsung_android_game_gametools2131296759 { get; init; }

    [JsonPropertyName("com.samsung.android.game.gametools_2131296759_category")]
    public string? Com_samsung_android_game_gametools2131296759Category { get; init; }

    [JsonPropertyName("com.samsung.android.game.gametools_2131296759_channel_id")]
    public string? Com_samsung_android_game_gametools2131296759ChannelId { get; init; }

    [JsonPropertyName("com.samsung.android.game.gametools_2131296759_group_id")]
    public string? Com_samsung_android_game_gametools2131296759GroupId { get; init; }

    [JsonPropertyName("com.samsung.android.game.gametools_2131296759_is_clearable")]
    public bool? Com_samsung_android_game_gametools2131296759IsClearable { get; init; }

    [JsonPropertyName("com.samsung.android.game.gametools_2131296759_is_ongoing")]
    public bool? Com_samsung_android_game_gametools2131296759IsOngoing { get; init; }

    [JsonPropertyName("com.samsung.android.game.gametools_2131296759_post_time")]
    public double? Com_samsung_android_game_gametools2131296759PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.twitter.android_1170")]
    public string? Android_appInfoCom_twitter_android1170 { get; init; }

    [JsonPropertyName("android.contains.customView_com.twitter.android_1170")]
    public bool? Android_contains_customViewCom_twitter_android1170 { get; init; }

    [JsonPropertyName("android.infoText_com.twitter.android_1170")]
    public string? Android_infoTextCom_twitter_android1170 { get; init; }

    [JsonPropertyName("android.largeIcon_com.twitter.android_1170")]
    public string? Android_largeIconCom_twitter_android1170 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.twitter.android_1170")]
    public bool? Android_progressIndeterminateCom_twitter_android1170 { get; init; }

    [JsonPropertyName("android.progressMax_com.twitter.android_1170")]
    public double? Android_progressMaxCom_twitter_android1170 { get; init; }

    [JsonPropertyName("android.progress_com.twitter.android_1170")]
    public double? Android_progressCom_twitter_android1170 { get; init; }

    [JsonPropertyName("android.reduced.images_com.twitter.android_1170")]
    public bool? Android_reduced_imagesCom_twitter_android1170 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.twitter.android_1170")]
    public string? Android_remoteInputHistoryCom_twitter_android1170 { get; init; }

    [JsonPropertyName("android.showChronometer_com.twitter.android_1170")]
    public bool? Android_showChronometerCom_twitter_android1170 { get; init; }

    [JsonPropertyName("android.showWhen_com.twitter.android_1170")]
    public bool? Android_showWhenCom_twitter_android1170 { get; init; }

    [JsonPropertyName("android.subText_com.twitter.android_1170")]
    public string? Android_subTextCom_twitter_android1170 { get; init; }

    [JsonPropertyName("android.template_com.twitter.android_1170")]
    public string? Android_templateCom_twitter_android1170 { get; init; }

    [JsonPropertyName("android.text_com.twitter.android_1170")]
    public string? Android_textCom_twitter_android1170 { get; init; }

    [JsonPropertyName("android.title_com.twitter.android_1170")]
    public string? Android_titleCom_twitter_android1170 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.twitter.android_1170")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_twitter_android1170 { get; init; }

    [JsonPropertyName("com.twitter.android_1170_category")]
    public string? Com_twitter_android1170Category { get; init; }

    [JsonPropertyName("com.twitter.android_1170_channel_id")]
    public string? Com_twitter_android1170ChannelId { get; init; }

    [JsonPropertyName("com.twitter.android_1170_group_id")]
    public string? Com_twitter_android1170GroupId { get; init; }

    [JsonPropertyName("com.twitter.android_1170_is_clearable")]
    public bool? Com_twitter_android1170IsClearable { get; init; }

    [JsonPropertyName("com.twitter.android_1170_is_ongoing")]
    public bool? Com_twitter_android1170IsOngoing { get; init; }

    [JsonPropertyName("com.twitter.android_1170_post_time")]
    public double? Com_twitter_android1170PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.spotify.music_2131430736")]
    public string? Android_appInfoCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.compactActions_com.spotify.music_2131430736")]
    public IReadOnlyList<double>? Android_compactActionsCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.infoText_com.spotify.music_2131430736")]
    public string? Android_infoTextCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.largeIcon_com.spotify.music_2131430736")]
    public string? Android_largeIconCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.mediaSession_com.spotify.music_2131430736")]
    public string? Android_mediaSessionCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.spotify.music_2131430736")]
    public bool? Android_progressIndeterminateCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.progressMax_com.spotify.music_2131430736")]
    public double? Android_progressMaxCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.progress_com.spotify.music_2131430736")]
    public double? Android_progressCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.reduced.images_com.spotify.music_2131430736")]
    public bool? Android_reduced_imagesCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.spotify.music_2131430736")]
    public string? Android_remoteInputHistoryCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.showChronometer_com.spotify.music_2131430736")]
    public bool? Android_showChronometerCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.showWhen_com.spotify.music_2131430736")]
    public bool? Android_showWhenCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.subText_com.spotify.music_2131430736")]
    public string? Android_subTextCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.template_com.spotify.music_2131430736")]
    public string? Android_templateCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.text_com.spotify.music_2131430736")]
    public string? Android_textCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("android.title_com.spotify.music_2131430736")]
    public string? Android_titleCom_spotify_music2131430736 { get; init; }

    [JsonPropertyName("com.spotify.music_2131430736_category")]
    public string? Com_spotify_music2131430736Category { get; init; }

    [JsonPropertyName("com.spotify.music_2131430736_channel_id")]
    public string? Com_spotify_music2131430736ChannelId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430736_group_id")]
    public string? Com_spotify_music2131430736GroupId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430736_is_clearable")]
    public bool? Com_spotify_music2131430736IsClearable { get; init; }

    [JsonPropertyName("com.spotify.music_2131430736_is_ongoing")]
    public bool? Com_spotify_music2131430736IsOngoing { get; init; }

    [JsonPropertyName("com.spotify.music_2131430736_post_time")]
    public double? Com_spotify_music2131430736PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_-264195616")]
    public string? Android_appInfoCom_zhiliaoapp_musically264195616 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_-264195616")]
    public string? Android_infoTextCom_zhiliaoapp_musically264195616 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_-264195616")]
    public string? Android_largeIconCom_zhiliaoapp_musically264195616 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_-264195616")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically264195616 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_-264195616")]
    public double? Android_progressMaxCom_zhiliaoapp_musically264195616 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_-264195616")]
    public double? Android_progressCom_zhiliaoapp_musically264195616 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_-264195616")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically264195616 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_-264195616")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically264195616 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_-264195616")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically264195616 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_-264195616")]
    public bool? Android_showWhenCom_zhiliaoapp_musically264195616 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_-264195616")]
    public string? Android_subTextCom_zhiliaoapp_musically264195616 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_-264195616")]
    public string? Android_textCom_zhiliaoapp_musically264195616 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_-264195616")]
    public string? Android_titleCom_zhiliaoapp_musically264195616 { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_-264195616_category")]
    public string? Com_zhiliaoapp_musically264195616Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_-264195616_channel_id")]
    public string? Com_zhiliaoapp_musically264195616ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_-264195616_group_id")]
    public string? Com_zhiliaoapp_musically264195616GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_-264195616_is_clearable")]
    public bool? Com_zhiliaoapp_musically264195616IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_-264195616_is_ongoing")]
    public bool? Com_zhiliaoapp_musically264195616IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_-264195616_post_time")]
    public double? Com_zhiliaoapp_musically264195616PostTime { get; init; }

    [JsonPropertyName("battery_quantity")]
    public double? BatteryQuantity { get; init; }

    [JsonPropertyName("battery_type")]
    public string? BatteryType { get; init; }

    [JsonPropertyName("battery_type_and_quantity")]
    public string? BatteryTypeAndQuantity { get; init; }

    [JsonPropertyName("battery_low")]
    public bool? BatteryLow { get; init; }

    [JsonPropertyName("battery_low_threshold")]
    public double? BatteryLowThreshold { get; init; }

    [JsonPropertyName("battery_last_reported")]
    public string? BatteryLastReported { get; init; }

    [JsonPropertyName("battery_last_reported_level")]
    public double? BatteryLastReportedLevel { get; init; }

    [JsonPropertyName("battery_last_replaced")]
    public object? BatteryLastReplaced { get; init; }

    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }

    [JsonPropertyName("android.appInfo_com.android.systemui_4660")]
    public string? Android_appInfoCom_android_systemui4660 { get; init; }

    [JsonPropertyName("android.appInfo_com.instagram.barcelona_64278")]
    public string? Android_appInfoCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.appInfo_com.supercell.clashofclans_0")]
    public string? Android_appInfoCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_1070001706")]
    public string? Android_appInfoCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.bigText_com.instagram.barcelona_64278")]
    public string? Android_bigTextCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.bigText_com.supercell.clashofclans_0")]
    public string? Android_bigTextCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_1070001706")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.infoText_com.instagram.barcelona_64278")]
    public string? Android_infoTextCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.infoText_com.supercell.clashofclans_0")]
    public string? Android_infoTextCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_1070001706")]
    public string? Android_infoTextCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.largeIcon_com.instagram.barcelona_64278")]
    public string? Android_largeIconCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.largeIcon_com.supercell.clashofclans_0")]
    public string? Android_largeIconCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_1070001706")]
    public string? Android_largeIconCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.instagram.barcelona_64278")]
    public bool? Android_progressIndeterminateCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.supercell.clashofclans_0")]
    public bool? Android_progressIndeterminateCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_1070001706")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.progressMax_com.instagram.barcelona_64278")]
    public double? Android_progressMaxCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.progressMax_com.supercell.clashofclans_0")]
    public double? Android_progressMaxCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_1070001706")]
    public double? Android_progressMaxCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.progress_com.instagram.barcelona_64278")]
    public double? Android_progressCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.progress_com.supercell.clashofclans_0")]
    public double? Android_progressCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_1070001706")]
    public double? Android_progressCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.reduced.images_com.android.systemui_4660")]
    public bool? Android_reduced_imagesCom_android_systemui4660 { get; init; }

    [JsonPropertyName("android.reduced.images_com.instagram.barcelona_64278")]
    public bool? Android_reduced_imagesCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.reduced.images_com.supercell.clashofclans_0")]
    public bool? Android_reduced_imagesCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_1070001706")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.instagram.barcelona_64278")]
    public string? Android_remoteInputHistoryCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.supercell.clashofclans_0")]
    public string? Android_remoteInputHistoryCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_1070001706")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.showChronometer_com.instagram.barcelona_64278")]
    public bool? Android_showChronometerCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.showChronometer_com.supercell.clashofclans_0")]
    public bool? Android_showChronometerCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_1070001706")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.showWhen_com.instagram.barcelona_64278")]
    public bool? Android_showWhenCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.showWhen_com.supercell.clashofclans_0")]
    public bool? Android_showWhenCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_1070001706")]
    public bool? Android_showWhenCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.subText_com.instagram.barcelona_64278")]
    public string? Android_subTextCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.subText_com.supercell.clashofclans_0")]
    public string? Android_subTextCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_1070001706")]
    public string? Android_subTextCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.template_com.instagram.barcelona_64278")]
    public string? Android_templateCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.template_com.supercell.clashofclans_0")]
    public string? Android_templateCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_1070001706")]
    public string? Android_templateCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.text_com.instagram.barcelona_64278")]
    public string? Android_textCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.text_com.supercell.clashofclans_0")]
    public string? Android_textCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_1070001706")]
    public string? Android_textCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.title_com.android.systemui_4660")]
    public string? Android_titleCom_android_systemui4660 { get; init; }

    [JsonPropertyName("android.title_com.instagram.barcelona_64278")]
    public string? Android_titleCom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("android.title_com.supercell.clashofclans_0")]
    public string? Android_titleCom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_1070001706")]
    public string? Android_titleCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.instagram.barcelona_64278")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_instagram_barcelona64278 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.supercell.clashofclans_0")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_supercell_clashofclans0 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_1070001706")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("com.android.systemui_4660_category")]
    public string? Com_android_systemui4660Category { get; init; }

    [JsonPropertyName("com.android.systemui_4660_channel_id")]
    public string? Com_android_systemui4660ChannelId { get; init; }

    [JsonPropertyName("com.android.systemui_4660_group_id")]
    public string? Com_android_systemui4660GroupId { get; init; }

    [JsonPropertyName("com.android.systemui_4660_is_clearable")]
    public bool? Com_android_systemui4660IsClearable { get; init; }

    [JsonPropertyName("com.android.systemui_4660_is_ongoing")]
    public bool? Com_android_systemui4660IsOngoing { get; init; }

    [JsonPropertyName("com.android.systemui_4660_post_time")]
    public double? Com_android_systemui4660PostTime { get; init; }

    [JsonPropertyName("com.instagram.barcelona_64278_category")]
    public string? Com_instagram_barcelona64278Category { get; init; }

    [JsonPropertyName("com.instagram.barcelona_64278_channel_id")]
    public string? Com_instagram_barcelona64278ChannelId { get; init; }

    [JsonPropertyName("com.instagram.barcelona_64278_group_id")]
    public string? Com_instagram_barcelona64278GroupId { get; init; }

    [JsonPropertyName("com.instagram.barcelona_64278_is_clearable")]
    public bool? Com_instagram_barcelona64278IsClearable { get; init; }

    [JsonPropertyName("com.instagram.barcelona_64278_is_ongoing")]
    public bool? Com_instagram_barcelona64278IsOngoing { get; init; }

    [JsonPropertyName("com.instagram.barcelona_64278_post_time")]
    public double? Com_instagram_barcelona64278PostTime { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_0_category")]
    public string? Com_supercell_clashofclans0Category { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_0_channel_id")]
    public string? Com_supercell_clashofclans0ChannelId { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_0_group_id")]
    public string? Com_supercell_clashofclans0GroupId { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_0_is_clearable")]
    public bool? Com_supercell_clashofclans0IsClearable { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_0_is_ongoing")]
    public bool? Com_supercell_clashofclans0IsOngoing { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_0_post_time")]
    public double? Com_supercell_clashofclans0PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1070001706_category")]
    public string? Com_zhiliaoapp_musically1070001706Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1070001706_channel_id")]
    public string? Com_zhiliaoapp_musically1070001706ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1070001706_group_id")]
    public string? Com_zhiliaoapp_musically1070001706GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1070001706_is_clearable")]
    public bool? Com_zhiliaoapp_musically1070001706IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1070001706_is_ongoing")]
    public bool? Com_zhiliaoapp_musically1070001706IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1070001706_post_time")]
    public double? Com_zhiliaoapp_musically1070001706PostTime { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_1070001706")]
    public string? ConversationIdCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_1070001706")]
    public string? PushLabelCom_zhiliaoapp_musically1070001706 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_1010516918")]
    public string? Android_appInfoCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_1127910721")]
    public string? Android_appInfoCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_12672")]
    public string? Android_appInfoCom_zhiliaoapp_musically12672 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_1444974594")]
    public string? Android_appInfoCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_1625001070")]
    public string? Android_appInfoCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_338428382")]
    public string? Android_appInfoCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_414569540")]
    public string? Android_appInfoCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_812390696")]
    public string? Android_appInfoCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_829469683")]
    public string? Android_appInfoCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_854685145")]
    public string? Android_appInfoCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_922360031")]
    public string? Android_appInfoCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_1010516918")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_1127910721")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_1444974594")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_1625001070")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_338428382")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_414569540")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_812390696")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_829469683")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_854685145")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_922360031")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_1010516918")]
    public string? Android_infoTextCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_1127910721")]
    public string? Android_infoTextCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_12672")]
    public string? Android_infoTextCom_zhiliaoapp_musically12672 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_1444974594")]
    public string? Android_infoTextCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_1625001070")]
    public string? Android_infoTextCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_338428382")]
    public string? Android_infoTextCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_414569540")]
    public string? Android_infoTextCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_812390696")]
    public string? Android_infoTextCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_829469683")]
    public string? Android_infoTextCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_854685145")]
    public string? Android_infoTextCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_922360031")]
    public string? Android_infoTextCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_1010516918")]
    public string? Android_largeIconCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_1127910721")]
    public string? Android_largeIconCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_12672")]
    public string? Android_largeIconCom_zhiliaoapp_musically12672 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_1444974594")]
    public string? Android_largeIconCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_1625001070")]
    public string? Android_largeIconCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_338428382")]
    public string? Android_largeIconCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_414569540")]
    public string? Android_largeIconCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_812390696")]
    public string? Android_largeIconCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_829469683")]
    public string? Android_largeIconCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_854685145")]
    public string? Android_largeIconCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_922360031")]
    public string? Android_largeIconCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_1010516918")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_1127910721")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_12672")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically12672 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_1444974594")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_1625001070")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_338428382")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_414569540")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_812390696")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_829469683")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_854685145")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_922360031")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_1010516918")]
    public double? Android_progressMaxCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_1127910721")]
    public double? Android_progressMaxCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_12672")]
    public double? Android_progressMaxCom_zhiliaoapp_musically12672 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_1444974594")]
    public double? Android_progressMaxCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_1625001070")]
    public double? Android_progressMaxCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_338428382")]
    public double? Android_progressMaxCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_414569540")]
    public double? Android_progressMaxCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_812390696")]
    public double? Android_progressMaxCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_829469683")]
    public double? Android_progressMaxCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_854685145")]
    public double? Android_progressMaxCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_922360031")]
    public double? Android_progressMaxCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_1010516918")]
    public double? Android_progressCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_1127910721")]
    public double? Android_progressCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_12672")]
    public double? Android_progressCom_zhiliaoapp_musically12672 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_1444974594")]
    public double? Android_progressCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_1625001070")]
    public double? Android_progressCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_338428382")]
    public double? Android_progressCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_414569540")]
    public double? Android_progressCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_812390696")]
    public double? Android_progressCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_829469683")]
    public double? Android_progressCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_854685145")]
    public double? Android_progressCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_922360031")]
    public double? Android_progressCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_1010516918")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_1127910721")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_12672")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically12672 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_1444974594")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_1625001070")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_338428382")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_414569540")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_812390696")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_829469683")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_854685145")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_922360031")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_1010516918")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_1127910721")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_12672")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically12672 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_1444974594")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_1625001070")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_338428382")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_414569540")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_812390696")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_829469683")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_854685145")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_922360031")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_1010516918")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_1127910721")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_12672")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically12672 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_1444974594")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_1625001070")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_338428382")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_414569540")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_812390696")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_829469683")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_854685145")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_922360031")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_1010516918")]
    public bool? Android_showWhenCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_1127910721")]
    public bool? Android_showWhenCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_12672")]
    public bool? Android_showWhenCom_zhiliaoapp_musically12672 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_1444974594")]
    public bool? Android_showWhenCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_1625001070")]
    public bool? Android_showWhenCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_338428382")]
    public bool? Android_showWhenCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_414569540")]
    public bool? Android_showWhenCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_812390696")]
    public bool? Android_showWhenCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_829469683")]
    public bool? Android_showWhenCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_854685145")]
    public bool? Android_showWhenCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_922360031")]
    public bool? Android_showWhenCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_1010516918")]
    public string? Android_subTextCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_1127910721")]
    public string? Android_subTextCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_12672")]
    public string? Android_subTextCom_zhiliaoapp_musically12672 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_1444974594")]
    public string? Android_subTextCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_1625001070")]
    public string? Android_subTextCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_338428382")]
    public string? Android_subTextCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_414569540")]
    public string? Android_subTextCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_812390696")]
    public string? Android_subTextCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_829469683")]
    public string? Android_subTextCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_854685145")]
    public string? Android_subTextCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_922360031")]
    public string? Android_subTextCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_1010516918")]
    public string? Android_templateCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_1127910721")]
    public string? Android_templateCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_1444974594")]
    public string? Android_templateCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_1625001070")]
    public string? Android_templateCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_338428382")]
    public string? Android_templateCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_414569540")]
    public string? Android_templateCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_812390696")]
    public string? Android_templateCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_829469683")]
    public string? Android_templateCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_854685145")]
    public string? Android_templateCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_922360031")]
    public string? Android_templateCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_1010516918")]
    public string? Android_textCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_1127910721")]
    public string? Android_textCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_12672")]
    public string? Android_textCom_zhiliaoapp_musically12672 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_1444974594")]
    public string? Android_textCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_1625001070")]
    public string? Android_textCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_338428382")]
    public string? Android_textCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_414569540")]
    public string? Android_textCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_812390696")]
    public string? Android_textCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_829469683")]
    public string? Android_textCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_854685145")]
    public string? Android_textCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_922360031")]
    public string? Android_textCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_1010516918")]
    public string? Android_titleCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_1127910721")]
    public string? Android_titleCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_12672")]
    public string? Android_titleCom_zhiliaoapp_musically12672 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_1444974594")]
    public string? Android_titleCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_1625001070")]
    public string? Android_titleCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_338428382")]
    public string? Android_titleCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_414569540")]
    public string? Android_titleCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_812390696")]
    public string? Android_titleCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_829469683")]
    public string? Android_titleCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_854685145")]
    public string? Android_titleCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_922360031")]
    public string? Android_titleCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_1010516918")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_1127910721")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_1444974594")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_1625001070")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_338428382")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_414569540")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_812390696")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_829469683")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_854685145")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_922360031")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1010516918_category")]
    public string? Com_zhiliaoapp_musically1010516918Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1010516918_channel_id")]
    public string? Com_zhiliaoapp_musically1010516918ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1010516918_group_id")]
    public string? Com_zhiliaoapp_musically1010516918GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1010516918_is_clearable")]
    public bool? Com_zhiliaoapp_musically1010516918IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1010516918_is_ongoing")]
    public bool? Com_zhiliaoapp_musically1010516918IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1010516918_post_time")]
    public double? Com_zhiliaoapp_musically1010516918PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1127910721_category")]
    public string? Com_zhiliaoapp_musically1127910721Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1127910721_channel_id")]
    public string? Com_zhiliaoapp_musically1127910721ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1127910721_group_id")]
    public string? Com_zhiliaoapp_musically1127910721GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1127910721_is_clearable")]
    public bool? Com_zhiliaoapp_musically1127910721IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1127910721_is_ongoing")]
    public bool? Com_zhiliaoapp_musically1127910721IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1127910721_post_time")]
    public double? Com_zhiliaoapp_musically1127910721PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_12672_category")]
    public string? Com_zhiliaoapp_musically12672Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_12672_channel_id")]
    public string? Com_zhiliaoapp_musically12672ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_12672_group_id")]
    public string? Com_zhiliaoapp_musically12672GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_12672_is_clearable")]
    public bool? Com_zhiliaoapp_musically12672IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_12672_is_ongoing")]
    public bool? Com_zhiliaoapp_musically12672IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_12672_post_time")]
    public double? Com_zhiliaoapp_musically12672PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1444974594_category")]
    public string? Com_zhiliaoapp_musically1444974594Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1444974594_channel_id")]
    public string? Com_zhiliaoapp_musically1444974594ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1444974594_group_id")]
    public string? Com_zhiliaoapp_musically1444974594GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1444974594_is_clearable")]
    public bool? Com_zhiliaoapp_musically1444974594IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1444974594_is_ongoing")]
    public bool? Com_zhiliaoapp_musically1444974594IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1444974594_post_time")]
    public double? Com_zhiliaoapp_musically1444974594PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1625001070_category")]
    public string? Com_zhiliaoapp_musically1625001070Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1625001070_channel_id")]
    public string? Com_zhiliaoapp_musically1625001070ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1625001070_group_id")]
    public string? Com_zhiliaoapp_musically1625001070GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1625001070_is_clearable")]
    public bool? Com_zhiliaoapp_musically1625001070IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1625001070_is_ongoing")]
    public bool? Com_zhiliaoapp_musically1625001070IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1625001070_post_time")]
    public double? Com_zhiliaoapp_musically1625001070PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_338428382_category")]
    public string? Com_zhiliaoapp_musically338428382Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_338428382_channel_id")]
    public string? Com_zhiliaoapp_musically338428382ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_338428382_group_id")]
    public string? Com_zhiliaoapp_musically338428382GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_338428382_is_clearable")]
    public bool? Com_zhiliaoapp_musically338428382IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_338428382_is_ongoing")]
    public bool? Com_zhiliaoapp_musically338428382IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_338428382_post_time")]
    public double? Com_zhiliaoapp_musically338428382PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_414569540_category")]
    public string? Com_zhiliaoapp_musically414569540Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_414569540_channel_id")]
    public string? Com_zhiliaoapp_musically414569540ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_414569540_group_id")]
    public string? Com_zhiliaoapp_musically414569540GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_414569540_is_clearable")]
    public bool? Com_zhiliaoapp_musically414569540IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_414569540_is_ongoing")]
    public bool? Com_zhiliaoapp_musically414569540IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_414569540_post_time")]
    public double? Com_zhiliaoapp_musically414569540PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_812390696_category")]
    public string? Com_zhiliaoapp_musically812390696Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_812390696_channel_id")]
    public string? Com_zhiliaoapp_musically812390696ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_812390696_group_id")]
    public string? Com_zhiliaoapp_musically812390696GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_812390696_is_clearable")]
    public bool? Com_zhiliaoapp_musically812390696IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_812390696_is_ongoing")]
    public bool? Com_zhiliaoapp_musically812390696IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_812390696_post_time")]
    public double? Com_zhiliaoapp_musically812390696PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_829469683_category")]
    public string? Com_zhiliaoapp_musically829469683Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_829469683_channel_id")]
    public string? Com_zhiliaoapp_musically829469683ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_829469683_group_id")]
    public string? Com_zhiliaoapp_musically829469683GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_829469683_is_clearable")]
    public bool? Com_zhiliaoapp_musically829469683IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_829469683_is_ongoing")]
    public bool? Com_zhiliaoapp_musically829469683IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_829469683_post_time")]
    public double? Com_zhiliaoapp_musically829469683PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_854685145_category")]
    public string? Com_zhiliaoapp_musically854685145Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_854685145_channel_id")]
    public string? Com_zhiliaoapp_musically854685145ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_854685145_group_id")]
    public string? Com_zhiliaoapp_musically854685145GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_854685145_is_clearable")]
    public bool? Com_zhiliaoapp_musically854685145IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_854685145_is_ongoing")]
    public bool? Com_zhiliaoapp_musically854685145IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_854685145_post_time")]
    public double? Com_zhiliaoapp_musically854685145PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_922360031_category")]
    public string? Com_zhiliaoapp_musically922360031Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_922360031_channel_id")]
    public string? Com_zhiliaoapp_musically922360031ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_922360031_group_id")]
    public string? Com_zhiliaoapp_musically922360031GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_922360031_is_clearable")]
    public bool? Com_zhiliaoapp_musically922360031IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_922360031_is_ongoing")]
    public bool? Com_zhiliaoapp_musically922360031IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_922360031_post_time")]
    public double? Com_zhiliaoapp_musically922360031PostTime { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_1010516918")]
    public string? ConversationIdCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_1127910721")]
    public string? ConversationIdCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_1444974594")]
    public string? ConversationIdCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_1625001070")]
    public string? ConversationIdCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_338428382")]
    public string? ConversationIdCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_414569540")]
    public string? ConversationIdCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_812390696")]
    public string? ConversationIdCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_829469683")]
    public string? ConversationIdCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_854685145")]
    public string? ConversationIdCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_922360031")]
    public string? ConversationIdCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_1010516918")]
    public string? PushLabelCom_zhiliaoapp_musically1010516918 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_1127910721")]
    public string? PushLabelCom_zhiliaoapp_musically1127910721 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_1444974594")]
    public string? PushLabelCom_zhiliaoapp_musically1444974594 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_1625001070")]
    public string? PushLabelCom_zhiliaoapp_musically1625001070 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_338428382")]
    public string? PushLabelCom_zhiliaoapp_musically338428382 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_414569540")]
    public string? PushLabelCom_zhiliaoapp_musically414569540 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_812390696")]
    public string? PushLabelCom_zhiliaoapp_musically812390696 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_829469683")]
    public string? PushLabelCom_zhiliaoapp_musically829469683 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_854685145")]
    public string? PushLabelCom_zhiliaoapp_musically854685145 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_922360031")]
    public string? PushLabelCom_zhiliaoapp_musically922360031 { get; init; }

    [JsonPropertyName("source_entity_id")]
    public string? SourceEntityId { get; init; }

    [JsonPropertyName("device_name")]
    public string? DeviceName { get; init; }

    [JsonPropertyName("android.appInfo_com.microsoft.emmx_52")]
    public string? Android_appInfoCom_microsoft_emmx52 { get; init; }

    [JsonPropertyName("android.appInfo_com.spotify.music_2131430866")]
    public string? Android_appInfoCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.compactActions_com.spotify.music_2131430866")]
    public IReadOnlyList<double>? Android_compactActionsCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.infoText_com.microsoft.emmx_52")]
    public string? Android_infoTextCom_microsoft_emmx52 { get; init; }

    [JsonPropertyName("android.infoText_com.spotify.music_2131430866")]
    public string? Android_infoTextCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.largeIcon_com.microsoft.emmx_52")]
    public string? Android_largeIconCom_microsoft_emmx52 { get; init; }

    [JsonPropertyName("android.largeIcon_com.spotify.music_2131430866")]
    public string? Android_largeIconCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.mediaSession_com.spotify.music_2131430866")]
    public string? Android_mediaSessionCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.microsoft.emmx_52")]
    public bool? Android_progressIndeterminateCom_microsoft_emmx52 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.spotify.music_2131430866")]
    public bool? Android_progressIndeterminateCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.progressMax_com.microsoft.emmx_52")]
    public double? Android_progressMaxCom_microsoft_emmx52 { get; init; }

    [JsonPropertyName("android.progressMax_com.spotify.music_2131430866")]
    public double? Android_progressMaxCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.progress_com.microsoft.emmx_52")]
    public double? Android_progressCom_microsoft_emmx52 { get; init; }

    [JsonPropertyName("android.progress_com.spotify.music_2131430866")]
    public double? Android_progressCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.reduced.images_com.microsoft.emmx_52")]
    public bool? Android_reduced_imagesCom_microsoft_emmx52 { get; init; }

    [JsonPropertyName("android.reduced.images_com.spotify.music_2131430866")]
    public bool? Android_reduced_imagesCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.microsoft.emmx_52")]
    public string? Android_remoteInputHistoryCom_microsoft_emmx52 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.spotify.music_2131430866")]
    public string? Android_remoteInputHistoryCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.showChronometer_com.microsoft.emmx_52")]
    public bool? Android_showChronometerCom_microsoft_emmx52 { get; init; }

    [JsonPropertyName("android.showChronometer_com.spotify.music_2131430866")]
    public bool? Android_showChronometerCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.showWhen_com.microsoft.emmx_52")]
    public bool? Android_showWhenCom_microsoft_emmx52 { get; init; }

    [JsonPropertyName("android.showWhen_com.spotify.music_2131430866")]
    public bool? Android_showWhenCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.subText_com.microsoft.emmx_52")]
    public string? Android_subTextCom_microsoft_emmx52 { get; init; }

    [JsonPropertyName("android.subText_com.spotify.music_2131430866")]
    public string? Android_subTextCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.template_com.spotify.music_2131430866")]
    public string? Android_templateCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.text_com.microsoft.emmx_52")]
    public string? Android_textCom_microsoft_emmx52 { get; init; }

    [JsonPropertyName("android.text_com.spotify.music_2131430866")]
    public string? Android_textCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("android.title_com.microsoft.emmx_52")]
    public string? Android_titleCom_microsoft_emmx52 { get; init; }

    [JsonPropertyName("android.title_com.spotify.music_2131430866")]
    public string? Android_titleCom_spotify_music2131430866 { get; init; }

    [JsonPropertyName("com.microsoft.emmx_52_category")]
    public string? Com_microsoft_emmx52Category { get; init; }

    [JsonPropertyName("com.microsoft.emmx_52_channel_id")]
    public string? Com_microsoft_emmx52ChannelId { get; init; }

    [JsonPropertyName("com.microsoft.emmx_52_group_id")]
    public string? Com_microsoft_emmx52GroupId { get; init; }

    [JsonPropertyName("com.microsoft.emmx_52_is_clearable")]
    public bool? Com_microsoft_emmx52IsClearable { get; init; }

    [JsonPropertyName("com.microsoft.emmx_52_is_ongoing")]
    public bool? Com_microsoft_emmx52IsOngoing { get; init; }

    [JsonPropertyName("com.microsoft.emmx_52_post_time")]
    public double? Com_microsoft_emmx52PostTime { get; init; }

    [JsonPropertyName("com.spotify.music_2131430866_category")]
    public string? Com_spotify_music2131430866Category { get; init; }

    [JsonPropertyName("com.spotify.music_2131430866_channel_id")]
    public string? Com_spotify_music2131430866ChannelId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430866_group_id")]
    public string? Com_spotify_music2131430866GroupId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430866_is_clearable")]
    public bool? Com_spotify_music2131430866IsClearable { get; init; }

    [JsonPropertyName("com.spotify.music_2131430866_is_ongoing")]
    public bool? Com_spotify_music2131430866IsOngoing { get; init; }

    [JsonPropertyName("com.spotify.music_2131430866_post_time")]
    public double? Com_spotify_music2131430866PostTime { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-1540530346")]
    public string? Android_appInfoIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("android.bigText_io.homeassistant.companion.android_-1540530346")]
    public string? Android_bigTextIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-1540530346")]
    public string? Android_infoTextIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-1540530346")]
    public string? Android_largeIconIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-1540530346")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-1540530346")]
    public double? Android_progressMaxIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-1540530346")]
    public double? Android_progressIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-1540530346")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-1540530346")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-1540530346")]
    public bool? Android_showChronometerIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-1540530346")]
    public bool? Android_showWhenIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-1540530346")]
    public string? Android_subTextIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-1540530346")]
    public string? Android_templateIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-1540530346")]
    public string? Android_textIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-1540530346")]
    public string? Android_titleIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-1540530346")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android1540530346 { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1540530346_category")]
    public string? Io_homeassistant_companion_android1540530346Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1540530346_channel_id")]
    public string? Io_homeassistant_companion_android1540530346ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1540530346_group_id")]
    public string? Io_homeassistant_companion_android1540530346GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1540530346_is_clearable")]
    public bool? Io_homeassistant_companion_android1540530346IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1540530346_is_ongoing")]
    public bool? Io_homeassistant_companion_android1540530346IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1540530346_post_time")]
    public double? Io_homeassistant_companion_android1540530346PostTime { get; init; }

    [JsonPropertyName("android.appInfo_de.axelspringer.yana.zeropage_3")]
    public string? Android_appInfoDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.appInfo_mobile.scorito.com_0")]
    public string? Android_appInfoMobile_scorito_com0 { get; init; }

    [JsonPropertyName("android.bigText_de.axelspringer.yana.zeropage_3")]
    public string? Android_bigTextDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.bigText_mobile.scorito.com_0")]
    public string? Android_bigTextMobile_scorito_com0 { get; init; }

    [JsonPropertyName("android.infoText_de.axelspringer.yana.zeropage_3")]
    public string? Android_infoTextDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.infoText_mobile.scorito.com_0")]
    public string? Android_infoTextMobile_scorito_com0 { get; init; }

    [JsonPropertyName("android.largeIcon_de.axelspringer.yana.zeropage_3")]
    public string? Android_largeIconDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.largeIcon_mobile.scorito.com_0")]
    public string? Android_largeIconMobile_scorito_com0 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_de.axelspringer.yana.zeropage_3")]
    public bool? Android_progressIndeterminateDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_mobile.scorito.com_0")]
    public bool? Android_progressIndeterminateMobile_scorito_com0 { get; init; }

    [JsonPropertyName("android.progressMax_de.axelspringer.yana.zeropage_3")]
    public double? Android_progressMaxDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.progressMax_mobile.scorito.com_0")]
    public double? Android_progressMaxMobile_scorito_com0 { get; init; }

    [JsonPropertyName("android.progress_de.axelspringer.yana.zeropage_3")]
    public double? Android_progressDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.progress_mobile.scorito.com_0")]
    public double? Android_progressMobile_scorito_com0 { get; init; }

    [JsonPropertyName("android.reduced.images_de.axelspringer.yana.zeropage_3")]
    public bool? Android_reduced_imagesDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.reduced.images_mobile.scorito.com_0")]
    public bool? Android_reduced_imagesMobile_scorito_com0 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_de.axelspringer.yana.zeropage_3")]
    public string? Android_remoteInputHistoryDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_mobile.scorito.com_0")]
    public string? Android_remoteInputHistoryMobile_scorito_com0 { get; init; }

    [JsonPropertyName("android.showChronometer_de.axelspringer.yana.zeropage_3")]
    public bool? Android_showChronometerDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.showChronometer_mobile.scorito.com_0")]
    public bool? Android_showChronometerMobile_scorito_com0 { get; init; }

    [JsonPropertyName("android.showWhen_de.axelspringer.yana.zeropage_3")]
    public bool? Android_showWhenDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.showWhen_mobile.scorito.com_0")]
    public bool? Android_showWhenMobile_scorito_com0 { get; init; }

    [JsonPropertyName("android.subText_de.axelspringer.yana.zeropage_3")]
    public string? Android_subTextDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.subText_mobile.scorito.com_0")]
    public string? Android_subTextMobile_scorito_com0 { get; init; }

    [JsonPropertyName("android.template_de.axelspringer.yana.zeropage_3")]
    public string? Android_templateDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.template_mobile.scorito.com_0")]
    public string? Android_templateMobile_scorito_com0 { get; init; }

    [JsonPropertyName("android.text_de.axelspringer.yana.zeropage_3")]
    public string? Android_textDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.text_mobile.scorito.com_0")]
    public string? Android_textMobile_scorito_com0 { get; init; }

    [JsonPropertyName("android.title_de.axelspringer.yana.zeropage_3")]
    public string? Android_titleDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("android.title_mobile.scorito.com_0")]
    public string? Android_titleMobile_scorito_com0 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_de.axelspringer.yana.zeropage_3")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEDe_axelspringer_yana_zeropage3 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_mobile.scorito.com_0")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEMobile_scorito_com0 { get; init; }

    [JsonPropertyName("de.axelspringer.yana.zeropage_3_category")]
    public string? De_axelspringer_yana_zeropage3Category { get; init; }

    [JsonPropertyName("de.axelspringer.yana.zeropage_3_channel_id")]
    public string? De_axelspringer_yana_zeropage3ChannelId { get; init; }

    [JsonPropertyName("de.axelspringer.yana.zeropage_3_group_id")]
    public string? De_axelspringer_yana_zeropage3GroupId { get; init; }

    [JsonPropertyName("de.axelspringer.yana.zeropage_3_is_clearable")]
    public bool? De_axelspringer_yana_zeropage3IsClearable { get; init; }

    [JsonPropertyName("de.axelspringer.yana.zeropage_3_is_ongoing")]
    public bool? De_axelspringer_yana_zeropage3IsOngoing { get; init; }

    [JsonPropertyName("de.axelspringer.yana.zeropage_3_post_time")]
    public double? De_axelspringer_yana_zeropage3PostTime { get; init; }

    [JsonPropertyName("mobile.scorito.com_0_category")]
    public string? Mobile_scorito_com0Category { get; init; }

    [JsonPropertyName("mobile.scorito.com_0_channel_id")]
    public string? Mobile_scorito_com0ChannelId { get; init; }

    [JsonPropertyName("mobile.scorito.com_0_group_id")]
    public string? Mobile_scorito_com0GroupId { get; init; }

    [JsonPropertyName("mobile.scorito.com_0_is_clearable")]
    public bool? Mobile_scorito_com0IsClearable { get; init; }

    [JsonPropertyName("mobile.scorito.com_0_is_ongoing")]
    public bool? Mobile_scorito_com0IsOngoing { get; init; }

    [JsonPropertyName("mobile.scorito.com_0_post_time")]
    public double? Mobile_scorito_com0PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.google.android.googlequicksearchbox_0")]
    public string? Android_appInfoCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.appInfo_com.snapchat.android_783118226")]
    public string? Android_appInfoCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.bigText_com.google.android.googlequicksearchbox_0")]
    public string? Android_bigTextCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.bigText_com.snapchat.android_783118226")]
    public string? Android_bigTextCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.conversationUnreadMessageCount_com.snapchat.android_783118226")]
    public double? Android_conversationUnreadMessageCountCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.infoText_com.google.android.googlequicksearchbox_0")]
    public string? Android_infoTextCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.infoText_com.snapchat.android_783118226")]
    public string? Android_infoTextCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.isGroupConversation_com.snapchat.android_783118226")]
    public bool? Android_isGroupConversationCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.largeIcon_com.google.android.googlequicksearchbox_0")]
    public string? Android_largeIconCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.largeIcon_com.snapchat.android_783118226")]
    public string? Android_largeIconCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.messages_com.snapchat.android_783118226")]
    public IReadOnlyList<string>? Android_messagesCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.messagingUser_com.snapchat.android_783118226")]
    public string? Android_messagingUserCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.people.list_com.snapchat.android_783118226")]
    public IReadOnlyList<string>? Android_people_listCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.google.android.googlequicksearchbox_0")]
    public bool? Android_progressIndeterminateCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.snapchat.android_783118226")]
    public bool? Android_progressIndeterminateCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.progressMax_com.google.android.googlequicksearchbox_0")]
    public double? Android_progressMaxCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.progressMax_com.snapchat.android_783118226")]
    public double? Android_progressMaxCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.progress_com.google.android.googlequicksearchbox_0")]
    public double? Android_progressCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.progress_com.snapchat.android_783118226")]
    public double? Android_progressCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.reduced.images_com.google.android.googlequicksearchbox_0")]
    public bool? Android_reduced_imagesCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.reduced.images_com.snapchat.android_783118226")]
    public bool? Android_reduced_imagesCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.google.android.googlequicksearchbox_0")]
    public string? Android_remoteInputHistoryCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.snapchat.android_783118226")]
    public string? Android_remoteInputHistoryCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.selfDisplayName_com.snapchat.android_783118226")]
    public string? Android_selfDisplayNameCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.showChronometer_com.google.android.googlequicksearchbox_0")]
    public bool? Android_showChronometerCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.showChronometer_com.snapchat.android_783118226")]
    public bool? Android_showChronometerCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.showWhen_com.google.android.googlequicksearchbox_0")]
    public bool? Android_showWhenCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.showWhen_com.snapchat.android_783118226")]
    public bool? Android_showWhenCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.subText_com.google.android.googlequicksearchbox_0")]
    public string? Android_subTextCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.subText_com.snapchat.android_783118226")]
    public string? Android_subTextCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.googlequicksearchbox_0")]
    public string? Android_support_v4_app_extra_COMPATTEMPLATECom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.template_com.google.android.googlequicksearchbox_0")]
    public string? Android_templateCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.template_com.snapchat.android_783118226")]
    public string? Android_templateCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.text_com.google.android.googlequicksearchbox_0")]
    public string? Android_textCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.text_com.snapchat.android_783118226")]
    public string? Android_textCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.title.big_com.google.android.googlequicksearchbox_0")]
    public string? Android_title_bigCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.title_com.google.android.googlequicksearchbox_0")]
    public string? Android_titleCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.title_com.snapchat.android_783118226")]
    public string? Android_titleCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.snapchat.android_783118226")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("chime.account_name_hash_com.google.android.googlequicksearchbox_0")]
    public double? Chime_accountNameHashCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("chime.thread_id_com.google.android.googlequicksearchbox_0")]
    public string? Chime_threadIdCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("com.google.android.googlequicksearchbox_0_category")]
    public string? Com_google_android_googlequicksearchbox0Category { get; init; }

    [JsonPropertyName("com.google.android.googlequicksearchbox_0_channel_id")]
    public string? Com_google_android_googlequicksearchbox0ChannelId { get; init; }

    [JsonPropertyName("com.google.android.googlequicksearchbox_0_group_id")]
    public string? Com_google_android_googlequicksearchbox0GroupId { get; init; }

    [JsonPropertyName("com.google.android.googlequicksearchbox_0_is_clearable")]
    public bool? Com_google_android_googlequicksearchbox0IsClearable { get; init; }

    [JsonPropertyName("com.google.android.googlequicksearchbox_0_is_ongoing")]
    public bool? Com_google_android_googlequicksearchbox0IsOngoing { get; init; }

    [JsonPropertyName("com.google.android.googlequicksearchbox_0_post_time")]
    public double? Com_google_android_googlequicksearchbox0PostTime { get; init; }

    [JsonPropertyName("com.snapchat.android_783118226_category")]
    public string? Com_snapchat_android783118226Category { get; init; }

    [JsonPropertyName("com.snapchat.android_783118226_channel_id")]
    public string? Com_snapchat_android783118226ChannelId { get; init; }

    [JsonPropertyName("com.snapchat.android_783118226_group_id")]
    public string? Com_snapchat_android783118226GroupId { get; init; }

    [JsonPropertyName("com.snapchat.android_783118226_is_clearable")]
    public bool? Com_snapchat_android783118226IsClearable { get; init; }

    [JsonPropertyName("com.snapchat.android_783118226_is_ongoing")]
    public bool? Com_snapchat_android783118226IsOngoing { get; init; }

    [JsonPropertyName("com.snapchat.android_783118226_post_time")]
    public double? Com_snapchat_android783118226PostTime { get; init; }

    [JsonPropertyName("system_notification_extras_com.snapchat.android_783118226")]
    public string? SystemNotificationExtrasCom_snapchat_android783118226 { get; init; }

    [JsonPropertyName("android.appInfo_com.google.android.gms_1000")]
    public string? Android_appInfoCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.bigText_com.google.android.gms_1000")]
    public string? Android_bigTextCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.infoText_com.google.android.gms_1000")]
    public string? Android_infoTextCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.largeIcon_com.google.android.gms_1000")]
    public string? Android_largeIconCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.google.android.gms_1000")]
    public bool? Android_progressIndeterminateCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.progressMax_com.google.android.gms_1000")]
    public double? Android_progressMaxCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.progress_com.google.android.gms_1000")]
    public double? Android_progressCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.reduced.images_com.google.android.gms_1000")]
    public bool? Android_reduced_imagesCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.google.android.gms_1000")]
    public string? Android_remoteInputHistoryCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.showChronometer_com.google.android.gms_1000")]
    public bool? Android_showChronometerCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.showWhen_com.google.android.gms_1000")]
    public bool? Android_showWhenCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.subText_com.google.android.gms_1000")]
    public string? Android_subTextCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.gms_1000")]
    public string? Android_support_v4_app_extra_COMPATTEMPLATECom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.template_com.google.android.gms_1000")]
    public string? Android_templateCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.text_com.google.android.gms_1000")]
    public string? Android_textCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.title.big_com.google.android.gms_1000")]
    public string? Android_title_bigCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("android.title_com.google.android.gms_1000")]
    public string? Android_titleCom_google_android_gms1000 { get; init; }

    [JsonPropertyName("com.google.android.gms_1000_category")]
    public string? Com_google_android_gms1000Category { get; init; }

    [JsonPropertyName("com.google.android.gms_1000_channel_id")]
    public string? Com_google_android_gms1000ChannelId { get; init; }

    [JsonPropertyName("com.google.android.gms_1000_group_id")]
    public string? Com_google_android_gms1000GroupId { get; init; }

    [JsonPropertyName("com.google.android.gms_1000_is_clearable")]
    public bool? Com_google_android_gms1000IsClearable { get; init; }

    [JsonPropertyName("com.google.android.gms_1000_is_ongoing")]
    public bool? Com_google_android_gms1000IsOngoing { get; init; }

    [JsonPropertyName("com.google.android.gms_1000_post_time")]
    public double? Com_google_android_gms1000PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_670125056")]
    public string? Android_appInfoCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_670125056")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_670125056")]
    public string? Android_infoTextCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_670125056")]
    public string? Android_largeIconCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_670125056")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_670125056")]
    public double? Android_progressMaxCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_670125056")]
    public double? Android_progressCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_670125056")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_670125056")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_670125056")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_670125056")]
    public bool? Android_showWhenCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_670125056")]
    public string? Android_subTextCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_670125056")]
    public string? Android_templateCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_670125056")]
    public string? Android_textCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_670125056")]
    public string? Android_titleCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_670125056")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_670125056_category")]
    public string? Com_zhiliaoapp_musically670125056Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_670125056_channel_id")]
    public string? Com_zhiliaoapp_musically670125056ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_670125056_group_id")]
    public string? Com_zhiliaoapp_musically670125056GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_670125056_is_clearable")]
    public bool? Com_zhiliaoapp_musically670125056IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_670125056_is_ongoing")]
    public bool? Com_zhiliaoapp_musically670125056IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_670125056_post_time")]
    public double? Com_zhiliaoapp_musically670125056PostTime { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_670125056")]
    public string? ConversationIdCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_670125056")]
    public string? PushLabelCom_zhiliaoapp_musically670125056 { get; init; }

    [JsonPropertyName("android.appInfo_com.spotify.music_2131430919")]
    public string? Android_appInfoCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.compactActions_com.spotify.music_2131430919")]
    public IReadOnlyList<double>? Android_compactActionsCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.conversationUnreadMessageCount_com.instagram.android_64278")]
    public double? Android_conversationUnreadMessageCountCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.hiddenConversationTitle_com.instagram.android_64278")]
    public string? Android_hiddenConversationTitleCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.infoText_com.spotify.music_2131430919")]
    public string? Android_infoTextCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.isGroupConversation_com.instagram.android_64278")]
    public bool? Android_isGroupConversationCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.largeIcon_com.spotify.music_2131430919")]
    public string? Android_largeIconCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.mediaSession_com.spotify.music_2131430919")]
    public string? Android_mediaSessionCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.messages_com.instagram.android_64278")]
    public IReadOnlyList<string>? Android_messagesCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.messagingStyleUser_com.instagram.android_64278")]
    public string? Android_messagingStyleUserCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.messagingUser_com.instagram.android_64278")]
    public string? Android_messagingUserCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.spotify.music_2131430919")]
    public bool? Android_progressIndeterminateCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.progressMax_com.spotify.music_2131430919")]
    public double? Android_progressMaxCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.progress_com.spotify.music_2131430919")]
    public double? Android_progressCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.reduced.images_com.spotify.music_2131430919")]
    public bool? Android_reduced_imagesCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.spotify.music_2131430919")]
    public string? Android_remoteInputHistoryCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.selfDisplayName_com.instagram.android_64278")]
    public string? Android_selfDisplayNameCom_instagram_android64278 { get; init; }

    [JsonPropertyName("android.showChronometer_com.spotify.music_2131430919")]
    public bool? Android_showChronometerCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.showWhen_com.spotify.music_2131430919")]
    public bool? Android_showWhenCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.subText_com.spotify.music_2131430919")]
    public string? Android_subTextCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.template_com.spotify.music_2131430919")]
    public string? Android_templateCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.text_com.spotify.music_2131430919")]
    public string? Android_textCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("android.title_com.spotify.music_2131430919")]
    public string? Android_titleCom_spotify_music2131430919 { get; init; }

    [JsonPropertyName("com.spotify.music_2131430919_category")]
    public string? Com_spotify_music2131430919Category { get; init; }

    [JsonPropertyName("com.spotify.music_2131430919_channel_id")]
    public string? Com_spotify_music2131430919ChannelId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430919_group_id")]
    public string? Com_spotify_music2131430919GroupId { get; init; }

    [JsonPropertyName("com.spotify.music_2131430919_is_clearable")]
    public bool? Com_spotify_music2131430919IsClearable { get; init; }

    [JsonPropertyName("com.spotify.music_2131430919_is_ongoing")]
    public bool? Com_spotify_music2131430919IsOngoing { get; init; }

    [JsonPropertyName("com.spotify.music_2131430919_post_time")]
    public double? Com_spotify_music2131430919PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.google.android.gm_0")]
    public string? Android_appInfoCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.appInfo_com.google.android.gm_118837585")]
    public string? Android_appInfoCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.bigText_com.google.android.gm_0")]
    public string? Android_bigTextCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.bigText_com.google.android.gm_118837585")]
    public string? Android_bigTextCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.infoText_com.google.android.gm_0")]
    public string? Android_infoTextCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.infoText_com.google.android.gm_118837585")]
    public string? Android_infoTextCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.largeIcon_com.google.android.gm_0")]
    public string? Android_largeIconCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.largeIcon_com.google.android.gm_118837585")]
    public string? Android_largeIconCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.people.list_com.google.android.gm_0")]
    public IReadOnlyList<string>? Android_people_listCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.people.list_com.google.android.gm_118837585")]
    public IReadOnlyList<string>? Android_people_listCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.google.android.gm_0")]
    public bool? Android_progressIndeterminateCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.google.android.gm_118837585")]
    public bool? Android_progressIndeterminateCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.progressMax_com.google.android.gm_0")]
    public double? Android_progressMaxCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.progressMax_com.google.android.gm_118837585")]
    public double? Android_progressMaxCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.progress_com.google.android.gm_0")]
    public double? Android_progressCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.progress_com.google.android.gm_118837585")]
    public double? Android_progressCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.reduced.images_com.google.android.gm_0")]
    public bool? Android_reduced_imagesCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.reduced.images_com.google.android.gm_118837585")]
    public bool? Android_reduced_imagesCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.google.android.gm_0")]
    public string? Android_remoteInputHistoryCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.google.android.gm_118837585")]
    public string? Android_remoteInputHistoryCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.showChronometer_com.google.android.gm_0")]
    public bool? Android_showChronometerCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.showChronometer_com.google.android.gm_118837585")]
    public bool? Android_showChronometerCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.showWhen_com.google.android.gm_0")]
    public bool? Android_showWhenCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.showWhen_com.google.android.gm_118837585")]
    public bool? Android_showWhenCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.subText_com.google.android.gm_0")]
    public string? Android_subTextCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.subText_com.google.android.gm_118837585")]
    public string? Android_subTextCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.gm_0")]
    public string? Android_support_v4_app_extra_COMPATTEMPLATECom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.gm_118837585")]
    public string? Android_support_v4_app_extra_COMPATTEMPLATECom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.template_com.google.android.gm_0")]
    public string? Android_templateCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.template_com.google.android.gm_118837585")]
    public string? Android_templateCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.text_com.google.android.gm_0")]
    public string? Android_textCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.text_com.google.android.gm_118837585")]
    public string? Android_textCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.title_com.google.android.gm_0")]
    public string? Android_titleCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.title_com.google.android.gm_118837585")]
    public string? Android_titleCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("android.wearable.EXTENSIONS_com.google.android.gm_0")]
    public string? Android_wearable_EXTENSIONSCom_google_android_gm0 { get; init; }

    [JsonPropertyName("android.wearable.EXTENSIONS_com.google.android.gm_118837585")]
    public string? Android_wearable_EXTENSIONSCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("argAndroidAccount_com.google.android.gm_0")]
    public string? ArgAndroidAccountCom_google_android_gm0 { get; init; }

    [JsonPropertyName("argAndroidAccount_com.google.android.gm_118837585")]
    public string? ArgAndroidAccountCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("argMustShow_com.google.android.gm_0")]
    public bool? ArgMustShowCom_google_android_gm0 { get; init; }

    [JsonPropertyName("argMustShow_com.google.android.gm_118837585")]
    public bool? ArgMustShowCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("argNotificationType_com.google.android.gm_0")]
    public string? ArgNotificationTypeCom_google_android_gm0 { get; init; }

    [JsonPropertyName("argNotificationType_com.google.android.gm_118837585")]
    public string? ArgNotificationTypeCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("argPriorityScore_com.google.android.gm_0")]
    public double? ArgPriorityScoreCom_google_android_gm0 { get; init; }

    [JsonPropertyName("argPriorityScore_com.google.android.gm_118837585")]
    public double? ArgPriorityScoreCom_google_android_gm118837585 { get; init; }

    [JsonPropertyName("com.google.android.gm_0_category")]
    public string? Com_google_android_gm0Category { get; init; }

    [JsonPropertyName("com.google.android.gm_0_channel_id")]
    public string? Com_google_android_gm0ChannelId { get; init; }

    [JsonPropertyName("com.google.android.gm_0_group_id")]
    public string? Com_google_android_gm0GroupId { get; init; }

    [JsonPropertyName("com.google.android.gm_0_is_clearable")]
    public bool? Com_google_android_gm0IsClearable { get; init; }

    [JsonPropertyName("com.google.android.gm_0_is_ongoing")]
    public bool? Com_google_android_gm0IsOngoing { get; init; }

    [JsonPropertyName("com.google.android.gm_0_post_time")]
    public double? Com_google_android_gm0PostTime { get; init; }

    [JsonPropertyName("com.google.android.gm_118837585_category")]
    public string? Com_google_android_gm118837585Category { get; init; }

    [JsonPropertyName("com.google.android.gm_118837585_channel_id")]
    public string? Com_google_android_gm118837585ChannelId { get; init; }

    [JsonPropertyName("com.google.android.gm_118837585_group_id")]
    public string? Com_google_android_gm118837585GroupId { get; init; }

    [JsonPropertyName("com.google.android.gm_118837585_is_clearable")]
    public bool? Com_google_android_gm118837585IsClearable { get; init; }

    [JsonPropertyName("com.google.android.gm_118837585_is_ongoing")]
    public bool? Com_google_android_gm118837585IsOngoing { get; init; }

    [JsonPropertyName("com.google.android.gm_118837585_post_time")]
    public double? Com_google_android_gm118837585PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.samsung.android.oneconnect_1543425871")]
    public string? Android_appInfoCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.appInfo_com.samsung.android.oneconnect_1543425918")]
    public string? Android_appInfoCom_samsung_android_oneconnect1543425918 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_42")]
    public string? Android_appInfoIo_homeassistant_companion_android42 { get; init; }

    [JsonPropertyName("android.bigText_com.samsung.android.oneconnect_1543425871")]
    public string? Android_bigTextCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.infoText_com.samsung.android.oneconnect_1543425871")]
    public string? Android_infoTextCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_42")]
    public string? Android_infoTextIo_homeassistant_companion_android42 { get; init; }

    [JsonPropertyName("android.largeIcon_com.samsung.android.oneconnect_1543425871")]
    public string? Android_largeIconCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_42")]
    public string? Android_largeIconIo_homeassistant_companion_android42 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.samsung.android.oneconnect_1543425871")]
    public bool? Android_progressIndeterminateCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_42")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android42 { get; init; }

    [JsonPropertyName("android.progressMax_com.samsung.android.oneconnect_1543425871")]
    public double? Android_progressMaxCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_42")]
    public double? Android_progressMaxIo_homeassistant_companion_android42 { get; init; }

    [JsonPropertyName("android.progress_com.samsung.android.oneconnect_1543425871")]
    public double? Android_progressCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_42")]
    public double? Android_progressIo_homeassistant_companion_android42 { get; init; }

    [JsonPropertyName("android.reduced.images_com.samsung.android.oneconnect_1543425871")]
    public bool? Android_reduced_imagesCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.reduced.images_com.samsung.android.oneconnect_1543425918")]
    public bool? Android_reduced_imagesCom_samsung_android_oneconnect1543425918 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_42")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android42 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.samsung.android.oneconnect_1543425871")]
    public string? Android_remoteInputHistoryCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_42")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android42 { get; init; }

    [JsonPropertyName("android.showChronometer_com.samsung.android.oneconnect_1543425871")]
    public bool? Android_showChronometerCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_42")]
    public bool? Android_showChronometerIo_homeassistant_companion_android42 { get; init; }

    [JsonPropertyName("android.showWhen_com.samsung.android.oneconnect_1543425871")]
    public bool? Android_showWhenCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_42")]
    public bool? Android_showWhenIo_homeassistant_companion_android42 { get; init; }

    [JsonPropertyName("android.subText_com.samsung.android.oneconnect_1543425871")]
    public string? Android_subTextCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_42")]
    public string? Android_subTextIo_homeassistant_companion_android42 { get; init; }

    [JsonPropertyName("android.template_com.samsung.android.oneconnect_1543425871")]
    public string? Android_templateCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.text_com.samsung.android.oneconnect_1543425871")]
    public string? Android_textCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_42")]
    public string? Android_textIo_homeassistant_companion_android42 { get; init; }

    [JsonPropertyName("android.title_com.samsung.android.oneconnect_1543425871")]
    public string? Android_titleCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_42")]
    public string? Android_titleIo_homeassistant_companion_android42 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.samsung.android.oneconnect_1543425871")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_1543425871_category")]
    public string? Com_samsung_android_oneconnect1543425871Category { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_1543425871_channel_id")]
    public string? Com_samsung_android_oneconnect1543425871ChannelId { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_1543425871_group_id")]
    public string? Com_samsung_android_oneconnect1543425871GroupId { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_1543425871_is_clearable")]
    public bool? Com_samsung_android_oneconnect1543425871IsClearable { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_1543425871_is_ongoing")]
    public bool? Com_samsung_android_oneconnect1543425871IsOngoing { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_1543425871_post_time")]
    public double? Com_samsung_android_oneconnect1543425871PostTime { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_1543425918_category")]
    public string? Com_samsung_android_oneconnect1543425918Category { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_1543425918_channel_id")]
    public string? Com_samsung_android_oneconnect1543425918ChannelId { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_1543425918_group_id")]
    public string? Com_samsung_android_oneconnect1543425918GroupId { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_1543425918_is_clearable")]
    public bool? Com_samsung_android_oneconnect1543425918IsClearable { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_1543425918_is_ongoing")]
    public bool? Com_samsung_android_oneconnect1543425918IsOngoing { get; init; }

    [JsonPropertyName("com.samsung.android.oneconnect_1543425918_post_time")]
    public double? Com_samsung_android_oneconnect1543425918PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_42_category")]
    public string? Io_homeassistant_companion_android42Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_42_channel_id")]
    public string? Io_homeassistant_companion_android42ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_42_group_id")]
    public string? Io_homeassistant_companion_android42GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_42_is_clearable")]
    public bool? Io_homeassistant_companion_android42IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_42_is_ongoing")]
    public bool? Io_homeassistant_companion_android42IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_42_post_time")]
    public double? Io_homeassistant_companion_android42PostTime { get; init; }

    [JsonPropertyName("push_message_com.samsung.android.oneconnect_1543425871")]
    public IReadOnlyList<double>? PushMessageCom_samsung_android_oneconnect1543425871 { get; init; }

    [JsonPropertyName("android.appInfo_com.irobot.home_1600681760")]
    public string? Android_appInfoCom_irobot_home1600681760 { get; init; }

    [JsonPropertyName("android.appInfo_com.irobot.home_341419351")]
    public string? Android_appInfoCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.appInfo_com.samsung.android.app.routines_1")]
    public string? Android_appInfoCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.appInfo_com.samsung.android.app.routines_1000")]
    public string? Android_appInfoCom_samsung_android_app_routines1000 { get; init; }

    [JsonPropertyName("android.appInfo_com.scee.psxandroid_1780303419")]
    public string? Android_appInfoCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.appInfo_com.snapchat.android_-452772083")]
    public string? Android_appInfoCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.appInfo_com.snapchat.android_1354429551")]
    public string? Android_appInfoCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.appInfo_com.snapchat.android_926165001")]
    public string? Android_appInfoCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.appInfo_com.supercell.clashofclans_-1187907014")]
    public string? Android_appInfoCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_1130794875")]
    public string? Android_appInfoCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_1144989407")]
    public string? Android_appInfoCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_1774875172")]
    public string? Android_appInfoCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_35553")]
    public string? Android_appInfoCom_zhiliaoapp_musically35553 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_474079576")]
    public string? Android_appInfoCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("android.bigText_com.irobot.home_341419351")]
    public string? Android_bigTextCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.bigText_com.samsung.android.app.routines_1")]
    public string? Android_bigTextCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.bigText_com.scee.psxandroid_1780303419")]
    public string? Android_bigTextCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.bigText_com.snapchat.android_-452772083")]
    public string? Android_bigTextCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.bigText_com.snapchat.android_1354429551")]
    public string? Android_bigTextCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.bigText_com.snapchat.android_926165001")]
    public string? Android_bigTextCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.bigText_com.supercell.clashofclans_-1187907014")]
    public string? Android_bigTextCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.chronometerCountDown_com.scee.psxandroid_1780303419")]
    public bool? Android_chronometerCountDownCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.colorized_com.scee.psxandroid_1780303419")]
    public bool? Android_colorizedCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_1130794875")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_1144989407")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_1774875172")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_474079576")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("android.conversationUnreadMessageCount_com.snapchat.android_-452772083")]
    public double? Android_conversationUnreadMessageCountCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.conversationUnreadMessageCount_com.snapchat.android_1354429551")]
    public double? Android_conversationUnreadMessageCountCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.conversationUnreadMessageCount_com.snapchat.android_926165001")]
    public double? Android_conversationUnreadMessageCountCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.infoText_com.irobot.home_1600681760")]
    public string? Android_infoTextCom_irobot_home1600681760 { get; init; }

    [JsonPropertyName("android.infoText_com.irobot.home_341419351")]
    public string? Android_infoTextCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.infoText_com.samsung.android.app.routines_1")]
    public string? Android_infoTextCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.infoText_com.samsung.android.app.routines_1000")]
    public string? Android_infoTextCom_samsung_android_app_routines1000 { get; init; }

    [JsonPropertyName("android.infoText_com.scee.psxandroid_1780303419")]
    public string? Android_infoTextCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.infoText_com.snapchat.android_-452772083")]
    public string? Android_infoTextCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.infoText_com.snapchat.android_1354429551")]
    public string? Android_infoTextCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.infoText_com.snapchat.android_926165001")]
    public string? Android_infoTextCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.infoText_com.supercell.clashofclans_-1187907014")]
    public string? Android_infoTextCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_1130794875")]
    public string? Android_infoTextCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_1144989407")]
    public string? Android_infoTextCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_1774875172")]
    public string? Android_infoTextCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_35553")]
    public string? Android_infoTextCom_zhiliaoapp_musically35553 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_474079576")]
    public string? Android_infoTextCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("android.isGroupConversation_com.snapchat.android_-452772083")]
    public bool? Android_isGroupConversationCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.isGroupConversation_com.snapchat.android_1354429551")]
    public bool? Android_isGroupConversationCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.isGroupConversation_com.snapchat.android_926165001")]
    public bool? Android_isGroupConversationCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.largeIcon_com.irobot.home_1600681760")]
    public string? Android_largeIconCom_irobot_home1600681760 { get; init; }

    [JsonPropertyName("android.largeIcon_com.irobot.home_341419351")]
    public string? Android_largeIconCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.largeIcon_com.samsung.android.app.routines_1")]
    public string? Android_largeIconCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.largeIcon_com.samsung.android.app.routines_1000")]
    public string? Android_largeIconCom_samsung_android_app_routines1000 { get; init; }

    [JsonPropertyName("android.largeIcon_com.scee.psxandroid_1780303419")]
    public string? Android_largeIconCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.largeIcon_com.snapchat.android_-452772083")]
    public string? Android_largeIconCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.largeIcon_com.snapchat.android_1354429551")]
    public string? Android_largeIconCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.largeIcon_com.snapchat.android_926165001")]
    public string? Android_largeIconCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.largeIcon_com.supercell.clashofclans_-1187907014")]
    public string? Android_largeIconCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_1130794875")]
    public string? Android_largeIconCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_1144989407")]
    public string? Android_largeIconCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_1774875172")]
    public string? Android_largeIconCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_35553")]
    public string? Android_largeIconCom_zhiliaoapp_musically35553 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_474079576")]
    public string? Android_largeIconCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("android.messages_com.snapchat.android_-452772083")]
    public IReadOnlyList<string>? Android_messagesCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.messages_com.snapchat.android_1354429551")]
    public IReadOnlyList<string>? Android_messagesCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.messages_com.snapchat.android_926165001")]
    public IReadOnlyList<string>? Android_messagesCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.messagingUser_com.snapchat.android_-452772083")]
    public string? Android_messagingUserCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.messagingUser_com.snapchat.android_1354429551")]
    public string? Android_messagingUserCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.messagingUser_com.snapchat.android_926165001")]
    public string? Android_messagingUserCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.people.list_com.snapchat.android_-452772083")]
    public IReadOnlyList<string>? Android_people_listCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.people.list_com.snapchat.android_1354429551")]
    public IReadOnlyList<string>? Android_people_listCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.people.list_com.snapchat.android_926165001")]
    public IReadOnlyList<string>? Android_people_listCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.irobot.home_1600681760")]
    public bool? Android_progressIndeterminateCom_irobot_home1600681760 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.irobot.home_341419351")]
    public bool? Android_progressIndeterminateCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.samsung.android.app.routines_1")]
    public bool? Android_progressIndeterminateCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.samsung.android.app.routines_1000")]
    public bool? Android_progressIndeterminateCom_samsung_android_app_routines1000 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.scee.psxandroid_1780303419")]
    public bool? Android_progressIndeterminateCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.snapchat.android_-452772083")]
    public bool? Android_progressIndeterminateCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.snapchat.android_1354429551")]
    public bool? Android_progressIndeterminateCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.snapchat.android_926165001")]
    public bool? Android_progressIndeterminateCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.supercell.clashofclans_-1187907014")]
    public bool? Android_progressIndeterminateCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_1130794875")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_1144989407")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_1774875172")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_35553")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically35553 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_474079576")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("android.progressMax_com.irobot.home_1600681760")]
    public double? Android_progressMaxCom_irobot_home1600681760 { get; init; }

    [JsonPropertyName("android.progressMax_com.irobot.home_341419351")]
    public double? Android_progressMaxCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.progressMax_com.samsung.android.app.routines_1")]
    public double? Android_progressMaxCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.progressMax_com.samsung.android.app.routines_1000")]
    public double? Android_progressMaxCom_samsung_android_app_routines1000 { get; init; }

    [JsonPropertyName("android.progressMax_com.scee.psxandroid_1780303419")]
    public double? Android_progressMaxCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.progressMax_com.snapchat.android_-452772083")]
    public double? Android_progressMaxCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.progressMax_com.snapchat.android_1354429551")]
    public double? Android_progressMaxCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.progressMax_com.snapchat.android_926165001")]
    public double? Android_progressMaxCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.progressMax_com.supercell.clashofclans_-1187907014")]
    public double? Android_progressMaxCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_1130794875")]
    public double? Android_progressMaxCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_1144989407")]
    public double? Android_progressMaxCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_1774875172")]
    public double? Android_progressMaxCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_35553")]
    public double? Android_progressMaxCom_zhiliaoapp_musically35553 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_474079576")]
    public double? Android_progressMaxCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("android.progress_com.irobot.home_1600681760")]
    public double? Android_progressCom_irobot_home1600681760 { get; init; }

    [JsonPropertyName("android.progress_com.irobot.home_341419351")]
    public double? Android_progressCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.progress_com.samsung.android.app.routines_1")]
    public double? Android_progressCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.progress_com.samsung.android.app.routines_1000")]
    public double? Android_progressCom_samsung_android_app_routines1000 { get; init; }

    [JsonPropertyName("android.progress_com.scee.psxandroid_1780303419")]
    public double? Android_progressCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.progress_com.snapchat.android_-452772083")]
    public double? Android_progressCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.progress_com.snapchat.android_1354429551")]
    public double? Android_progressCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.progress_com.snapchat.android_926165001")]
    public double? Android_progressCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.progress_com.supercell.clashofclans_-1187907014")]
    public double? Android_progressCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_1130794875")]
    public double? Android_progressCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_1144989407")]
    public double? Android_progressCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_1774875172")]
    public double? Android_progressCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_35553")]
    public double? Android_progressCom_zhiliaoapp_musically35553 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_474079576")]
    public double? Android_progressCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("android.reduced.images_com.irobot.home_1600681760")]
    public bool? Android_reduced_imagesCom_irobot_home1600681760 { get; init; }

    [JsonPropertyName("android.reduced.images_com.irobot.home_341419351")]
    public bool? Android_reduced_imagesCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.reduced.images_com.samsung.android.app.routines_1")]
    public bool? Android_reduced_imagesCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.reduced.images_com.samsung.android.app.routines_1000")]
    public bool? Android_reduced_imagesCom_samsung_android_app_routines1000 { get; init; }

    [JsonPropertyName("android.reduced.images_com.scee.psxandroid_1780303419")]
    public bool? Android_reduced_imagesCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.reduced.images_com.snapchat.android_-452772083")]
    public bool? Android_reduced_imagesCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.reduced.images_com.snapchat.android_1354429551")]
    public bool? Android_reduced_imagesCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.reduced.images_com.snapchat.android_926165001")]
    public bool? Android_reduced_imagesCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.reduced.images_com.supercell.clashofclans_-1187907014")]
    public bool? Android_reduced_imagesCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_1130794875")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_1144989407")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_1774875172")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_35553")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically35553 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_474079576")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.irobot.home_1600681760")]
    public string? Android_remoteInputHistoryCom_irobot_home1600681760 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.irobot.home_341419351")]
    public string? Android_remoteInputHistoryCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.samsung.android.app.routines_1")]
    public string? Android_remoteInputHistoryCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.samsung.android.app.routines_1000")]
    public string? Android_remoteInputHistoryCom_samsung_android_app_routines1000 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.scee.psxandroid_1780303419")]
    public string? Android_remoteInputHistoryCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.snapchat.android_-452772083")]
    public string? Android_remoteInputHistoryCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.snapchat.android_1354429551")]
    public string? Android_remoteInputHistoryCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.snapchat.android_926165001")]
    public string? Android_remoteInputHistoryCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.supercell.clashofclans_-1187907014")]
    public string? Android_remoteInputHistoryCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_1130794875")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_1144989407")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_1774875172")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_35553")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically35553 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_474079576")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("android.selfDisplayName_com.snapchat.android_-452772083")]
    public string? Android_selfDisplayNameCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.selfDisplayName_com.snapchat.android_1354429551")]
    public string? Android_selfDisplayNameCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.selfDisplayName_com.snapchat.android_926165001")]
    public string? Android_selfDisplayNameCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.showChronometer_com.irobot.home_1600681760")]
    public bool? Android_showChronometerCom_irobot_home1600681760 { get; init; }

    [JsonPropertyName("android.showChronometer_com.irobot.home_341419351")]
    public bool? Android_showChronometerCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.showChronometer_com.samsung.android.app.routines_1")]
    public bool? Android_showChronometerCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.showChronometer_com.samsung.android.app.routines_1000")]
    public bool? Android_showChronometerCom_samsung_android_app_routines1000 { get; init; }

    [JsonPropertyName("android.showChronometer_com.scee.psxandroid_1780303419")]
    public bool? Android_showChronometerCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.showChronometer_com.snapchat.android_-452772083")]
    public bool? Android_showChronometerCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.showChronometer_com.snapchat.android_1354429551")]
    public bool? Android_showChronometerCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.showChronometer_com.snapchat.android_926165001")]
    public bool? Android_showChronometerCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.showChronometer_com.supercell.clashofclans_-1187907014")]
    public bool? Android_showChronometerCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_1130794875")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_1144989407")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_1774875172")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_35553")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically35553 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_474079576")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("android.showWhen_com.irobot.home_1600681760")]
    public bool? Android_showWhenCom_irobot_home1600681760 { get; init; }

    [JsonPropertyName("android.showWhen_com.irobot.home_341419351")]
    public bool? Android_showWhenCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.showWhen_com.samsung.android.app.routines_1")]
    public bool? Android_showWhenCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.showWhen_com.samsung.android.app.routines_1000")]
    public bool? Android_showWhenCom_samsung_android_app_routines1000 { get; init; }

    [JsonPropertyName("android.showWhen_com.scee.psxandroid_1780303419")]
    public bool? Android_showWhenCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.showWhen_com.snapchat.android_-452772083")]
    public bool? Android_showWhenCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.showWhen_com.snapchat.android_1354429551")]
    public bool? Android_showWhenCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.showWhen_com.snapchat.android_926165001")]
    public bool? Android_showWhenCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.showWhen_com.supercell.clashofclans_-1187907014")]
    public bool? Android_showWhenCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_1130794875")]
    public bool? Android_showWhenCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_1144989407")]
    public bool? Android_showWhenCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_1774875172")]
    public bool? Android_showWhenCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_35553")]
    public bool? Android_showWhenCom_zhiliaoapp_musically35553 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_474079576")]
    public bool? Android_showWhenCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("android.subText_com.irobot.home_1600681760")]
    public string? Android_subTextCom_irobot_home1600681760 { get; init; }

    [JsonPropertyName("android.subText_com.irobot.home_341419351")]
    public string? Android_subTextCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.subText_com.samsung.android.app.routines_1")]
    public string? Android_subTextCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.subText_com.samsung.android.app.routines_1000")]
    public string? Android_subTextCom_samsung_android_app_routines1000 { get; init; }

    [JsonPropertyName("android.subText_com.scee.psxandroid_1780303419")]
    public string? Android_subTextCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.subText_com.snapchat.android_-452772083")]
    public string? Android_subTextCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.subText_com.snapchat.android_1354429551")]
    public string? Android_subTextCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.subText_com.snapchat.android_926165001")]
    public string? Android_subTextCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.subText_com.supercell.clashofclans_-1187907014")]
    public string? Android_subTextCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_1130794875")]
    public string? Android_subTextCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_1144989407")]
    public string? Android_subTextCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_1774875172")]
    public string? Android_subTextCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_35553")]
    public string? Android_subTextCom_zhiliaoapp_musically35553 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_474079576")]
    public string? Android_subTextCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("android.summaryText_com.microsoft.office.outlook_1")]
    public string? Android_summaryTextCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.summaryText_com.scee.psxandroid_1780303419")]
    public string? Android_summaryTextCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.template_com.irobot.home_341419351")]
    public string? Android_templateCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.template_com.samsung.android.app.routines_1")]
    public string? Android_templateCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.template_com.scee.psxandroid_1780303419")]
    public string? Android_templateCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.template_com.snapchat.android_-452772083")]
    public string? Android_templateCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.template_com.snapchat.android_1354429551")]
    public string? Android_templateCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.template_com.snapchat.android_926165001")]
    public string? Android_templateCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.template_com.supercell.clashofclans_-1187907014")]
    public string? Android_templateCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_1130794875")]
    public string? Android_templateCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_1144989407")]
    public string? Android_templateCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_1774875172")]
    public string? Android_templateCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_474079576")]
    public string? Android_templateCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("android.textLines_com.microsoft.office.outlook_1")]
    public IReadOnlyList<string>? Android_textLinesCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.text_com.irobot.home_1600681760")]
    public string? Android_textCom_irobot_home1600681760 { get; init; }

    [JsonPropertyName("android.text_com.irobot.home_341419351")]
    public string? Android_textCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.text_com.samsung.android.app.routines_1")]
    public string? Android_textCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.text_com.samsung.android.app.routines_1000")]
    public string? Android_textCom_samsung_android_app_routines1000 { get; init; }

    [JsonPropertyName("android.text_com.scee.psxandroid_1780303419")]
    public string? Android_textCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.text_com.snapchat.android_-452772083")]
    public string? Android_textCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.text_com.snapchat.android_1354429551")]
    public string? Android_textCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.text_com.snapchat.android_926165001")]
    public string? Android_textCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.text_com.supercell.clashofclans_-1187907014")]
    public string? Android_textCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_1130794875")]
    public string? Android_textCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_1144989407")]
    public string? Android_textCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_1774875172")]
    public string? Android_textCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_35553")]
    public string? Android_textCom_zhiliaoapp_musically35553 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_474079576")]
    public string? Android_textCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("android.title.big_com.samsung.android.app.routines_1")]
    public string? Android_title_bigCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.title.big_com.scee.psxandroid_1780303419")]
    public string? Android_title_bigCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.title_com.irobot.home_1600681760")]
    public string? Android_titleCom_irobot_home1600681760 { get; init; }

    [JsonPropertyName("android.title_com.irobot.home_341419351")]
    public string? Android_titleCom_irobot_home341419351 { get; init; }

    [JsonPropertyName("android.title_com.samsung.android.app.routines_1")]
    public string? Android_titleCom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("android.title_com.samsung.android.app.routines_1000")]
    public string? Android_titleCom_samsung_android_app_routines1000 { get; init; }

    [JsonPropertyName("android.title_com.scee.psxandroid_1780303419")]
    public string? Android_titleCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("android.title_com.snapchat.android_-452772083")]
    public string? Android_titleCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("android.title_com.snapchat.android_1354429551")]
    public string? Android_titleCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("android.title_com.snapchat.android_926165001")]
    public string? Android_titleCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.title_com.supercell.clashofclans_-1187907014")]
    public string? Android_titleCom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_1130794875")]
    public string? Android_titleCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_1144989407")]
    public string? Android_titleCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_1774875172")]
    public string? Android_titleCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_35553")]
    public string? Android_titleCom_zhiliaoapp_musically35553 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_474079576")]
    public string? Android_titleCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.irobot.home_341419351")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_irobot_home341419351 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.samsung.android.app.routines_1")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_samsung_android_app_routines1 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.scee.psxandroid_1780303419")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.snapchat.android_-452772083")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.snapchat.android_1354429551")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.snapchat.android_926165001")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.supercell.clashofclans_-1187907014")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_supercell_clashofclans1187907014 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_1130794875")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_1144989407")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_1774875172")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_474079576")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("com.irobot.home_1600681760_category")]
    public string? Com_irobot_home1600681760Category { get; init; }

    [JsonPropertyName("com.irobot.home_1600681760_channel_id")]
    public string? Com_irobot_home1600681760ChannelId { get; init; }

    [JsonPropertyName("com.irobot.home_1600681760_group_id")]
    public string? Com_irobot_home1600681760GroupId { get; init; }

    [JsonPropertyName("com.irobot.home_1600681760_is_clearable")]
    public bool? Com_irobot_home1600681760IsClearable { get; init; }

    [JsonPropertyName("com.irobot.home_1600681760_is_ongoing")]
    public bool? Com_irobot_home1600681760IsOngoing { get; init; }

    [JsonPropertyName("com.irobot.home_1600681760_post_time")]
    public double? Com_irobot_home1600681760PostTime { get; init; }

    [JsonPropertyName("com.irobot.home_341419351_category")]
    public string? Com_irobot_home341419351Category { get; init; }

    [JsonPropertyName("com.irobot.home_341419351_channel_id")]
    public string? Com_irobot_home341419351ChannelId { get; init; }

    [JsonPropertyName("com.irobot.home_341419351_group_id")]
    public string? Com_irobot_home341419351GroupId { get; init; }

    [JsonPropertyName("com.irobot.home_341419351_is_clearable")]
    public bool? Com_irobot_home341419351IsClearable { get; init; }

    [JsonPropertyName("com.irobot.home_341419351_is_ongoing")]
    public bool? Com_irobot_home341419351IsOngoing { get; init; }

    [JsonPropertyName("com.irobot.home_341419351_post_time")]
    public double? Com_irobot_home341419351PostTime { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_1000_category")]
    public string? Com_samsung_android_app_routines1000Category { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_1000_channel_id")]
    public string? Com_samsung_android_app_routines1000ChannelId { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_1000_group_id")]
    public string? Com_samsung_android_app_routines1000GroupId { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_1000_is_clearable")]
    public bool? Com_samsung_android_app_routines1000IsClearable { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_1000_is_ongoing")]
    public bool? Com_samsung_android_app_routines1000IsOngoing { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_1000_post_time")]
    public double? Com_samsung_android_app_routines1000PostTime { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_1_category")]
    public string? Com_samsung_android_app_routines1Category { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_1_channel_id")]
    public string? Com_samsung_android_app_routines1ChannelId { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_1_group_id")]
    public string? Com_samsung_android_app_routines1GroupId { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_1_is_clearable")]
    public bool? Com_samsung_android_app_routines1IsClearable { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_1_is_ongoing")]
    public bool? Com_samsung_android_app_routines1IsOngoing { get; init; }

    [JsonPropertyName("com.samsung.android.app.routines_1_post_time")]
    public double? Com_samsung_android_app_routines1PostTime { get; init; }

    [JsonPropertyName("com.scee.psxandroid_1780303419_category")]
    public string? Com_scee_psxandroid1780303419Category { get; init; }

    [JsonPropertyName("com.scee.psxandroid_1780303419_channel_id")]
    public string? Com_scee_psxandroid1780303419ChannelId { get; init; }

    [JsonPropertyName("com.scee.psxandroid_1780303419_group_id")]
    public string? Com_scee_psxandroid1780303419GroupId { get; init; }

    [JsonPropertyName("com.scee.psxandroid_1780303419_is_clearable")]
    public bool? Com_scee_psxandroid1780303419IsClearable { get; init; }

    [JsonPropertyName("com.scee.psxandroid_1780303419_is_ongoing")]
    public bool? Com_scee_psxandroid1780303419IsOngoing { get; init; }

    [JsonPropertyName("com.scee.psxandroid_1780303419_post_time")]
    public double? Com_scee_psxandroid1780303419PostTime { get; init; }

    [JsonPropertyName("com.snapchat.android_-452772083_category")]
    public string? Com_snapchat_android452772083Category { get; init; }

    [JsonPropertyName("com.snapchat.android_-452772083_channel_id")]
    public string? Com_snapchat_android452772083ChannelId { get; init; }

    [JsonPropertyName("com.snapchat.android_-452772083_group_id")]
    public string? Com_snapchat_android452772083GroupId { get; init; }

    [JsonPropertyName("com.snapchat.android_-452772083_is_clearable")]
    public bool? Com_snapchat_android452772083IsClearable { get; init; }

    [JsonPropertyName("com.snapchat.android_-452772083_is_ongoing")]
    public bool? Com_snapchat_android452772083IsOngoing { get; init; }

    [JsonPropertyName("com.snapchat.android_-452772083_post_time")]
    public double? Com_snapchat_android452772083PostTime { get; init; }

    [JsonPropertyName("com.snapchat.android_1354429551_category")]
    public string? Com_snapchat_android1354429551Category { get; init; }

    [JsonPropertyName("com.snapchat.android_1354429551_channel_id")]
    public string? Com_snapchat_android1354429551ChannelId { get; init; }

    [JsonPropertyName("com.snapchat.android_1354429551_group_id")]
    public string? Com_snapchat_android1354429551GroupId { get; init; }

    [JsonPropertyName("com.snapchat.android_1354429551_is_clearable")]
    public bool? Com_snapchat_android1354429551IsClearable { get; init; }

    [JsonPropertyName("com.snapchat.android_1354429551_is_ongoing")]
    public bool? Com_snapchat_android1354429551IsOngoing { get; init; }

    [JsonPropertyName("com.snapchat.android_1354429551_post_time")]
    public double? Com_snapchat_android1354429551PostTime { get; init; }

    [JsonPropertyName("com.snapchat.android_926165001_category")]
    public string? Com_snapchat_android926165001Category { get; init; }

    [JsonPropertyName("com.snapchat.android_926165001_channel_id")]
    public string? Com_snapchat_android926165001ChannelId { get; init; }

    [JsonPropertyName("com.snapchat.android_926165001_group_id")]
    public string? Com_snapchat_android926165001GroupId { get; init; }

    [JsonPropertyName("com.snapchat.android_926165001_is_clearable")]
    public bool? Com_snapchat_android926165001IsClearable { get; init; }

    [JsonPropertyName("com.snapchat.android_926165001_is_ongoing")]
    public bool? Com_snapchat_android926165001IsOngoing { get; init; }

    [JsonPropertyName("com.snapchat.android_926165001_post_time")]
    public double? Com_snapchat_android926165001PostTime { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1187907014_category")]
    public string? Com_supercell_clashofclans1187907014Category { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1187907014_channel_id")]
    public string? Com_supercell_clashofclans1187907014ChannelId { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1187907014_group_id")]
    public string? Com_supercell_clashofclans1187907014GroupId { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1187907014_is_clearable")]
    public bool? Com_supercell_clashofclans1187907014IsClearable { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1187907014_is_ongoing")]
    public bool? Com_supercell_clashofclans1187907014IsOngoing { get; init; }

    [JsonPropertyName("com.supercell.clashofclans_-1187907014_post_time")]
    public double? Com_supercell_clashofclans1187907014PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1130794875_category")]
    public string? Com_zhiliaoapp_musically1130794875Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1130794875_channel_id")]
    public string? Com_zhiliaoapp_musically1130794875ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1130794875_group_id")]
    public string? Com_zhiliaoapp_musically1130794875GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1130794875_is_clearable")]
    public bool? Com_zhiliaoapp_musically1130794875IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1130794875_is_ongoing")]
    public bool? Com_zhiliaoapp_musically1130794875IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1130794875_post_time")]
    public double? Com_zhiliaoapp_musically1130794875PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1144989407_category")]
    public string? Com_zhiliaoapp_musically1144989407Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1144989407_channel_id")]
    public string? Com_zhiliaoapp_musically1144989407ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1144989407_group_id")]
    public string? Com_zhiliaoapp_musically1144989407GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1144989407_is_clearable")]
    public bool? Com_zhiliaoapp_musically1144989407IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1144989407_is_ongoing")]
    public bool? Com_zhiliaoapp_musically1144989407IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1144989407_post_time")]
    public double? Com_zhiliaoapp_musically1144989407PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1774875172_category")]
    public string? Com_zhiliaoapp_musically1774875172Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1774875172_channel_id")]
    public string? Com_zhiliaoapp_musically1774875172ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1774875172_group_id")]
    public string? Com_zhiliaoapp_musically1774875172GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1774875172_is_clearable")]
    public bool? Com_zhiliaoapp_musically1774875172IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1774875172_is_ongoing")]
    public bool? Com_zhiliaoapp_musically1774875172IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1774875172_post_time")]
    public double? Com_zhiliaoapp_musically1774875172PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_35553_category")]
    public string? Com_zhiliaoapp_musically35553Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_35553_channel_id")]
    public string? Com_zhiliaoapp_musically35553ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_35553_group_id")]
    public string? Com_zhiliaoapp_musically35553GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_35553_is_clearable")]
    public bool? Com_zhiliaoapp_musically35553IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_35553_is_ongoing")]
    public bool? Com_zhiliaoapp_musically35553IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_35553_post_time")]
    public double? Com_zhiliaoapp_musically35553PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_474079576_category")]
    public string? Com_zhiliaoapp_musically474079576Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_474079576_channel_id")]
    public string? Com_zhiliaoapp_musically474079576ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_474079576_group_id")]
    public string? Com_zhiliaoapp_musically474079576GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_474079576_is_clearable")]
    public bool? Com_zhiliaoapp_musically474079576IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_474079576_is_ongoing")]
    public bool? Com_zhiliaoapp_musically474079576IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_474079576_post_time")]
    public double? Com_zhiliaoapp_musically474079576PostTime { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_1130794875")]
    public string? ConversationIdCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_1144989407")]
    public string? ConversationIdCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_1774875172")]
    public string? ConversationIdCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_474079576")]
    public string? ConversationIdCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("isRemoteNotification_com.scee.psxandroid_1780303419")]
    public string? IsRemoteNotificationCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("notifee.notification_com.scee.psxandroid_1780303419")]
    public string? Notifee_notificationCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("payload_com.scee.psxandroid_1780303419")]
    public string? PayloadCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("payloads_com.scee.psxandroid_1780303419")]
    public string? PayloadsCom_scee_psxandroid1780303419 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_1130794875")]
    public string? PushLabelCom_zhiliaoapp_musically1130794875 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_1144989407")]
    public string? PushLabelCom_zhiliaoapp_musically1144989407 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_1774875172")]
    public string? PushLabelCom_zhiliaoapp_musically1774875172 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_474079576")]
    public string? PushLabelCom_zhiliaoapp_musically474079576 { get; init; }

    [JsonPropertyName("system_notification_extras_com.snapchat.android_-452772083")]
    public string? SystemNotificationExtrasCom_snapchat_android452772083 { get; init; }

    [JsonPropertyName("system_notification_extras_com.snapchat.android_1354429551")]
    public string? SystemNotificationExtrasCom_snapchat_android1354429551 { get; init; }

    [JsonPropertyName("system_notification_extras_com.snapchat.android_926165001")]
    public string? SystemNotificationExtrasCom_snapchat_android926165001 { get; init; }

    [JsonPropertyName("android.appInfo_com.facebook.work_0")]
    public string? Android_appInfoCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.appInfo_com.zhiliaoapp.musically_1950846791")]
    public string? Android_appInfoCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("android.bigText_com.facebook.work_0")]
    public string? Android_bigTextCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.contains.customView_com.zhiliaoapp.musically_1950846791")]
    public bool? Android_contains_customViewCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("android.infoText_com.facebook.work_0")]
    public string? Android_infoTextCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.infoText_com.zhiliaoapp.musically_1950846791")]
    public string? Android_infoTextCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("android.largeIcon_com.facebook.work_0")]
    public string? Android_largeIconCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.largeIcon_com.zhiliaoapp.musically_1950846791")]
    public string? Android_largeIconCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.facebook.work_0")]
    public bool? Android_progressIndeterminateCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.zhiliaoapp.musically_1950846791")]
    public bool? Android_progressIndeterminateCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("android.progressMax_com.facebook.work_0")]
    public double? Android_progressMaxCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.progressMax_com.zhiliaoapp.musically_1950846791")]
    public double? Android_progressMaxCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("android.progress_com.facebook.work_0")]
    public double? Android_progressCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.progress_com.zhiliaoapp.musically_1950846791")]
    public double? Android_progressCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("android.reduced.images_com.facebook.work_0")]
    public bool? Android_reduced_imagesCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.reduced.images_com.zhiliaoapp.musically_1950846791")]
    public bool? Android_reduced_imagesCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.facebook.work_0")]
    public string? Android_remoteInputHistoryCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.zhiliaoapp.musically_1950846791")]
    public string? Android_remoteInputHistoryCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("android.showChronometer_com.facebook.work_0")]
    public bool? Android_showChronometerCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.showChronometer_com.zhiliaoapp.musically_1950846791")]
    public bool? Android_showChronometerCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("android.showWhen_com.facebook.work_0")]
    public bool? Android_showWhenCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.showWhen_com.zhiliaoapp.musically_1950846791")]
    public bool? Android_showWhenCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("android.subText_com.facebook.work_0")]
    public string? Android_subTextCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.subText_com.zhiliaoapp.musically_1950846791")]
    public string? Android_subTextCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("android.template_com.facebook.work_0")]
    public string? Android_templateCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.template_com.zhiliaoapp.musically_1950846791")]
    public string? Android_templateCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("android.text_com.facebook.work_0")]
    public string? Android_textCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.text_com.zhiliaoapp.musically_1950846791")]
    public string? Android_textCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("android.title_com.facebook.work_0")]
    public string? Android_titleCom_facebook_work0 { get; init; }

    [JsonPropertyName("android.title_com.zhiliaoapp.musically_1950846791")]
    public string? Android_titleCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.facebook.work_0")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_facebook_work0 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.zhiliaoapp.musically_1950846791")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("com.facebook.work_0_category")]
    public string? Com_facebook_work0Category { get; init; }

    [JsonPropertyName("com.facebook.work_0_channel_id")]
    public string? Com_facebook_work0ChannelId { get; init; }

    [JsonPropertyName("com.facebook.work_0_group_id")]
    public string? Com_facebook_work0GroupId { get; init; }

    [JsonPropertyName("com.facebook.work_0_is_clearable")]
    public bool? Com_facebook_work0IsClearable { get; init; }

    [JsonPropertyName("com.facebook.work_0_is_ongoing")]
    public bool? Com_facebook_work0IsOngoing { get; init; }

    [JsonPropertyName("com.facebook.work_0_post_time")]
    public double? Com_facebook_work0PostTime { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1950846791_category")]
    public string? Com_zhiliaoapp_musically1950846791Category { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1950846791_channel_id")]
    public string? Com_zhiliaoapp_musically1950846791ChannelId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1950846791_group_id")]
    public string? Com_zhiliaoapp_musically1950846791GroupId { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1950846791_is_clearable")]
    public bool? Com_zhiliaoapp_musically1950846791IsClearable { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1950846791_is_ongoing")]
    public bool? Com_zhiliaoapp_musically1950846791IsOngoing { get; init; }

    [JsonPropertyName("com.zhiliaoapp.musically_1950846791_post_time")]
    public double? Com_zhiliaoapp_musically1950846791PostTime { get; init; }

    [JsonPropertyName("conversation_id_com.zhiliaoapp.musically_1950846791")]
    public string? ConversationIdCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("extra_pnid_com.facebook.work_0")]
    public string? ExtraPnidCom_facebook_work0 { get; init; }

    [JsonPropertyName("extras_ndid_com.facebook.work_0")]
    public string? ExtrasNdidCom_facebook_work0 { get; init; }

    [JsonPropertyName("extras_notification_type_com.facebook.work_0")]
    public string? ExtrasNotificationTypeCom_facebook_work0 { get; init; }

    [JsonPropertyName("push_label_com.zhiliaoapp.musically_1950846791")]
    public string? PushLabelCom_zhiliaoapp_musically1950846791 { get; init; }

    [JsonPropertyName("sort_key_score_com.facebook.work_0")]
    public double? SortKeyScoreCom_facebook_work0 { get; init; }

    [JsonPropertyName("price_per_kwh")]
    public double? PricePerKwh { get; init; }

    [JsonPropertyName("last_placed")]
    public string? LastPlaced { get; init; }

    [JsonPropertyName("garbage_type")]
    public string? GarbageType { get; init; }

    [JsonPropertyName("devices")]
    public IReadOnlyList<object>? Devices { get; init; }
}

public partial record SunEntity : Entity<SunEntity, EntityState<SunAttributes>, SunAttributes>, ISunEntityCore
{
    public SunEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SunEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SunAttributes
{
    [JsonPropertyName("next_dawn")]
    public string? NextDawn { get; init; }

    [JsonPropertyName("next_dusk")]
    public string? NextDusk { get; init; }

    [JsonPropertyName("next_midnight")]
    public string? NextMidnight { get; init; }

    [JsonPropertyName("next_noon")]
    public string? NextNoon { get; init; }

    [JsonPropertyName("next_rising")]
    public string? NextRising { get; init; }

    [JsonPropertyName("next_setting")]
    public string? NextSetting { get; init; }

    [JsonPropertyName("elevation")]
    public double? Elevation { get; init; }

    [JsonPropertyName("azimuth")]
    public double? Azimuth { get; init; }

    [JsonPropertyName("rising")]
    public bool? Rising { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record SwitchEntity : Entity<SwitchEntity, EntityState<SwitchAttributes>, SwitchAttributes>, ISwitchEntityCore
{
    public SwitchEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SwitchEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SwitchAttributes
{
    [JsonPropertyName("raw_state")]
    public bool? RawState { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("last_run_success")]
    public bool? LastRunSuccess { get; init; }

    [JsonPropertyName("switch_mode")]
    public bool? SwitchMode { get; init; }

    [JsonPropertyName("assumed_state")]
    public bool? AssumedState { get; init; }

    [JsonPropertyName("api_type")]
    public string? ApiType { get; init; }

    [JsonPropertyName("api_id")]
    public object? ApiId { get; init; }

    [JsonPropertyName("aimesh_sync")]
    public bool? AimeshSync { get; init; }

    [JsonPropertyName("auth_method")]
    public string? AuthMethod { get; init; }

    [JsonPropertyName("bw_limit")]
    public bool? BwLimit { get; init; }

    [JsonPropertyName("bw_limit_download")]
    public double? BwLimitDownload { get; init; }

    [JsonPropertyName("bw_limit_upload")]
    public double? BwLimitUpload { get; init; }

    [JsonPropertyName("expire")]
    public double? Expire { get; init; }

    [JsonPropertyName("expire_in")]
    public double? ExpireIn { get; init; }

    [JsonPropertyName("hidden")]
    public bool? Hidden { get; init; }

    [JsonPropertyName("lan_access")]
    public bool? LanAccess { get; init; }

    [JsonPropertyName("maclist")]
    public object? Maclist { get; init; }

    [JsonPropertyName("macmode")]
    public string? Macmode { get; init; }

    [JsonPropertyName("ssid")]
    public string? Ssid { get; init; }

    [JsonPropertyName("wpa_encryption")]
    public string? WpaEncryption { get; init; }

    [JsonPropertyName("list")]
    public IReadOnlyList<object>? List { get; init; }

    [JsonPropertyName("auth_read")]
    public double? AuthRead { get; init; }

    [JsonPropertyName("error_code")]
    public double? ErrorCode { get; init; }

    [JsonPropertyName("local_ip")]
    public string? LocalIp { get; init; }

    [JsonPropertyName("post_compress_bytes")]
    public double? PostCompressBytes { get; init; }

    [JsonPropertyName("post_decompress_bytes")]
    public double? PostDecompressBytes { get; init; }

    [JsonPropertyName("pre_compress_bytes")]
    public double? PreCompressBytes { get; init; }

    [JsonPropertyName("pre_decompress_bytes")]
    public double? PreDecompressBytes { get; init; }

    [JsonPropertyName("public_ip")]
    public string? PublicIp { get; init; }

    [JsonPropertyName("server_auth")]
    public string? ServerAuth { get; init; }

    [JsonPropertyName("server_ip")]
    public string? ServerIp { get; init; }

    [JsonPropertyName("server_port")]
    public double? ServerPort { get; init; }

    [JsonPropertyName("status")]
    public string? Status { get; init; }

    [JsonPropertyName("tcp_udp_read_bytes")]
    public double? TcpUdpReadBytes { get; init; }

    [JsonPropertyName("tcp_udp_write_bytes")]
    public double? TcpUdpWriteBytes { get; init; }

    [JsonPropertyName("tun_tap_read_bytes")]
    public double? TunTapReadBytes { get; init; }

    [JsonPropertyName("tun_tap_write_bytes")]
    public double? TunTapWriteBytes { get; init; }

    [JsonPropertyName("update_time")]
    public string? UpdateTime { get; init; }

    [JsonPropertyName("channel")]
    public object? Channel { get; init; }

    [JsonPropertyName("channel_bandwidth")]
    public string? ChannelBandwidth { get; init; }

    [JsonPropertyName("chanspec")]
    public string? Chanspec { get; init; }

    [JsonPropertyName("country_code")]
    public string? CountryCode { get; init; }

    [JsonPropertyName("gmode_check")]
    public object? GmodeCheck { get; init; }

    [JsonPropertyName("group_key_rotation")]
    public string? GroupKeyRotation { get; init; }

    [JsonPropertyName("maclist_x")]
    public object? MaclistX { get; init; }

    [JsonPropertyName("mbo_enable")]
    public string? MboEnable { get; init; }

    [JsonPropertyName("mfp")]
    public string? Mfp { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("radius_ipaddr")]
    public object? RadiusIpaddr { get; init; }

    [JsonPropertyName("radius_key")]
    public object? RadiusKey { get; init; }

    [JsonPropertyName("radius_port")]
    public object? RadiusPort { get; init; }

    [JsonPropertyName("xbox_optimized")]
    public object? XboxOptimized { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("error")]
    public double? Error { get; init; }

    [JsonPropertyName("address")]
    public string? Address { get; init; }

    [JsonPropertyName("clients")]
    public object? Clients { get; init; }

    [JsonPropertyName("dns")]
    public bool? Dns { get; init; }

    [JsonPropertyName("keep_alive")]
    public double? KeepAlive { get; init; }

    [JsonPropertyName("nat6")]
    public bool? Nat6 { get; init; }

    [JsonPropertyName("port")]
    public double? Port { get; init; }

    [JsonPropertyName("psk_state")]
    public bool? PskState { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }
}

public partial record UpdateEntity : Entity<UpdateEntity, EntityState<UpdateAttributes>, UpdateAttributes>, IUpdateEntityCore
{
    public UpdateEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public UpdateEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record UpdateAttributes
{
    [JsonPropertyName("auto_update")]
    public bool? AutoUpdate { get; init; }

    [JsonPropertyName("installed_version")]
    public string? InstalledVersion { get; init; }

    [JsonPropertyName("in_progress")]
    public bool? InProgress { get; init; }

    [JsonPropertyName("latest_version")]
    public string? LatestVersion { get; init; }

    [JsonPropertyName("release_summary")]
    public string? ReleaseSummary { get; init; }

    [JsonPropertyName("release_url")]
    public string? ReleaseUrl { get; init; }

    [JsonPropertyName("skipped_version")]
    public object? SkippedVersion { get; init; }

    [JsonPropertyName("title")]
    public string? Title { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("available")]
    public string? Available { get; init; }

    [JsonPropertyName("current")]
    public string? Current { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("release_note")]
    public string? ReleaseNote { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("latest")]
    public string? Latest { get; init; }

    [JsonPropertyName("display_precision")]
    public double? DisplayPrecision { get; init; }

    [JsonPropertyName("update_percentage")]
    public object? UpdatePercentage { get; init; }
}

public partial record WeatherEntity : Entity<WeatherEntity, EntityState<WeatherAttributes>, WeatherAttributes>, IWeatherEntityCore
{
    public WeatherEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public WeatherEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record WeatherAttributes
{
    [JsonPropertyName("temperature")]
    public double? Temperature { get; init; }

    [JsonPropertyName("temperature_unit")]
    public string? TemperatureUnit { get; init; }

    [JsonPropertyName("humidity")]
    public double? Humidity { get; init; }

    [JsonPropertyName("pressure")]
    public double? Pressure { get; init; }

    [JsonPropertyName("pressure_unit")]
    public string? PressureUnit { get; init; }

    [JsonPropertyName("wind_bearing")]
    public double? WindBearing { get; init; }

    [JsonPropertyName("wind_speed")]
    public double? WindSpeed { get; init; }

    [JsonPropertyName("wind_speed_unit")]
    public string? WindSpeedUnit { get; init; }

    [JsonPropertyName("visibility")]
    public double? Visibility { get; init; }

    [JsonPropertyName("visibility_unit")]
    public string? VisibilityUnit { get; init; }

    [JsonPropertyName("precipitation_unit")]
    public string? PrecipitationUnit { get; init; }

    [JsonPropertyName("forecast")]
    public IReadOnlyList<object>? Forecast { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("cloud_coverage")]
    public double? CloudCoverage { get; init; }

    [JsonPropertyName("apparent_temperature")]
    public double? ApparentTemperature { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("dew_point")]
    public double? DewPoint { get; init; }

    [JsonPropertyName("uv_index")]
    public double? UvIndex { get; init; }

    [JsonPropertyName("wind_gust_speed")]
    public double? WindGustSpeed { get; init; }
}

public partial record ZoneEntity : Entity<ZoneEntity, EntityState<ZoneAttributes>, ZoneAttributes>, IZoneEntityCore
{
    public ZoneEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ZoneEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ZoneAttributes
{
    [JsonPropertyName("latitude")]
    public double? Latitude { get; init; }

    [JsonPropertyName("longitude")]
    public double? Longitude { get; init; }

    [JsonPropertyName("radius")]
    public double? Radius { get; init; }

    [JsonPropertyName("passive")]
    public bool? Passive { get; init; }

    [JsonPropertyName("persons")]
    public IReadOnlyList<string>? Persons { get; init; }

    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record SceneEntity : Entity<SceneEntity, EntityState<SceneAttributes>, SceneAttributes>, ISceneEntityCore
{
    public SceneEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SceneEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SceneAttributes
{
    [JsonPropertyName("entity_id")]
    public IReadOnlyList<string>? EntityId { get; init; }

    [JsonPropertyName("id")]
    public string? Id { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("group_name")]
    public string? GroupName { get; init; }

    [JsonPropertyName("group_type")]
    public string? GroupType { get; init; }

    [JsonPropertyName("name")]
    public string? Name { get; init; }

    [JsonPropertyName("speed")]
    public double? Speed { get; init; }

    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }

    [JsonPropertyName("is_dynamic")]
    public bool? IsDynamic { get; init; }
}

public partial record CoverEntity : Entity<CoverEntity, EntityState<CoverAttributes>, CoverAttributes>, ICoverEntityCore
{
    public CoverEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public CoverEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record CoverAttributes
{
    [JsonPropertyName("current_position")]
    public double? CurrentPosition { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }
}

public partial record SelectEntity : Entity<SelectEntity, EntityState<SelectAttributes>, SelectAttributes>, ISelectEntityCore
{
    public SelectEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SelectEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SelectAttributes
{
    [JsonPropertyName("options")]
    public IReadOnlyList<string>? Options { get; init; }

    [JsonPropertyName("raw_state")]
    public object? RawState { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record VacuumEntity : Entity<VacuumEntity, EntityState<VacuumAttributes>, VacuumAttributes>, IVacuumEntityCore
{
    public VacuumEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public VacuumEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record VacuumAttributes
{
    [JsonPropertyName("battery_level")]
    public double? BatteryLevel { get; init; }

    [JsonPropertyName("battery_icon")]
    public string? BatteryIcon { get; init; }

    [JsonPropertyName("software_version")]
    public string? SoftwareVersion { get; init; }

    [JsonPropertyName("status")]
    public string? Status { get; init; }

    [JsonPropertyName("bin_present")]
    public bool? BinPresent { get; init; }

    [JsonPropertyName("bin_full")]
    public bool? BinFull { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("error")]
    public string? Error { get; init; }

    [JsonPropertyName("error_code")]
    public double? ErrorCode { get; init; }

    [JsonPropertyName("cleaning_time")]
    public double? CleaningTime { get; init; }

    [JsonPropertyName("cleaned_area")]
    public double? CleanedArea { get; init; }
}

public partial record RemoteEntity : Entity<RemoteEntity, EntityState<RemoteAttributes>, RemoteAttributes>, IRemoteEntityCore
{
    public RemoteEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public RemoteEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record RemoteAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }
}

public partial record TtsEntity : Entity<TtsEntity, EntityState<TtsAttributes>, TtsAttributes>
{
    public TtsEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public TtsEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record TtsAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record EventEntity : Entity<EventEntity, EntityState<EventAttributes>, EventAttributes>
{
    public EventEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public EventEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record EventAttributes
{
    [JsonPropertyName("event_types")]
    public IReadOnlyList<string>? EventTypes { get; init; }

    [JsonPropertyName("event_type")]
    public string? EventType { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("domain")]
    public string? Domain { get; init; }

    [JsonPropertyName("issue_id")]
    public string? IssueId { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("backup_stage")]
    public object? BackupStage { get; init; }

    [JsonPropertyName("failed_reason")]
    public string? FailedReason { get; init; }
}

public partial record CounterEntity : Entity<CounterEntity, EntityState<CounterAttributes>, CounterAttributes>
{
    public CounterEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public CounterEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record CounterAttributes
{
    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("initial")]
    public double? Initial { get; init; }

    [JsonPropertyName("step")]
    public double? Step { get; init; }

    [JsonPropertyName("maximum")]
    public double? Maximum { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("minimum")]
    public double? Minimum { get; init; }
}

public partial record TodoEntity : Entity<TodoEntity, EntityState<TodoAttributes>, TodoAttributes>
{
    public TodoEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public TodoEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record TodoAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }
}

public partial record SttEntity : Entity<SttEntity, EntityState<SttAttributes>, SttAttributes>
{
    public SttEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SttEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SttAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record ConversationEntity : Entity<ConversationEntity, EntityState<ConversationAttributes>, ConversationAttributes>
{
    public ConversationEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ConversationEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ConversationAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record TagEntity : Entity<TagEntity, EntityState<TagAttributes>, TagAttributes>
{
    public TagEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public TagEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record TagAttributes
{
    [JsonPropertyName("tag_id")]
    public string? TagId { get; init; }

    [JsonPropertyName("last_scanned_by_device_id")]
    public object? LastScannedByDeviceId { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record TextEntity : Entity<TextEntity, EntityState<TextAttributes>, TextAttributes>
{
    public TextEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public TextEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record TextAttributes
{
    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("min")]
    public double? Min { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("pattern")]
    public object? Pattern { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record AiTaskEntity : Entity<AiTaskEntity, EntityState<AiTaskAttributes>, AiTaskAttributes>
{
    public AiTaskEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public AiTaskEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record AiTaskAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record ImageEntity : Entity<ImageEntity, EntityState<ImageAttributes>, ImageAttributes>
{
    public ImageEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ImageEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ImageAttributes
{
    [JsonPropertyName("access_token")]
    public string? AccessToken { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record NotifyEntity : Entity<NotifyEntity, EntityState<NotifyAttributes>, NotifyAttributes>
{
    public NotifyEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public NotifyEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record NotifyAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public interface IServices
{
    AiTaskServices AiTask { get; }

    AlarmControlPanelServices AlarmControlPanel { get; }

    AsusrouterServices Asusrouter { get; }

    AutomationServices Automation { get; }

    BackupServices Backup { get; }

    BatteryNotesServices BatteryNotes { get; }

    BlueprintServices Blueprint { get; }

    ButtonServices Button { get; }

    CalendarServices Calendar { get; }

    CameraServices Camera { get; }

    CastServices Cast { get; }

    ChimeTtsServices ChimeTts { get; }

    ClimateServices Climate { get; }

    CloudServices Cloud { get; }

    ConversationServices Conversation { get; }

    CounterServices Counter { get; }

    CoverServices Cover { get; }

    DeviceTrackerServices DeviceTracker { get; }

    EnergyzeroServices Energyzero { get; }

    EpexSpotServices EpexSpot { get; }

    FanServices Fan { get; }

    FfmpegServices Ffmpeg { get; }

    FileServices File { get; }

    FrontendServices Frontend { get; }

    GoogleAssistantServices GoogleAssistant { get; }

    GoogleGenerativeAiConversationServices GoogleGenerativeAiConversation { get; }

    GoogleHomeServices GoogleHome { get; }

    GroupServices Group { get; }

    HassioServices Hassio { get; }

    HomeassistantServices Homeassistant { get; }

    HueServices Hue { get; }

    HuesyncboxServices Huesyncbox { get; }

    ImageServices Image { get; }

    InputBooleanServices InputBoolean { get; }

    InputButtonServices InputButton { get; }

    InputDatetimeServices InputDatetime { get; }

    InputNumberServices InputNumber { get; }

    InputSelectServices InputSelect { get; }

    InputTextServices InputText { get; }

    LightServices Light { get; }

    LocaltuyaServices Localtuya { get; }

    LockServices Lock { get; }

    LogbookServices Logbook { get; }

    LoggerServices Logger { get; }

    MailAndPackagesServices MailAndPackages { get; }

    MediaPlayerServices MediaPlayer { get; }

    MotionBlindsServices MotionBlinds { get; }

    MqttServices Mqtt { get; }

    NotifyServices Notify { get; }

    NumberServices Number { get; }

    OnedriveServices Onedrive { get; }

    OpenaiConversationServices OpenaiConversation { get; }

    PersistentNotificationServices PersistentNotification { get; }

    PersonServices Person { get; }

    PowercalcServices Powercalc { get; }

    RecorderServices Recorder { get; }

    RemoteServices Remote { get; }

    RepairsServices Repairs { get; }

    RetryServices Retry { get; }

    SceneServices Scene { get; }

    ScheduleServices Schedule { get; }

    ScriptServices Script { get; }

    SelectServices Select { get; }

    SirenServices Siren { get; }

    SpookServices Spook { get; }

    SpotcastServices Spotcast { get; }

    SwitchServices Switch { get; }

    SynologyDsmServices SynologyDsm { get; }

    SystemLogServices SystemLog { get; }

    TeamtrackerServices Teamtracker { get; }

    TemplateServices Template { get; }

    TextServices Text { get; }

    TimeServices Time { get; }

    TimerServices Timer { get; }

    TodoServices Todo { get; }

    TtsServices Tts { get; }

    UpdateServices Update { get; }

    UtilityMeterServices UtilityMeter { get; }

    VacuumServices Vacuum { get; }

    ValveServices Valve { get; }

    WakeOnLanServices WakeOnLan { get; }

    WatchmanServices Watchman { get; }

    WaterHeaterServices WaterHeater { get; }

    WeatherServices Weather { get; }

    ZhaServices Zha { get; }

    ZoneServices Zone { get; }
}

public partial class Services : IServices
{
    private readonly IHaContext _haContext;
    public Services(IHaContext haContext)
    {
        _haContext = haContext;
    }

    public AiTaskServices AiTask => new(_haContext);
    public AlarmControlPanelServices AlarmControlPanel => new(_haContext);
    public AsusrouterServices Asusrouter => new(_haContext);
    public AutomationServices Automation => new(_haContext);
    public BackupServices Backup => new(_haContext);
    public BatteryNotesServices BatteryNotes => new(_haContext);
    public BlueprintServices Blueprint => new(_haContext);
    public ButtonServices Button => new(_haContext);
    public CalendarServices Calendar => new(_haContext);
    public CameraServices Camera => new(_haContext);
    public CastServices Cast => new(_haContext);
    public ChimeTtsServices ChimeTts => new(_haContext);
    public ClimateServices Climate => new(_haContext);
    public CloudServices Cloud => new(_haContext);
    public ConversationServices Conversation => new(_haContext);
    public CounterServices Counter => new(_haContext);
    public CoverServices Cover => new(_haContext);
    public DeviceTrackerServices DeviceTracker => new(_haContext);
    public EnergyzeroServices Energyzero => new(_haContext);
    public EpexSpotServices EpexSpot => new(_haContext);
    public FanServices Fan => new(_haContext);
    public FfmpegServices Ffmpeg => new(_haContext);
    public FileServices File => new(_haContext);
    public FrontendServices Frontend => new(_haContext);
    public GoogleAssistantServices GoogleAssistant => new(_haContext);
    public GoogleGenerativeAiConversationServices GoogleGenerativeAiConversation => new(_haContext);
    public GoogleHomeServices GoogleHome => new(_haContext);
    public GroupServices Group => new(_haContext);
    public HassioServices Hassio => new(_haContext);
    public HomeassistantServices Homeassistant => new(_haContext);
    public HueServices Hue => new(_haContext);
    public HuesyncboxServices Huesyncbox => new(_haContext);
    public ImageServices Image => new(_haContext);
    public InputBooleanServices InputBoolean => new(_haContext);
    public InputButtonServices InputButton => new(_haContext);
    public InputDatetimeServices InputDatetime => new(_haContext);
    public InputNumberServices InputNumber => new(_haContext);
    public InputSelectServices InputSelect => new(_haContext);
    public InputTextServices InputText => new(_haContext);
    public LightServices Light => new(_haContext);
    public LocaltuyaServices Localtuya => new(_haContext);
    public LockServices Lock => new(_haContext);
    public LogbookServices Logbook => new(_haContext);
    public LoggerServices Logger => new(_haContext);
    public MailAndPackagesServices MailAndPackages => new(_haContext);
    public MediaPlayerServices MediaPlayer => new(_haContext);
    public MotionBlindsServices MotionBlinds => new(_haContext);
    public MqttServices Mqtt => new(_haContext);
    public NotifyServices Notify => new(_haContext);
    public NumberServices Number => new(_haContext);
    public OnedriveServices Onedrive => new(_haContext);
    public OpenaiConversationServices OpenaiConversation => new(_haContext);
    public PersistentNotificationServices PersistentNotification => new(_haContext);
    public PersonServices Person => new(_haContext);
    public PowercalcServices Powercalc => new(_haContext);
    public RecorderServices Recorder => new(_haContext);
    public RemoteServices Remote => new(_haContext);
    public RepairsServices Repairs => new(_haContext);
    public RetryServices Retry => new(_haContext);
    public SceneServices Scene => new(_haContext);
    public ScheduleServices Schedule => new(_haContext);
    public ScriptServices Script => new(_haContext);
    public SelectServices Select => new(_haContext);
    public SirenServices Siren => new(_haContext);
    public SpookServices Spook => new(_haContext);
    public SpotcastServices Spotcast => new(_haContext);
    public SwitchServices Switch => new(_haContext);
    public SynologyDsmServices SynologyDsm => new(_haContext);
    public SystemLogServices SystemLog => new(_haContext);
    public TeamtrackerServices Teamtracker => new(_haContext);
    public TemplateServices Template => new(_haContext);
    public TextServices Text => new(_haContext);
    public TimeServices Time => new(_haContext);
    public TimerServices Timer => new(_haContext);
    public TodoServices Todo => new(_haContext);
    public TtsServices Tts => new(_haContext);
    public UpdateServices Update => new(_haContext);
    public UtilityMeterServices UtilityMeter => new(_haContext);
    public VacuumServices Vacuum => new(_haContext);
    public ValveServices Valve => new(_haContext);
    public WakeOnLanServices WakeOnLan => new(_haContext);
    public WatchmanServices Watchman => new(_haContext);
    public WaterHeaterServices WaterHeater => new(_haContext);
    public WeatherServices Weather => new(_haContext);
    public ZhaServices Zha => new(_haContext);
    public ZoneServices Zone => new(_haContext);
}

public partial class AiTaskServices
{
    private readonly IHaContext _haContext;
    public AiTaskServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Uses AI to run a task that generates data.</summary>
    public void GenerateData(AiTaskGenerateDataParameters data)
    {
        _haContext.CallService("ai_task", "generate_data", null, data);
    }

    ///<summary>Uses AI to run a task that generates data.</summary>
    ///<param name="taskName">Name of the task. eg: home summary</param>
    ///<param name="instructions">Instructions on what needs to be done. eg: Generate a funny notification that the garage door was left open</param>
    ///<param name="entityId">Entity ID to run the task on. If not provided, the preferred entity will be used.</param>
    ///<param name="structure">When set, the AI Task will output fields with this in structure. The structure is a dictionary where the keys are the field names and the values contain a &apos;description&apos;, a &apos;selector&apos;, and an optional &apos;required&apos; field. eg: { &quot;name&quot;: { &quot;selector&quot;: { &quot;text&quot;: }, &quot;description&quot;: &quot;Name of the user&quot;, &quot;required&quot;: &quot;True&quot; } } }, &quot;age&quot;: { &quot;selector&quot;: { &quot;number&quot;: }, &quot;description&quot;: &quot;Age of the user&quot; } }</param>
    ///<param name="attachments">List of files to attach for multi-modal AI analysis.</param>
    public void GenerateData(string taskName, string instructions, string? entityId = null, object? structure = null, object? attachments = null)
    {
        _haContext.CallService("ai_task", "generate_data", null, new AiTaskGenerateDataParameters { TaskName = taskName, Instructions = instructions, EntityId = entityId, Structure = structure, Attachments = attachments });
    }

    ///<summary>Uses AI to run a task that generates data.</summary>
    public Task<JsonElement?> GenerateDataAsync(AiTaskGenerateDataParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("ai_task", "generate_data", null, data);
    }

    ///<summary>Uses AI to run a task that generates data.</summary>
    ///<param name="taskName">Name of the task. eg: home summary</param>
    ///<param name="instructions">Instructions on what needs to be done. eg: Generate a funny notification that the garage door was left open</param>
    ///<param name="entityId">Entity ID to run the task on. If not provided, the preferred entity will be used.</param>
    ///<param name="structure">When set, the AI Task will output fields with this in structure. The structure is a dictionary where the keys are the field names and the values contain a &apos;description&apos;, a &apos;selector&apos;, and an optional &apos;required&apos; field. eg: { &quot;name&quot;: { &quot;selector&quot;: { &quot;text&quot;: }, &quot;description&quot;: &quot;Name of the user&quot;, &quot;required&quot;: &quot;True&quot; } } }, &quot;age&quot;: { &quot;selector&quot;: { &quot;number&quot;: }, &quot;description&quot;: &quot;Age of the user&quot; } }</param>
    ///<param name="attachments">List of files to attach for multi-modal AI analysis.</param>
    public Task<JsonElement?> GenerateDataAsync(string taskName, string instructions, string? entityId = null, object? structure = null, object? attachments = null)
    {
        return _haContext.CallServiceWithResponseAsync("ai_task", "generate_data", null, new AiTaskGenerateDataParameters { TaskName = taskName, Instructions = instructions, EntityId = entityId, Structure = structure, Attachments = attachments });
    }

    ///<summary>Uses AI to generate image.</summary>
    public void GenerateImage(AiTaskGenerateImageParameters data)
    {
        _haContext.CallService("ai_task", "generate_image", null, data);
    }

    ///<summary>Uses AI to generate image.</summary>
    ///<param name="taskName">Name of the task. eg: picture of a dog</param>
    ///<param name="instructions">Instructions that explains the image to be generated. eg: Generate a high quality square image of a dog on transparent background</param>
    ///<param name="entityId">Entity ID to run the task on.</param>
    ///<param name="attachments">List of files to attach for using as references.</param>
    public void GenerateImage(string taskName, string instructions, string entityId, object? attachments = null)
    {
        _haContext.CallService("ai_task", "generate_image", null, new AiTaskGenerateImageParameters { TaskName = taskName, Instructions = instructions, EntityId = entityId, Attachments = attachments });
    }

    ///<summary>Uses AI to generate image.</summary>
    public Task<JsonElement?> GenerateImageAsync(AiTaskGenerateImageParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("ai_task", "generate_image", null, data);
    }

    ///<summary>Uses AI to generate image.</summary>
    ///<param name="taskName">Name of the task. eg: picture of a dog</param>
    ///<param name="instructions">Instructions that explains the image to be generated. eg: Generate a high quality square image of a dog on transparent background</param>
    ///<param name="entityId">Entity ID to run the task on.</param>
    ///<param name="attachments">List of files to attach for using as references.</param>
    public Task<JsonElement?> GenerateImageAsync(string taskName, string instructions, string entityId, object? attachments = null)
    {
        return _haContext.CallServiceWithResponseAsync("ai_task", "generate_image", null, new AiTaskGenerateImageParameters { TaskName = taskName, Instructions = instructions, EntityId = entityId, Attachments = attachments });
    }
}

public partial record AiTaskGenerateDataParameters
{
    ///<summary>Name of the task. eg: home summary</summary>
    [JsonPropertyName("task_name")]
    public string? TaskName { get; init; }

    ///<summary>Instructions on what needs to be done. eg: Generate a funny notification that the garage door was left open</summary>
    [JsonPropertyName("instructions")]
    public string? Instructions { get; init; }

    ///<summary>Entity ID to run the task on. If not provided, the preferred entity will be used.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>When set, the AI Task will output fields with this in structure. The structure is a dictionary where the keys are the field names and the values contain a &apos;description&apos;, a &apos;selector&apos;, and an optional &apos;required&apos; field. eg: { &quot;name&quot;: { &quot;selector&quot;: { &quot;text&quot;: }, &quot;description&quot;: &quot;Name of the user&quot;, &quot;required&quot;: &quot;True&quot; } } }, &quot;age&quot;: { &quot;selector&quot;: { &quot;number&quot;: }, &quot;description&quot;: &quot;Age of the user&quot; } }</summary>
    [JsonPropertyName("structure")]
    public object? Structure { get; init; }

    ///<summary>List of files to attach for multi-modal AI analysis.</summary>
    [JsonPropertyName("attachments")]
    public object? Attachments { get; init; }
}

public partial record AiTaskGenerateImageParameters
{
    ///<summary>Name of the task. eg: picture of a dog</summary>
    [JsonPropertyName("task_name")]
    public string? TaskName { get; init; }

    ///<summary>Instructions that explains the image to be generated. eg: Generate a high quality square image of a dog on transparent background</summary>
    [JsonPropertyName("instructions")]
    public string? Instructions { get; init; }

    ///<summary>Entity ID to run the task on.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>List of files to attach for using as references.</summary>
    [JsonPropertyName("attachments")]
    public object? Attachments { get; init; }
}

public partial class AlarmControlPanelServices
{
    private readonly IHaContext _haContext;
    public AlarmControlPanelServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Arms the alarm in the away mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmAway(ServiceTarget target, AlarmControlPanelAlarmArmAwayParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_away", target, data);
    }

    ///<summary>Arms the alarm in the away mode.</summary>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmAway(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_away", target, new AlarmControlPanelAlarmArmAwayParameters { Code = code });
    }

    ///<summary>Arms the alarm while allowing to bypass a custom area.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmCustomBypass(ServiceTarget target, AlarmControlPanelAlarmArmCustomBypassParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_custom_bypass", target, data);
    }

    ///<summary>Arms the alarm while allowing to bypass a custom area.</summary>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmCustomBypass(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_custom_bypass", target, new AlarmControlPanelAlarmArmCustomBypassParameters { Code = code });
    }

    ///<summary>Arms the alarm in the home mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmHome(ServiceTarget target, AlarmControlPanelAlarmArmHomeParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_home", target, data);
    }

    ///<summary>Arms the alarm in the home mode.</summary>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmHome(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_home", target, new AlarmControlPanelAlarmArmHomeParameters { Code = code });
    }

    ///<summary>Arms the alarm in the night mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmNight(ServiceTarget target, AlarmControlPanelAlarmArmNightParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_night", target, data);
    }

    ///<summary>Arms the alarm in the night mode.</summary>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmNight(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_night", target, new AlarmControlPanelAlarmArmNightParameters { Code = code });
    }

    ///<summary>Arms the alarm in the vacation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmVacation(ServiceTarget target, AlarmControlPanelAlarmArmVacationParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_vacation", target, data);
    }

    ///<summary>Arms the alarm in the vacation mode.</summary>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmVacation(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_vacation", target, new AlarmControlPanelAlarmArmVacationParameters { Code = code });
    }

    ///<summary>Disarms the alarm.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmDisarm(ServiceTarget target, AlarmControlPanelAlarmDisarmParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_disarm", target, data);
    }

    ///<summary>Disarms the alarm.</summary>
    ///<param name="code">Code to disarm the alarm. eg: 1234</param>
    public void AlarmDisarm(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_disarm", target, new AlarmControlPanelAlarmDisarmParameters { Code = code });
    }

    ///<summary>Triggers the alarm manually.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmTrigger(ServiceTarget target, AlarmControlPanelAlarmTriggerParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_trigger", target, data);
    }

    ///<summary>Triggers the alarm manually.</summary>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmTrigger(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_trigger", target, new AlarmControlPanelAlarmTriggerParameters { Code = code });
    }
}

public partial record AlarmControlPanelAlarmArmAwayParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmArmCustomBypassParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmArmHomeParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmArmNightParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmArmVacationParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmDisarmParameters
{
    ///<summary>Code to disarm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmTriggerParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial class AsusrouterServices
{
    private readonly IHaContext _haContext;
    public AsusrouterServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Change device internet access using parental control feature of the router. Please, refer to the documentation for the additional possible parameters</summary>
    public void DeviceInternetAccess(AsusrouterDeviceInternetAccessParameters data)
    {
        _haContext.CallService("asusrouter", "device_internet_access", null, data);
    }

    ///<summary>Change device internet access using parental control feature of the router. Please, refer to the documentation for the additional possible parameters</summary>
    ///<param name="entities">Select device(s) to change internet access settings</param>
    ///<param name="state">Set the state for the device(s)</param>
    public void DeviceInternetAccess(object state, IEnumerable<string>? entities = null)
    {
        _haContext.CallService("asusrouter", "device_internet_access", null, new AsusrouterDeviceInternetAccessParameters { Entities = entities, State = state });
    }

    ///<summary>Remove device trackers from the device registry. Please, keep in mind, when run, the service will remove selected trackers from watching and will allow you to remove the entities manually.</summary>
    public void RemoveTrackers(AsusrouterRemoveTrackersParameters data)
    {
        _haContext.CallService("asusrouter", "remove_trackers", null, data);
    }

    ///<summary>Remove device trackers from the device registry. Please, keep in mind, when run, the service will remove selected trackers from watching and will allow you to remove the entities manually.</summary>
    ///<param name="entities">Select device(s) to remove from the device registry</param>
    public void RemoveTrackers(IEnumerable<string> entities)
    {
        _haContext.CallService("asusrouter", "remove_trackers", null, new AsusrouterRemoveTrackersParameters { Entities = entities });
    }
}

public partial record AsusrouterDeviceInternetAccessParameters
{
    ///<summary>Select device(s) to change internet access settings</summary>
    [JsonPropertyName("entities")]
    public IEnumerable<string>? Entities { get; init; }

    ///<summary>Set the state for the device(s)</summary>
    [JsonPropertyName("state")]
    public object? State { get; init; }
}

public partial record AsusrouterRemoveTrackersParameters
{
    ///<summary>Select device(s) to remove from the device registry</summary>
    [JsonPropertyName("entities")]
    public IEnumerable<string>? Entities { get; init; }
}

public partial class AutomationServices
{
    private readonly IHaContext _haContext;
    public AutomationServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads the automation configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("automation", "reload", null, data);
    }

    ///<summary>Toggles (enable / disable) an automation.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("automation", "toggle", target, data);
    }

    ///<summary>Triggers the actions of an automation.</summary>
    ///<param name="target">The target for this service call</param>
    public void Trigger(ServiceTarget target, AutomationTriggerParameters data)
    {
        _haContext.CallService("automation", "trigger", target, data);
    }

    ///<summary>Triggers the actions of an automation.</summary>
    ///<param name="skipCondition">Defines whether or not the conditions will be skipped.</param>
    public void Trigger(ServiceTarget target, bool? skipCondition = null)
    {
        _haContext.CallService("automation", "trigger", target, new AutomationTriggerParameters { SkipCondition = skipCondition });
    }

    ///<summary>Disables an automation.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, AutomationTurnOffParameters data)
    {
        _haContext.CallService("automation", "turn_off", target, data);
    }

    ///<summary>Disables an automation.</summary>
    ///<param name="stopActions">Stops currently running actions.</param>
    public void TurnOff(ServiceTarget target, bool? stopActions = null)
    {
        _haContext.CallService("automation", "turn_off", target, new AutomationTurnOffParameters { StopActions = stopActions });
    }

    ///<summary>Enables an automation.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("automation", "turn_on", target, data);
    }
}

public partial record AutomationTriggerParameters
{
    ///<summary>Defines whether or not the conditions will be skipped.</summary>
    [JsonPropertyName("skip_condition")]
    public bool? SkipCondition { get; init; }
}

public partial record AutomationTurnOffParameters
{
    ///<summary>Stops currently running actions.</summary>
    [JsonPropertyName("stop_actions")]
    public bool? StopActions { get; init; }
}

public partial class BackupServices
{
    private readonly IHaContext _haContext;
    public BackupServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Creates a new backup with automatic backup settings.</summary>
    public void CreateAutomatic(object? data = null)
    {
        _haContext.CallService("backup", "create_automatic", null, data);
    }
}

public partial class BatteryNotesServices
{
    private readonly IHaContext _haContext;
    public BatteryNotesServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Raise events for devices that haven&apos;t reported their battery level.</summary>
    public void CheckBatteryLastReported(BatteryNotesCheckBatteryLastReportedParameters data)
    {
        _haContext.CallService("battery_notes", "check_battery_last_reported", null, data);
    }

    ///<summary>Raise events for devices that haven&apos;t reported their battery level.</summary>
    ///<param name="daysLastReported">Number of days since a device last reported its battery level.</param>
    public void CheckBatteryLastReported(long daysLastReported)
    {
        _haContext.CallService("battery_notes", "check_battery_last_reported", null, new BatteryNotesCheckBatteryLastReportedParameters { DaysLastReported = daysLastReported });
    }

    ///<summary>Raise events for devices that have a low battery.</summary>
    public void CheckBatteryLow(object? data = null)
    {
        _haContext.CallService("battery_notes", "check_battery_low", null, data);
    }

    ///<summary>Set the battery last replaced.</summary>
    public void SetBatteryReplaced(BatteryNotesSetBatteryReplacedParameters data)
    {
        _haContext.CallService("battery_notes", "set_battery_replaced", null, data);
    }

    ///<summary>Set the battery last replaced.</summary>
    ///<param name="deviceId">Device that has had its battery replaced.</param>
    ///<param name="sourceEntityId">Entity that has had its battery replaced (only used for entity associated battery notes).</param>
    ///<param name="datetimeReplaced">Date replaced.</param>
    public void SetBatteryReplaced(string? deviceId = null, string? sourceEntityId = null, DateTime? datetimeReplaced = null)
    {
        _haContext.CallService("battery_notes", "set_battery_replaced", null, new BatteryNotesSetBatteryReplacedParameters { DeviceId = deviceId, SourceEntityId = sourceEntityId, DatetimeReplaced = datetimeReplaced });
    }
}

public partial record BatteryNotesCheckBatteryLastReportedParameters
{
    ///<summary>Number of days since a device last reported its battery level.</summary>
    [JsonPropertyName("days_last_reported")]
    public long? DaysLastReported { get; init; }
}

public partial record BatteryNotesSetBatteryReplacedParameters
{
    ///<summary>Device that has had its battery replaced.</summary>
    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }

    ///<summary>Entity that has had its battery replaced (only used for entity associated battery notes).</summary>
    [JsonPropertyName("source_entity_id")]
    public string? SourceEntityId { get; init; }

    ///<summary>Date replaced.</summary>
    [JsonPropertyName("datetime_replaced")]
    public DateTime? DatetimeReplaced { get; init; }
}

public partial class BlueprintServices
{
    private readonly IHaContext _haContext;
    public BlueprintServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Import a blueprint.</summary>
    public void Import(BlueprintImportParameters data)
    {
        _haContext.CallService("blueprint", "import", null, data);
    }

    ///<summary>Import a blueprint.</summary>
    ///<param name="url">The URL to import the blueprint from.</param>
    public void Import(string url)
    {
        _haContext.CallService("blueprint", "import", null, new BlueprintImportParameters { Url = url });
    }
}

public partial record BlueprintImportParameters
{
    ///<summary>The URL to import the blueprint from.</summary>
    [JsonPropertyName("url")]
    public string? Url { get; init; }
}

public partial class ButtonServices
{
    private readonly IHaContext _haContext;
    public ButtonServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Presses a button entity.</summary>
    ///<param name="target">The target for this service call</param>
    public void Press(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("button", "press", target, data);
    }
}

public partial class CalendarServices
{
    private readonly IHaContext _haContext;
    public CalendarServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Adds a new calendar event.</summary>
    ///<param name="target">The target for this service call</param>
    public void CreateEvent(ServiceTarget target, CalendarCreateEventParameters data)
    {
        _haContext.CallService("calendar", "create_event", target, data);
    }

    ///<summary>Adds a new calendar event.</summary>
    ///<param name="summary">Defines the short summary or subject for the event. eg: Department Party</param>
    ///<param name="description">A more complete description of the event than the one provided by the summary. eg: Meeting to provide technical review for &apos;Phoenix&apos; design.</param>
    ///<param name="startDateTime">The date and time the event should start. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">The date and time the event should end. eg: 2022-03-22 22:00:00</param>
    ///<param name="startDate">The date the all-day event should start. eg: 2022-03-22</param>
    ///<param name="endDate">The date the all-day event should end (exclusive). eg: 2022-03-23</param>
    ///<param name="in">Days or weeks that you want to create the event in. eg: {&quot;days&quot;: 2} or {&quot;weeks&quot;: 2}</param>
    ///<param name="location">The location of the event. eg: Conference Room - F123, Bldg. 002</param>
    public void CreateEvent(ServiceTarget target, string summary, string? description = null, DateTime? startDateTime = null, DateTime? endDateTime = null, DateOnly? startDate = null, DateOnly? endDate = null, object? @in = null, string? location = null)
    {
        _haContext.CallService("calendar", "create_event", target, new CalendarCreateEventParameters { Summary = summary, Description = description, StartDateTime = startDateTime, EndDateTime = endDateTime, StartDate = startDate, EndDate = endDate, In = @in, Location = location });
    }

    ///<summary>Retrieves events on a calendar within a time range.</summary>
    ///<param name="target">The target for this service call</param>
    public void GetEvents(ServiceTarget target, CalendarGetEventsParameters data)
    {
        _haContext.CallService("calendar", "get_events", target, data);
    }

    ///<summary>Retrieves events on a calendar within a time range.</summary>
    ///<param name="startDateTime">Returns active events after this time (exclusive). When not set, defaults to now. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">Returns active events before this time (exclusive). Cannot be used with Duration. eg: 2022-03-22 22:00:00</param>
    ///<param name="duration">Returns active events from Start time for the specified duration.</param>
    public void GetEvents(ServiceTarget target, DateTime? startDateTime = null, DateTime? endDateTime = null, object? duration = null)
    {
        _haContext.CallService("calendar", "get_events", target, new CalendarGetEventsParameters { StartDateTime = startDateTime, EndDateTime = endDateTime, Duration = duration });
    }

    ///<summary>Retrieves events on a calendar within a time range.</summary>
    ///<param name="target">The target for this service call</param>
    public Task<JsonElement?> GetEventsAsync(ServiceTarget target, CalendarGetEventsParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("calendar", "get_events", target, data);
    }

    ///<summary>Retrieves events on a calendar within a time range.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="startDateTime">Returns active events after this time (exclusive). When not set, defaults to now. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">Returns active events before this time (exclusive). Cannot be used with Duration. eg: 2022-03-22 22:00:00</param>
    ///<param name="duration">Returns active events from Start time for the specified duration.</param>
    public Task<JsonElement?> GetEventsAsync(ServiceTarget target, DateTime? startDateTime = null, DateTime? endDateTime = null, object? duration = null)
    {
        return _haContext.CallServiceWithResponseAsync("calendar", "get_events", target, new CalendarGetEventsParameters { StartDateTime = startDateTime, EndDateTime = endDateTime, Duration = duration });
    }
}

public partial record CalendarCreateEventParameters
{
    ///<summary>Defines the short summary or subject for the event. eg: Department Party</summary>
    [JsonPropertyName("summary")]
    public string? Summary { get; init; }

    ///<summary>A more complete description of the event than the one provided by the summary. eg: Meeting to provide technical review for &apos;Phoenix&apos; design.</summary>
    [JsonPropertyName("description")]
    public string? Description { get; init; }

    ///<summary>The date and time the event should start. eg: 2022-03-22 20:00:00</summary>
    [JsonPropertyName("start_date_time")]
    public DateTime? StartDateTime { get; init; }

    ///<summary>The date and time the event should end. eg: 2022-03-22 22:00:00</summary>
    [JsonPropertyName("end_date_time")]
    public DateTime? EndDateTime { get; init; }

    ///<summary>The date the all-day event should start. eg: 2022-03-22</summary>
    [JsonPropertyName("start_date")]
    public DateOnly? StartDate { get; init; }

    ///<summary>The date the all-day event should end (exclusive). eg: 2022-03-23</summary>
    [JsonPropertyName("end_date")]
    public DateOnly? EndDate { get; init; }

    ///<summary>Days or weeks that you want to create the event in. eg: {&quot;days&quot;: 2} or {&quot;weeks&quot;: 2}</summary>
    [JsonPropertyName("in")]
    public object? In { get; init; }

    ///<summary>The location of the event. eg: Conference Room - F123, Bldg. 002</summary>
    [JsonPropertyName("location")]
    public string? Location { get; init; }
}

public partial record CalendarGetEventsParameters
{
    ///<summary>Returns active events after this time (exclusive). When not set, defaults to now. eg: 2022-03-22 20:00:00</summary>
    [JsonPropertyName("start_date_time")]
    public DateTime? StartDateTime { get; init; }

    ///<summary>Returns active events before this time (exclusive). Cannot be used with Duration. eg: 2022-03-22 22:00:00</summary>
    [JsonPropertyName("end_date_time")]
    public DateTime? EndDateTime { get; init; }

    ///<summary>Returns active events from Start time for the specified duration.</summary>
    [JsonPropertyName("duration")]
    public object? Duration { get; init; }
}

public partial class CameraServices
{
    private readonly IHaContext _haContext;
    public CameraServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Disables the motion detection.</summary>
    ///<param name="target">The target for this service call</param>
    public void DisableMotionDetection(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("camera", "disable_motion_detection", target, data);
    }

    ///<summary>Enables the motion detection.</summary>
    ///<param name="target">The target for this service call</param>
    public void EnableMotionDetection(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("camera", "enable_motion_detection", target, data);
    }

    ///<summary>Plays the camera stream on a supported media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void PlayStream(ServiceTarget target, CameraPlayStreamParameters data)
    {
        _haContext.CallService("camera", "play_stream", target, data);
    }

    ///<summary>Plays the camera stream on a supported media player.</summary>
    ///<param name="mediaPlayer">Media players to stream to.</param>
    ///<param name="format">Stream format supported by the media player.</param>
    public void PlayStream(ServiceTarget target, string mediaPlayer, object? format = null)
    {
        _haContext.CallService("camera", "play_stream", target, new CameraPlayStreamParameters { MediaPlayer = mediaPlayer, Format = format });
    }

    ///<summary>Creates a recording of a live camera feed.</summary>
    ///<param name="target">The target for this service call</param>
    public void Record(ServiceTarget target, CameraRecordParameters data)
    {
        _haContext.CallService("camera", "record", target, data);
    }

    ///<summary>Creates a recording of a live camera feed.</summary>
    ///<param name="filename">Full path to filename. Must be mp4. eg: /tmp/snapshot_{{ entity_id.name }}.mp4</param>
    ///<param name="duration">Planned duration of the recording. The actual duration may vary.</param>
    ///<param name="lookback">Planned lookback period to include in the recording (in addition to the duration). Only available if there is currently an active HLS stream. The actual length of the lookback period may vary.</param>
    public void Record(ServiceTarget target, string filename, long? duration = null, long? lookback = null)
    {
        _haContext.CallService("camera", "record", target, new CameraRecordParameters { Filename = filename, Duration = duration, Lookback = lookback });
    }

    ///<summary>Takes a snapshot from a camera.</summary>
    ///<param name="target">The target for this service call</param>
    public void Snapshot(ServiceTarget target, CameraSnapshotParameters data)
    {
        _haContext.CallService("camera", "snapshot", target, data);
    }

    ///<summary>Takes a snapshot from a camera.</summary>
    ///<param name="filename">Full path to filename. eg: /tmp/snapshot_{{ entity_id.name }}.jpg</param>
    public void Snapshot(ServiceTarget target, string filename)
    {
        _haContext.CallService("camera", "snapshot", target, new CameraSnapshotParameters { Filename = filename });
    }

    ///<summary>Turns off the camera.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("camera", "turn_off", target, data);
    }

    ///<summary>Turns on the camera.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("camera", "turn_on", target, data);
    }
}

public partial record CameraPlayStreamParameters
{
    ///<summary>Media players to stream to.</summary>
    [JsonPropertyName("media_player")]
    public string? MediaPlayer { get; init; }

    ///<summary>Stream format supported by the media player.</summary>
    [JsonPropertyName("format")]
    public object? Format { get; init; }
}

public partial record CameraRecordParameters
{
    ///<summary>Full path to filename. Must be mp4. eg: /tmp/snapshot_{{ entity_id.name }}.mp4</summary>
    [JsonPropertyName("filename")]
    public string? Filename { get; init; }

    ///<summary>Planned duration of the recording. The actual duration may vary.</summary>
    [JsonPropertyName("duration")]
    public long? Duration { get; init; }

    ///<summary>Planned lookback period to include in the recording (in addition to the duration). Only available if there is currently an active HLS stream. The actual length of the lookback period may vary.</summary>
    [JsonPropertyName("lookback")]
    public long? Lookback { get; init; }
}

public partial record CameraSnapshotParameters
{
    ///<summary>Full path to filename. eg: /tmp/snapshot_{{ entity_id.name }}.jpg</summary>
    [JsonPropertyName("filename")]
    public string? Filename { get; init; }
}

public partial class CastServices
{
    private readonly IHaContext _haContext;
    public CastServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Shows a dashboard view on a Chromecast device.</summary>
    public void ShowLovelaceView(CastShowLovelaceViewParameters data)
    {
        _haContext.CallService("cast", "show_lovelace_view", null, data);
    }

    ///<summary>Shows a dashboard view on a Chromecast device.</summary>
    ///<param name="entityId">Media player entity to show the dashboard view on.</param>
    ///<param name="dashboardPath">The URL path of the dashboard to show, defaults to lovelace if not specified. eg: lovelace-cast</param>
    ///<param name="viewPath">The URL path of the dashboard view to show. eg: downstairs</param>
    public void ShowLovelaceView(string entityId, string viewPath, string? dashboardPath = null)
    {
        _haContext.CallService("cast", "show_lovelace_view", null, new CastShowLovelaceViewParameters { EntityId = entityId, DashboardPath = dashboardPath, ViewPath = viewPath });
    }
}

public partial record CastShowLovelaceViewParameters
{
    ///<summary>Media player entity to show the dashboard view on.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>The URL path of the dashboard to show, defaults to lovelace if not specified. eg: lovelace-cast</summary>
    [JsonPropertyName("dashboard_path")]
    public string? DashboardPath { get; init; }

    ///<summary>The URL path of the dashboard view to show. eg: downstairs</summary>
    [JsonPropertyName("view_path")]
    public string? ViewPath { get; init; }
}

public partial class ChimeTtsServices
{
    private readonly IHaContext _haContext;
    public ChimeTtsServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Removes all locally cached TTS audio files created from Chime TTS</summary>
    public void ClearCache(object? data = null)
    {
        _haContext.CallService("chime_tts", "clear_cache", null, data);
    }

    ///<summary>Repeat the last service call to chime_tts.say with the same parameters</summary>
    public void Replay(object? data = null)
    {
        _haContext.CallService("chime_tts", "replay", null, data);
    }

    ///<summary>Play an audio file before TTS audio</summary>
    public void Say(object? data = null)
    {
        _haContext.CallService("chime_tts", "say", null, data);
    }

    ///<summary>Generates an audio file with the `chime_tts.say` service and returns either an external URL or a local file path, depending on the folder set in the configuration</summary>
    public void SayUrl(object? data = null)
    {
        _haContext.CallService("chime_tts", "say_url", null, data);
    }

    ///<summary>Generates an audio file with the `chime_tts.say` service and returns either an external URL or a local file path, depending on the folder set in the configuration</summary>
    public Task<JsonElement?> SayUrlAsync(object? data = null)
    {
        return _haContext.CallServiceWithResponseAsync("chime_tts", "say_url", null, data);
    }
}

public partial class ClimateServices
{
    private readonly IHaContext _haContext;
    public ClimateServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets fan operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetFanMode(ServiceTarget target, ClimateSetFanModeParameters data)
    {
        _haContext.CallService("climate", "set_fan_mode", target, data);
    }

    ///<summary>Sets fan operation mode.</summary>
    ///<param name="fanMode">Fan operation mode. eg: low</param>
    public void SetFanMode(ServiceTarget target, string fanMode)
    {
        _haContext.CallService("climate", "set_fan_mode", target, new ClimateSetFanModeParameters { FanMode = fanMode });
    }

    ///<summary>Sets target humidity.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetHumidity(ServiceTarget target, ClimateSetHumidityParameters data)
    {
        _haContext.CallService("climate", "set_humidity", target, data);
    }

    ///<summary>Sets target humidity.</summary>
    ///<param name="humidity">Target humidity.</param>
    public void SetHumidity(ServiceTarget target, long humidity)
    {
        _haContext.CallService("climate", "set_humidity", target, new ClimateSetHumidityParameters { Humidity = humidity });
    }

    ///<summary>Sets HVAC operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetHvacMode(ServiceTarget target, ClimateSetHvacModeParameters data)
    {
        _haContext.CallService("climate", "set_hvac_mode", target, data);
    }

    ///<summary>Sets HVAC operation mode.</summary>
    ///<param name="hvacMode">HVAC operation mode.</param>
    public void SetHvacMode(ServiceTarget target, object? hvacMode = null)
    {
        _haContext.CallService("climate", "set_hvac_mode", target, new ClimateSetHvacModeParameters { HvacMode = hvacMode });
    }

    ///<summary>Sets preset mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetPresetMode(ServiceTarget target, ClimateSetPresetModeParameters data)
    {
        _haContext.CallService("climate", "set_preset_mode", target, data);
    }

    ///<summary>Sets preset mode.</summary>
    ///<param name="presetMode">Preset mode. eg: away</param>
    public void SetPresetMode(ServiceTarget target, string presetMode)
    {
        _haContext.CallService("climate", "set_preset_mode", target, new ClimateSetPresetModeParameters { PresetMode = presetMode });
    }

    ///<summary>Sets horizontal swing operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetSwingHorizontalMode(ServiceTarget target, ClimateSetSwingHorizontalModeParameters data)
    {
        _haContext.CallService("climate", "set_swing_horizontal_mode", target, data);
    }

    ///<summary>Sets horizontal swing operation mode.</summary>
    ///<param name="swingHorizontalMode">Horizontal swing operation mode. eg: on</param>
    public void SetSwingHorizontalMode(ServiceTarget target, string swingHorizontalMode)
    {
        _haContext.CallService("climate", "set_swing_horizontal_mode", target, new ClimateSetSwingHorizontalModeParameters { SwingHorizontalMode = swingHorizontalMode });
    }

    ///<summary>Sets swing operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetSwingMode(ServiceTarget target, ClimateSetSwingModeParameters data)
    {
        _haContext.CallService("climate", "set_swing_mode", target, data);
    }

    ///<summary>Sets swing operation mode.</summary>
    ///<param name="swingMode">Swing operation mode. eg: on</param>
    public void SetSwingMode(ServiceTarget target, string swingMode)
    {
        _haContext.CallService("climate", "set_swing_mode", target, new ClimateSetSwingModeParameters { SwingMode = swingMode });
    }

    ///<summary>Sets the temperature setpoint.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetTemperature(ServiceTarget target, ClimateSetTemperatureParameters data)
    {
        _haContext.CallService("climate", "set_temperature", target, data);
    }

    ///<summary>Sets the temperature setpoint.</summary>
    ///<param name="temperature">The temperature setpoint.</param>
    ///<param name="targetTempHigh">The max temperature setpoint.</param>
    ///<param name="targetTempLow">The min temperature setpoint.</param>
    ///<param name="hvacMode">HVAC operation mode.</param>
    public void SetTemperature(ServiceTarget target, double? temperature = null, double? targetTempHigh = null, double? targetTempLow = null, object? hvacMode = null)
    {
        _haContext.CallService("climate", "set_temperature", target, new ClimateSetTemperatureParameters { Temperature = temperature, TargetTempHigh = targetTempHigh, TargetTempLow = targetTempLow, HvacMode = hvacMode });
    }

    ///<summary>Toggles climate device, from on to off, or off to on.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("climate", "toggle", target, data);
    }

    ///<summary>Turns climate device off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("climate", "turn_off", target, data);
    }

    ///<summary>Turns climate device on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("climate", "turn_on", target, data);
    }
}

public partial record ClimateSetFanModeParameters
{
    ///<summary>Fan operation mode. eg: low</summary>
    [JsonPropertyName("fan_mode")]
    public string? FanMode { get; init; }
}

public partial record ClimateSetHumidityParameters
{
    ///<summary>Target humidity.</summary>
    [JsonPropertyName("humidity")]
    public long? Humidity { get; init; }
}

public partial record ClimateSetHvacModeParameters
{
    ///<summary>HVAC operation mode.</summary>
    [JsonPropertyName("hvac_mode")]
    public object? HvacMode { get; init; }
}

public partial record ClimateSetPresetModeParameters
{
    ///<summary>Preset mode. eg: away</summary>
    [JsonPropertyName("preset_mode")]
    public string? PresetMode { get; init; }
}

public partial record ClimateSetSwingHorizontalModeParameters
{
    ///<summary>Horizontal swing operation mode. eg: on</summary>
    [JsonPropertyName("swing_horizontal_mode")]
    public string? SwingHorizontalMode { get; init; }
}

public partial record ClimateSetSwingModeParameters
{
    ///<summary>Swing operation mode. eg: on</summary>
    [JsonPropertyName("swing_mode")]
    public string? SwingMode { get; init; }
}

public partial record ClimateSetTemperatureParameters
{
    ///<summary>The temperature setpoint.</summary>
    [JsonPropertyName("temperature")]
    public double? Temperature { get; init; }

    ///<summary>The max temperature setpoint.</summary>
    [JsonPropertyName("target_temp_high")]
    public double? TargetTempHigh { get; init; }

    ///<summary>The min temperature setpoint.</summary>
    [JsonPropertyName("target_temp_low")]
    public double? TargetTempLow { get; init; }

    ///<summary>HVAC operation mode.</summary>
    [JsonPropertyName("hvac_mode")]
    public object? HvacMode { get; init; }
}

public partial class CloudServices
{
    private readonly IHaContext _haContext;
    public CloudServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Makes the instance UI accessible from outside of the local network by enabling your Home Assistant Cloud connection.</summary>
    public void RemoteConnect(object? data = null)
    {
        _haContext.CallService("cloud", "remote_connect", null, data);
    }

    ///<summary>Disconnects the instance UI from Home Assistant Cloud. This disables access to it from outside your local network.</summary>
    public void RemoteDisconnect(object? data = null)
    {
        _haContext.CallService("cloud", "remote_disconnect", null, data);
    }
}

public partial class ConversationServices
{
    private readonly IHaContext _haContext;
    public ConversationServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Launches a conversation from a transcribed text.</summary>
    public void Process(ConversationProcessParameters data)
    {
        _haContext.CallService("conversation", "process", null, data);
    }

    ///<summary>Launches a conversation from a transcribed text.</summary>
    ///<param name="text">Transcribed text input. eg: Turn all lights on</param>
    ///<param name="language">Language of text. Defaults to server language. eg: NL</param>
    ///<param name="agentId">Conversation agent to process your request. The conversation agent is the brains of your assistant. It processes the incoming text commands. eg: homeassistant</param>
    ///<param name="conversationId">ID of the conversation, to be able to continue a previous conversation eg: my_conversation_1</param>
    public void Process(string text, string? language = null, object? agentId = null, string? conversationId = null)
    {
        _haContext.CallService("conversation", "process", null, new ConversationProcessParameters { Text = text, Language = language, AgentId = agentId, ConversationId = conversationId });
    }

    ///<summary>Launches a conversation from a transcribed text.</summary>
    public Task<JsonElement?> ProcessAsync(ConversationProcessParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("conversation", "process", null, data);
    }

    ///<summary>Launches a conversation from a transcribed text.</summary>
    ///<param name="text">Transcribed text input. eg: Turn all lights on</param>
    ///<param name="language">Language of text. Defaults to server language. eg: NL</param>
    ///<param name="agentId">Conversation agent to process your request. The conversation agent is the brains of your assistant. It processes the incoming text commands. eg: homeassistant</param>
    ///<param name="conversationId">ID of the conversation, to be able to continue a previous conversation eg: my_conversation_1</param>
    public Task<JsonElement?> ProcessAsync(string text, string? language = null, object? agentId = null, string? conversationId = null)
    {
        return _haContext.CallServiceWithResponseAsync("conversation", "process", null, new ConversationProcessParameters { Text = text, Language = language, AgentId = agentId, ConversationId = conversationId });
    }

    ///<summary>Reloads the intent configuration.</summary>
    public void Reload(ConversationReloadParameters data)
    {
        _haContext.CallService("conversation", "reload", null, data);
    }

    ///<summary>Reloads the intent configuration.</summary>
    ///<param name="language">Language to clear cached intents for. Defaults to server language. eg: NL</param>
    ///<param name="agentId">Conversation agent to reload. eg: homeassistant</param>
    public void Reload(string? language = null, object? agentId = null)
    {
        _haContext.CallService("conversation", "reload", null, new ConversationReloadParameters { Language = language, AgentId = agentId });
    }
}

public partial record ConversationProcessParameters
{
    ///<summary>Transcribed text input. eg: Turn all lights on</summary>
    [JsonPropertyName("text")]
    public string? Text { get; init; }

    ///<summary>Language of text. Defaults to server language. eg: NL</summary>
    [JsonPropertyName("language")]
    public string? Language { get; init; }

    ///<summary>Conversation agent to process your request. The conversation agent is the brains of your assistant. It processes the incoming text commands. eg: homeassistant</summary>
    [JsonPropertyName("agent_id")]
    public object? AgentId { get; init; }

    ///<summary>ID of the conversation, to be able to continue a previous conversation eg: my_conversation_1</summary>
    [JsonPropertyName("conversation_id")]
    public string? ConversationId { get; init; }
}

public partial record ConversationReloadParameters
{
    ///<summary>Language to clear cached intents for. Defaults to server language. eg: NL</summary>
    [JsonPropertyName("language")]
    public string? Language { get; init; }

    ///<summary>Conversation agent to reload. eg: homeassistant</summary>
    [JsonPropertyName("agent_id")]
    public object? AgentId { get; init; }
}

public partial class CounterServices
{
    private readonly IHaContext _haContext;
    public CounterServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Decrements a counter by its step size.</summary>
    ///<param name="target">The target for this service call</param>
    public void Decrement(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("counter", "decrement", target, data);
    }

    ///<summary>Increments a counter by its step size.</summary>
    ///<param name="target">The target for this service call</param>
    public void Increment(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("counter", "increment", target, data);
    }

    ///<summary>Resets a counter to its initial value.</summary>
    ///<param name="target">The target for this service call</param>
    public void Reset(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("counter", "reset", target, data);
    }

    ///<summary>Sets the counter to a specific value.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, CounterSetValueParameters data)
    {
        _haContext.CallService("counter", "set_value", target, data);
    }

    ///<summary>Sets the counter to a specific value.</summary>
    ///<param name="value">The new counter value the entity should be set to.</param>
    public void SetValue(ServiceTarget target, long value)
    {
        _haContext.CallService("counter", "set_value", target, new CounterSetValueParameters { Value = value });
    }
}

public partial record CounterSetValueParameters
{
    ///<summary>The new counter value the entity should be set to.</summary>
    [JsonPropertyName("value")]
    public long? Value { get; init; }
}

public partial class CoverServices
{
    private readonly IHaContext _haContext;
    public CoverServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Closes a cover.</summary>
    ///<param name="target">The target for this service call</param>
    public void CloseCover(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "close_cover", target, data);
    }

    ///<summary>Tilts a cover to close.</summary>
    ///<param name="target">The target for this service call</param>
    public void CloseCoverTilt(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "close_cover_tilt", target, data);
    }

    ///<summary>Opens a cover.</summary>
    ///<param name="target">The target for this service call</param>
    public void OpenCover(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "open_cover", target, data);
    }

    ///<summary>Tilts a cover open.</summary>
    ///<param name="target">The target for this service call</param>
    public void OpenCoverTilt(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "open_cover_tilt", target, data);
    }

    ///<summary>Moves a cover to a specific position.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetCoverPosition(ServiceTarget target, CoverSetCoverPositionParameters data)
    {
        _haContext.CallService("cover", "set_cover_position", target, data);
    }

    ///<summary>Moves a cover to a specific position.</summary>
    ///<param name="position">Target position.</param>
    public void SetCoverPosition(ServiceTarget target, long position)
    {
        _haContext.CallService("cover", "set_cover_position", target, new CoverSetCoverPositionParameters { Position = position });
    }

    ///<summary>Moves a cover tilt to a specific position.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetCoverTiltPosition(ServiceTarget target, CoverSetCoverTiltPositionParameters data)
    {
        _haContext.CallService("cover", "set_cover_tilt_position", target, data);
    }

    ///<summary>Moves a cover tilt to a specific position.</summary>
    ///<param name="tiltPosition">Target tilt positition.</param>
    public void SetCoverTiltPosition(ServiceTarget target, long tiltPosition)
    {
        _haContext.CallService("cover", "set_cover_tilt_position", target, new CoverSetCoverTiltPositionParameters { TiltPosition = tiltPosition });
    }

    ///<summary>Stops the cover movement.</summary>
    ///<param name="target">The target for this service call</param>
    public void StopCover(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "stop_cover", target, data);
    }

    ///<summary>Stops a tilting cover movement.</summary>
    ///<param name="target">The target for this service call</param>
    public void StopCoverTilt(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "stop_cover_tilt", target, data);
    }

    ///<summary>Toggles a cover open/closed.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "toggle", target, data);
    }

    ///<summary>Toggles a cover tilt open/closed.</summary>
    ///<param name="target">The target for this service call</param>
    public void ToggleCoverTilt(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "toggle_cover_tilt", target, data);
    }
}

public partial record CoverSetCoverPositionParameters
{
    ///<summary>Target position.</summary>
    [JsonPropertyName("position")]
    public long? Position { get; init; }
}

public partial record CoverSetCoverTiltPositionParameters
{
    ///<summary>Target tilt positition.</summary>
    [JsonPropertyName("tilt_position")]
    public long? TiltPosition { get; init; }
}

public partial class DeviceTrackerServices
{
    private readonly IHaContext _haContext;
    public DeviceTrackerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Manually update the records of a seen legacy device tracker in the known_devices.yaml file.</summary>
    public void See(DeviceTrackerSeeParameters data)
    {
        _haContext.CallService("device_tracker", "see", null, data);
    }

    ///<summary>Manually update the records of a seen legacy device tracker in the known_devices.yaml file.</summary>
    ///<param name="mac">MAC address of the device. eg: FF:FF:FF:FF:FF:FF</param>
    ///<param name="devId">ID of the device (find the ID in `known_devices.yaml`). eg: phonedave</param>
    ///<param name="hostName">Hostname of the device. eg: Dave</param>
    ///<param name="locationName">Name of the location where the device is located. The options are: `home`, `not_home`, or the name of the zone. eg: home</param>
    ///<param name="gps">GPS coordinates where the device is located, specified by latitude and longitude (for example: [51.513845, -0.100539]). eg: [51.509802, -0.086692]</param>
    ///<param name="gpsAccuracy">Accuracy of the GPS coordinates.</param>
    ///<param name="battery">Battery level of the device.</param>
    public void See(string? mac = null, string? devId = null, string? hostName = null, string? locationName = null, object? gps = null, long? gpsAccuracy = null, long? battery = null)
    {
        _haContext.CallService("device_tracker", "see", null, new DeviceTrackerSeeParameters { Mac = mac, DevId = devId, HostName = hostName, LocationName = locationName, Gps = gps, GpsAccuracy = gpsAccuracy, Battery = battery });
    }
}

public partial record DeviceTrackerSeeParameters
{
    ///<summary>MAC address of the device. eg: FF:FF:FF:FF:FF:FF</summary>
    [JsonPropertyName("mac")]
    public string? Mac { get; init; }

    ///<summary>ID of the device (find the ID in `known_devices.yaml`). eg: phonedave</summary>
    [JsonPropertyName("dev_id")]
    public string? DevId { get; init; }

    ///<summary>Hostname of the device. eg: Dave</summary>
    [JsonPropertyName("host_name")]
    public string? HostName { get; init; }

    ///<summary>Name of the location where the device is located. The options are: `home`, `not_home`, or the name of the zone. eg: home</summary>
    [JsonPropertyName("location_name")]
    public string? LocationName { get; init; }

    ///<summary>GPS coordinates where the device is located, specified by latitude and longitude (for example: [51.513845, -0.100539]). eg: [51.509802, -0.086692]</summary>
    [JsonPropertyName("gps")]
    public object? Gps { get; init; }

    ///<summary>Accuracy of the GPS coordinates.</summary>
    [JsonPropertyName("gps_accuracy")]
    public long? GpsAccuracy { get; init; }

    ///<summary>Battery level of the device.</summary>
    [JsonPropertyName("battery")]
    public long? Battery { get; init; }
}

public partial class EnergyzeroServices
{
    private readonly IHaContext _haContext;
    public EnergyzeroServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Requests energy prices from EnergyZero.</summary>
    public void GetEnergyPrices(EnergyzeroGetEnergyPricesParameters data)
    {
        _haContext.CallService("energyzero", "get_energy_prices", null, data);
    }

    ///<summary>Requests energy prices from EnergyZero.</summary>
    ///<param name="configEntry">The config entry to use for this action.</param>
    ///<param name="inclVat">Include VAT in the prices.</param>
    ///<param name="start">Specifies the date and time from which to retrieve prices. Defaults to today if omitted. eg: 2023-01-01 00:00:00</param>
    ///<param name="end">Specifies the date and time until which to retrieve prices. Defaults to today if omitted. eg: 2023-01-01 00:00:00</param>
    public void GetEnergyPrices(object configEntry, bool inclVat, DateTime? start = null, DateTime? end = null)
    {
        _haContext.CallService("energyzero", "get_energy_prices", null, new EnergyzeroGetEnergyPricesParameters { ConfigEntry = configEntry, InclVat = inclVat, Start = start, End = end });
    }

    ///<summary>Requests energy prices from EnergyZero.</summary>
    public Task<JsonElement?> GetEnergyPricesAsync(EnergyzeroGetEnergyPricesParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("energyzero", "get_energy_prices", null, data);
    }

    ///<summary>Requests energy prices from EnergyZero.</summary>
    ///<param name="configEntry">The config entry to use for this action.</param>
    ///<param name="inclVat">Include VAT in the prices.</param>
    ///<param name="start">Specifies the date and time from which to retrieve prices. Defaults to today if omitted. eg: 2023-01-01 00:00:00</param>
    ///<param name="end">Specifies the date and time until which to retrieve prices. Defaults to today if omitted. eg: 2023-01-01 00:00:00</param>
    public Task<JsonElement?> GetEnergyPricesAsync(object configEntry, bool inclVat, DateTime? start = null, DateTime? end = null)
    {
        return _haContext.CallServiceWithResponseAsync("energyzero", "get_energy_prices", null, new EnergyzeroGetEnergyPricesParameters { ConfigEntry = configEntry, InclVat = inclVat, Start = start, End = end });
    }

    ///<summary>Requests gas prices from EnergyZero.</summary>
    public void GetGasPrices(EnergyzeroGetGasPricesParameters data)
    {
        _haContext.CallService("energyzero", "get_gas_prices", null, data);
    }

    ///<summary>Requests gas prices from EnergyZero.</summary>
    ///<param name="configEntry">The config entry to use for this action.</param>
    ///<param name="inclVat">Include VAT in the prices.</param>
    ///<param name="start">Specifies the date and time from which to retrieve prices. Defaults to today if omitted. eg: 2023-01-01 00:00:00</param>
    ///<param name="end">Specifies the date and time until which to retrieve prices. Defaults to today if omitted. eg: 2023-01-01 00:00:00</param>
    public void GetGasPrices(object configEntry, bool inclVat, DateTime? start = null, DateTime? end = null)
    {
        _haContext.CallService("energyzero", "get_gas_prices", null, new EnergyzeroGetGasPricesParameters { ConfigEntry = configEntry, InclVat = inclVat, Start = start, End = end });
    }

    ///<summary>Requests gas prices from EnergyZero.</summary>
    public Task<JsonElement?> GetGasPricesAsync(EnergyzeroGetGasPricesParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("energyzero", "get_gas_prices", null, data);
    }

    ///<summary>Requests gas prices from EnergyZero.</summary>
    ///<param name="configEntry">The config entry to use for this action.</param>
    ///<param name="inclVat">Include VAT in the prices.</param>
    ///<param name="start">Specifies the date and time from which to retrieve prices. Defaults to today if omitted. eg: 2023-01-01 00:00:00</param>
    ///<param name="end">Specifies the date and time until which to retrieve prices. Defaults to today if omitted. eg: 2023-01-01 00:00:00</param>
    public Task<JsonElement?> GetGasPricesAsync(object configEntry, bool inclVat, DateTime? start = null, DateTime? end = null)
    {
        return _haContext.CallServiceWithResponseAsync("energyzero", "get_gas_prices", null, new EnergyzeroGetGasPricesParameters { ConfigEntry = configEntry, InclVat = inclVat, Start = start, End = end });
    }
}

public partial record EnergyzeroGetEnergyPricesParameters
{
    ///<summary>The config entry to use for this action.</summary>
    [JsonPropertyName("config_entry")]
    public object? ConfigEntry { get; init; }

    ///<summary>Include VAT in the prices.</summary>
    [JsonPropertyName("incl_vat")]
    public bool? InclVat { get; init; }

    ///<summary>Specifies the date and time from which to retrieve prices. Defaults to today if omitted. eg: 2023-01-01 00:00:00</summary>
    [JsonPropertyName("start")]
    public DateTime? Start { get; init; }

    ///<summary>Specifies the date and time until which to retrieve prices. Defaults to today if omitted. eg: 2023-01-01 00:00:00</summary>
    [JsonPropertyName("end")]
    public DateTime? End { get; init; }
}

public partial record EnergyzeroGetGasPricesParameters
{
    ///<summary>The config entry to use for this action.</summary>
    [JsonPropertyName("config_entry")]
    public object? ConfigEntry { get; init; }

    ///<summary>Include VAT in the prices.</summary>
    [JsonPropertyName("incl_vat")]
    public bool? InclVat { get; init; }

    ///<summary>Specifies the date and time from which to retrieve prices. Defaults to today if omitted. eg: 2023-01-01 00:00:00</summary>
    [JsonPropertyName("start")]
    public DateTime? Start { get; init; }

    ///<summary>Specifies the date and time until which to retrieve prices. Defaults to today if omitted. eg: 2023-01-01 00:00:00</summary>
    [JsonPropertyName("end")]
    public DateTime? End { get; init; }
}

public partial class EpexSpotServices
{
    private readonly IHaContext _haContext;
    public EpexSpotServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Fetch data now</summary>
    public void FetchData(EpexSpotFetchDataParameters data)
    {
        _haContext.CallService("epex_spot", "fetch_data", null, data);
    }

    ///<summary>Fetch data now</summary>
    ///<param name="deviceId">An EPEX Spot service instance ID. In case you have multiple EPEX Spot instances.</param>
    public void FetchData(string? deviceId = null)
    {
        _haContext.CallService("epex_spot", "fetch_data", null, new EpexSpotFetchDataParameters { DeviceId = deviceId });
    }

    ///<summary>Get the time interval during which the price is at its highest point.</summary>
    public void GetHighestPriceInterval(EpexSpotGetHighestPriceIntervalParameters data)
    {
        _haContext.CallService("epex_spot", "get_highest_price_interval", null, data);
    }

    ///<summary>Get the time interval during which the price is at its highest point.</summary>
    ///<param name="deviceId">An EPEX Spot service instance ID. In case you have multiple EPEX Spot instances.</param>
    ///<param name="earliestStart">Earliest time to start the appliance. If omitted, the current time is used. Refers to today if `Earliest Start Offset` is not set or 0, or tomorrow if offset is 1. eg: 14:00:00</param>
    ///<param name="earliestStartPost">Postponement of `Earliest Start Time` in days: 0 = today (default), 1 = tomorrow eg: 0</param>
    ///<param name="latestEnd">Latest time to end the appliance. If omitted, the end of the available market data is used. Refers to today if `Latest End Offset` is not set or 0, or tomorrow if offset is 1. eg: 20:00:00</param>
    ///<param name="latestEndPost">Postponement of `Latest End Time` in days: 0 = today (default), 1 = tomorrow. eg: 0</param>
    ///<param name="duration">Required duration to complete appliance. eg: 01:30:00</param>
    public void GetHighestPriceInterval(object duration, string? deviceId = null, TimeOnly? earliestStart = null, long? earliestStartPost = null, TimeOnly? latestEnd = null, long? latestEndPost = null)
    {
        _haContext.CallService("epex_spot", "get_highest_price_interval", null, new EpexSpotGetHighestPriceIntervalParameters { DeviceId = deviceId, EarliestStart = earliestStart, EarliestStartPost = earliestStartPost, LatestEnd = latestEnd, LatestEndPost = latestEndPost, Duration = duration });
    }

    ///<summary>Get the time interval during which the price is at its highest point.</summary>
    public Task<JsonElement?> GetHighestPriceIntervalAsync(EpexSpotGetHighestPriceIntervalParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("epex_spot", "get_highest_price_interval", null, data);
    }

    ///<summary>Get the time interval during which the price is at its highest point.</summary>
    ///<param name="deviceId">An EPEX Spot service instance ID. In case you have multiple EPEX Spot instances.</param>
    ///<param name="earliestStart">Earliest time to start the appliance. If omitted, the current time is used. Refers to today if `Earliest Start Offset` is not set or 0, or tomorrow if offset is 1. eg: 14:00:00</param>
    ///<param name="earliestStartPost">Postponement of `Earliest Start Time` in days: 0 = today (default), 1 = tomorrow eg: 0</param>
    ///<param name="latestEnd">Latest time to end the appliance. If omitted, the end of the available market data is used. Refers to today if `Latest End Offset` is not set or 0, or tomorrow if offset is 1. eg: 20:00:00</param>
    ///<param name="latestEndPost">Postponement of `Latest End Time` in days: 0 = today (default), 1 = tomorrow. eg: 0</param>
    ///<param name="duration">Required duration to complete appliance. eg: 01:30:00</param>
    public Task<JsonElement?> GetHighestPriceIntervalAsync(object duration, string? deviceId = null, TimeOnly? earliestStart = null, long? earliestStartPost = null, TimeOnly? latestEnd = null, long? latestEndPost = null)
    {
        return _haContext.CallServiceWithResponseAsync("epex_spot", "get_highest_price_interval", null, new EpexSpotGetHighestPriceIntervalParameters { DeviceId = deviceId, EarliestStart = earliestStart, EarliestStartPost = earliestStartPost, LatestEnd = latestEnd, LatestEndPost = latestEndPost, Duration = duration });
    }

    ///<summary>Get the time interval during which the price is at its lowest point.</summary>
    public void GetLowestPriceInterval(EpexSpotGetLowestPriceIntervalParameters data)
    {
        _haContext.CallService("epex_spot", "get_lowest_price_interval", null, data);
    }

    ///<summary>Get the time interval during which the price is at its lowest point.</summary>
    ///<param name="deviceId">An EPEX Spot service instance ID. In case you have multiple EPEX Spot instances.</param>
    ///<param name="earliestStart">Earliest time to start the appliance. If omitted, the current time is used. Refers to today if `Earliest Start Offset` is not set or 0, or tomorrow if offset is 1. eg: 14:00:00</param>
    ///<param name="earliestStartPost">Postponement of `Earliest Start Time` in days: 0 = today (default), 1 = tomorrow eg: 0</param>
    ///<param name="latestEnd">Latest time to end the appliance. If omitted, the end of the available market data is used. Refers to today if `Latest End Offset` is not set or 0, or tomorrow if offset is 1. eg: 20:00:00</param>
    ///<param name="latestEndPost">Postponement of `Latest End Time` in days: 0 = today (default), 1 = tomorrow. eg: 0</param>
    ///<param name="duration">Required duration to complete appliance. eg: 01:30:00</param>
    public void GetLowestPriceInterval(object duration, string? deviceId = null, TimeOnly? earliestStart = null, long? earliestStartPost = null, TimeOnly? latestEnd = null, long? latestEndPost = null)
    {
        _haContext.CallService("epex_spot", "get_lowest_price_interval", null, new EpexSpotGetLowestPriceIntervalParameters { DeviceId = deviceId, EarliestStart = earliestStart, EarliestStartPost = earliestStartPost, LatestEnd = latestEnd, LatestEndPost = latestEndPost, Duration = duration });
    }

    ///<summary>Get the time interval during which the price is at its lowest point.</summary>
    public Task<JsonElement?> GetLowestPriceIntervalAsync(EpexSpotGetLowestPriceIntervalParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("epex_spot", "get_lowest_price_interval", null, data);
    }

    ///<summary>Get the time interval during which the price is at its lowest point.</summary>
    ///<param name="deviceId">An EPEX Spot service instance ID. In case you have multiple EPEX Spot instances.</param>
    ///<param name="earliestStart">Earliest time to start the appliance. If omitted, the current time is used. Refers to today if `Earliest Start Offset` is not set or 0, or tomorrow if offset is 1. eg: 14:00:00</param>
    ///<param name="earliestStartPost">Postponement of `Earliest Start Time` in days: 0 = today (default), 1 = tomorrow eg: 0</param>
    ///<param name="latestEnd">Latest time to end the appliance. If omitted, the end of the available market data is used. Refers to today if `Latest End Offset` is not set or 0, or tomorrow if offset is 1. eg: 20:00:00</param>
    ///<param name="latestEndPost">Postponement of `Latest End Time` in days: 0 = today (default), 1 = tomorrow. eg: 0</param>
    ///<param name="duration">Required duration to complete appliance. eg: 01:30:00</param>
    public Task<JsonElement?> GetLowestPriceIntervalAsync(object duration, string? deviceId = null, TimeOnly? earliestStart = null, long? earliestStartPost = null, TimeOnly? latestEnd = null, long? latestEndPost = null)
    {
        return _haContext.CallServiceWithResponseAsync("epex_spot", "get_lowest_price_interval", null, new EpexSpotGetLowestPriceIntervalParameters { DeviceId = deviceId, EarliestStart = earliestStart, EarliestStartPost = earliestStartPost, LatestEnd = latestEnd, LatestEndPost = latestEndPost, Duration = duration });
    }
}

public partial record EpexSpotFetchDataParameters
{
    ///<summary>An EPEX Spot service instance ID. In case you have multiple EPEX Spot instances.</summary>
    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }
}

public partial record EpexSpotGetHighestPriceIntervalParameters
{
    ///<summary>An EPEX Spot service instance ID. In case you have multiple EPEX Spot instances.</summary>
    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }

    ///<summary>Earliest time to start the appliance. If omitted, the current time is used. Refers to today if `Earliest Start Offset` is not set or 0, or tomorrow if offset is 1. eg: 14:00:00</summary>
    [JsonPropertyName("earliest_start")]
    public TimeOnly? EarliestStart { get; init; }

    ///<summary>Postponement of `Earliest Start Time` in days: 0 = today (default), 1 = tomorrow eg: 0</summary>
    [JsonPropertyName("earliest_start_post")]
    public long? EarliestStartPost { get; init; }

    ///<summary>Latest time to end the appliance. If omitted, the end of the available market data is used. Refers to today if `Latest End Offset` is not set or 0, or tomorrow if offset is 1. eg: 20:00:00</summary>
    [JsonPropertyName("latest_end")]
    public TimeOnly? LatestEnd { get; init; }

    ///<summary>Postponement of `Latest End Time` in days: 0 = today (default), 1 = tomorrow. eg: 0</summary>
    [JsonPropertyName("latest_end_post")]
    public long? LatestEndPost { get; init; }

    ///<summary>Required duration to complete appliance. eg: 01:30:00</summary>
    [JsonPropertyName("duration")]
    public object? Duration { get; init; }
}

public partial record EpexSpotGetLowestPriceIntervalParameters
{
    ///<summary>An EPEX Spot service instance ID. In case you have multiple EPEX Spot instances.</summary>
    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }

    ///<summary>Earliest time to start the appliance. If omitted, the current time is used. Refers to today if `Earliest Start Offset` is not set or 0, or tomorrow if offset is 1. eg: 14:00:00</summary>
    [JsonPropertyName("earliest_start")]
    public TimeOnly? EarliestStart { get; init; }

    ///<summary>Postponement of `Earliest Start Time` in days: 0 = today (default), 1 = tomorrow eg: 0</summary>
    [JsonPropertyName("earliest_start_post")]
    public long? EarliestStartPost { get; init; }

    ///<summary>Latest time to end the appliance. If omitted, the end of the available market data is used. Refers to today if `Latest End Offset` is not set or 0, or tomorrow if offset is 1. eg: 20:00:00</summary>
    [JsonPropertyName("latest_end")]
    public TimeOnly? LatestEnd { get; init; }

    ///<summary>Postponement of `Latest End Time` in days: 0 = today (default), 1 = tomorrow. eg: 0</summary>
    [JsonPropertyName("latest_end_post")]
    public long? LatestEndPost { get; init; }

    ///<summary>Required duration to complete appliance. eg: 01:30:00</summary>
    [JsonPropertyName("duration")]
    public object? Duration { get; init; }
}

public partial class FanServices
{
    private readonly IHaContext _haContext;
    public FanServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Decreases the speed of a fan.</summary>
    ///<param name="target">The target for this service call</param>
    public void DecreaseSpeed(ServiceTarget target, FanDecreaseSpeedParameters data)
    {
        _haContext.CallService("fan", "decrease_speed", target, data);
    }

    ///<summary>Decreases the speed of a fan.</summary>
    ///<param name="percentageStep">Percentage step by which the speed should be decreased.</param>
    public void DecreaseSpeed(ServiceTarget target, long? percentageStep = null)
    {
        _haContext.CallService("fan", "decrease_speed", target, new FanDecreaseSpeedParameters { PercentageStep = percentageStep });
    }

    ///<summary>Increases the speed of a fan.</summary>
    ///<param name="target">The target for this service call</param>
    public void IncreaseSpeed(ServiceTarget target, FanIncreaseSpeedParameters data)
    {
        _haContext.CallService("fan", "increase_speed", target, data);
    }

    ///<summary>Increases the speed of a fan.</summary>
    ///<param name="percentageStep">Percentage step by which the speed should be increased.</param>
    public void IncreaseSpeed(ServiceTarget target, long? percentageStep = null)
    {
        _haContext.CallService("fan", "increase_speed", target, new FanIncreaseSpeedParameters { PercentageStep = percentageStep });
    }

    ///<summary>Controls the oscillation of a fan.</summary>
    ///<param name="target">The target for this service call</param>
    public void Oscillate(ServiceTarget target, FanOscillateParameters data)
    {
        _haContext.CallService("fan", "oscillate", target, data);
    }

    ///<summary>Controls the oscillation of a fan.</summary>
    ///<param name="oscillating">Turns oscillation on/off.</param>
    public void Oscillate(ServiceTarget target, bool oscillating)
    {
        _haContext.CallService("fan", "oscillate", target, new FanOscillateParameters { Oscillating = oscillating });
    }

    ///<summary>Sets a fan&apos;s rotation direction.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetDirection(ServiceTarget target, FanSetDirectionParameters data)
    {
        _haContext.CallService("fan", "set_direction", target, data);
    }

    ///<summary>Sets a fan&apos;s rotation direction.</summary>
    ///<param name="direction">Direction of the fan rotation.</param>
    public void SetDirection(ServiceTarget target, object direction)
    {
        _haContext.CallService("fan", "set_direction", target, new FanSetDirectionParameters { Direction = direction });
    }

    ///<summary>Sets the speed of a fan.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetPercentage(ServiceTarget target, FanSetPercentageParameters data)
    {
        _haContext.CallService("fan", "set_percentage", target, data);
    }

    ///<summary>Sets the speed of a fan.</summary>
    ///<param name="percentage">Speed of the fan.</param>
    public void SetPercentage(ServiceTarget target, long percentage)
    {
        _haContext.CallService("fan", "set_percentage", target, new FanSetPercentageParameters { Percentage = percentage });
    }

    ///<summary>Sets preset fan mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetPresetMode(ServiceTarget target, FanSetPresetModeParameters data)
    {
        _haContext.CallService("fan", "set_preset_mode", target, data);
    }

    ///<summary>Sets preset fan mode.</summary>
    ///<param name="presetMode">Preset fan mode. eg: auto</param>
    public void SetPresetMode(ServiceTarget target, string presetMode)
    {
        _haContext.CallService("fan", "set_preset_mode", target, new FanSetPresetModeParameters { PresetMode = presetMode });
    }

    ///<summary>Toggles a fan on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("fan", "toggle", target, data);
    }

    ///<summary>Turns fan off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("fan", "turn_off", target, data);
    }

    ///<summary>Turns fan on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, FanTurnOnParameters data)
    {
        _haContext.CallService("fan", "turn_on", target, data);
    }

    ///<summary>Turns fan on.</summary>
    ///<param name="percentage">Speed of the fan.</param>
    ///<param name="presetMode">Preset fan mode. eg: auto</param>
    public void TurnOn(ServiceTarget target, long? percentage = null, string? presetMode = null)
    {
        _haContext.CallService("fan", "turn_on", target, new FanTurnOnParameters { Percentage = percentage, PresetMode = presetMode });
    }
}

public partial record FanDecreaseSpeedParameters
{
    ///<summary>Percentage step by which the speed should be decreased.</summary>
    [JsonPropertyName("percentage_step")]
    public long? PercentageStep { get; init; }
}

public partial record FanIncreaseSpeedParameters
{
    ///<summary>Percentage step by which the speed should be increased.</summary>
    [JsonPropertyName("percentage_step")]
    public long? PercentageStep { get; init; }
}

public partial record FanOscillateParameters
{
    ///<summary>Turns oscillation on/off.</summary>
    [JsonPropertyName("oscillating")]
    public bool? Oscillating { get; init; }
}

public partial record FanSetDirectionParameters
{
    ///<summary>Direction of the fan rotation.</summary>
    [JsonPropertyName("direction")]
    public object? Direction { get; init; }
}

public partial record FanSetPercentageParameters
{
    ///<summary>Speed of the fan.</summary>
    [JsonPropertyName("percentage")]
    public long? Percentage { get; init; }
}

public partial record FanSetPresetModeParameters
{
    ///<summary>Preset fan mode. eg: auto</summary>
    [JsonPropertyName("preset_mode")]
    public string? PresetMode { get; init; }
}

public partial record FanTurnOnParameters
{
    ///<summary>Speed of the fan.</summary>
    [JsonPropertyName("percentage")]
    public long? Percentage { get; init; }

    ///<summary>Preset fan mode. eg: auto</summary>
    [JsonPropertyName("preset_mode")]
    public string? PresetMode { get; init; }
}

public partial class FfmpegServices
{
    private readonly IHaContext _haContext;
    public FfmpegServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sends a restart command to an FFmpeg-based sensor.</summary>
    public void Restart(FfmpegRestartParameters data)
    {
        _haContext.CallService("ffmpeg", "restart", null, data);
    }

    ///<summary>Sends a restart command to an FFmpeg-based sensor.</summary>
    ///<param name="entityId">Name of entity that will restart. Platform dependent.</param>
    public void Restart(string? entityId = null)
    {
        _haContext.CallService("ffmpeg", "restart", null, new FfmpegRestartParameters { EntityId = entityId });
    }

    ///<summary>Sends a start command to an FFmpeg-based sensor.</summary>
    public void Start(FfmpegStartParameters data)
    {
        _haContext.CallService("ffmpeg", "start", null, data);
    }

    ///<summary>Sends a start command to an FFmpeg-based sensor.</summary>
    ///<param name="entityId">Name of entity that will start. Platform dependent.</param>
    public void Start(string? entityId = null)
    {
        _haContext.CallService("ffmpeg", "start", null, new FfmpegStartParameters { EntityId = entityId });
    }

    ///<summary>Sends a stop command to an FFmpeg-based sensor.</summary>
    public void Stop(FfmpegStopParameters data)
    {
        _haContext.CallService("ffmpeg", "stop", null, data);
    }

    ///<summary>Sends a stop command to an FFmpeg-based sensor.</summary>
    ///<param name="entityId">Name of entity that will stop. Platform dependent.</param>
    public void Stop(string? entityId = null)
    {
        _haContext.CallService("ffmpeg", "stop", null, new FfmpegStopParameters { EntityId = entityId });
    }
}

public partial record FfmpegRestartParameters
{
    ///<summary>Name of entity that will restart. Platform dependent.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }
}

public partial record FfmpegStartParameters
{
    ///<summary>Name of entity that will start. Platform dependent.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }
}

public partial record FfmpegStopParameters
{
    ///<summary>Name of entity that will stop. Platform dependent.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }
}

public partial class FileServices
{
    private readonly IHaContext _haContext;
    public FileServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reads a file and returns the contents.</summary>
    public void ReadFile(FileReadFileParameters data)
    {
        _haContext.CallService("file", "read_file", null, data);
    }

    ///<summary>Reads a file and returns the contents.</summary>
    ///<param name="fileName">Name of the file to read. eg: www/my_file.json</param>
    ///<param name="fileEncoding">Encoding of the file (JSON, YAML.) eg: JSON</param>
    public void ReadFile(string? fileName = null, object? fileEncoding = null)
    {
        _haContext.CallService("file", "read_file", null, new FileReadFileParameters { FileName = fileName, FileEncoding = fileEncoding });
    }

    ///<summary>Reads a file and returns the contents.</summary>
    public Task<JsonElement?> ReadFileAsync(FileReadFileParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("file", "read_file", null, data);
    }

    ///<summary>Reads a file and returns the contents.</summary>
    ///<param name="fileName">Name of the file to read. eg: www/my_file.json</param>
    ///<param name="fileEncoding">Encoding of the file (JSON, YAML.) eg: JSON</param>
    public Task<JsonElement?> ReadFileAsync(string? fileName = null, object? fileEncoding = null)
    {
        return _haContext.CallServiceWithResponseAsync("file", "read_file", null, new FileReadFileParameters { FileName = fileName, FileEncoding = fileEncoding });
    }
}

public partial record FileReadFileParameters
{
    ///<summary>Name of the file to read. eg: www/my_file.json</summary>
    [JsonPropertyName("file_name")]
    public string? FileName { get; init; }

    ///<summary>Encoding of the file (JSON, YAML.) eg: JSON</summary>
    [JsonPropertyName("file_encoding")]
    public object? FileEncoding { get; init; }
}

public partial class FrontendServices
{
    private readonly IHaContext _haContext;
    public FrontendServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads themes from the YAML-configuration.</summary>
    public void ReloadThemes(object? data = null)
    {
        _haContext.CallService("frontend", "reload_themes", null, data);
    }

    ///<summary>Sets the default theme Home Assistant uses. Can be overridden by a user.</summary>
    public void SetTheme(FrontendSetThemeParameters data)
    {
        _haContext.CallService("frontend", "set_theme", null, data);
    }

    ///<summary>Sets the default theme Home Assistant uses. Can be overridden by a user.</summary>
    ///<param name="name">Name of a theme. eg: default</param>
    ///<param name="mode">Theme mode.</param>
    public void SetTheme(object name, object? mode = null)
    {
        _haContext.CallService("frontend", "set_theme", null, new FrontendSetThemeParameters { Name = name, Mode = mode });
    }
}

public partial record FrontendSetThemeParameters
{
    ///<summary>Name of a theme. eg: default</summary>
    [JsonPropertyName("name")]
    public object? Name { get; init; }

    ///<summary>Theme mode.</summary>
    [JsonPropertyName("mode")]
    public object? Mode { get; init; }
}

public partial class GoogleAssistantServices
{
    private readonly IHaContext _haContext;
    public GoogleAssistantServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sends a request_sync command to Google.</summary>
    public void RequestSync(GoogleAssistantRequestSyncParameters data)
    {
        _haContext.CallService("google_assistant", "request_sync", null, data);
    }

    ///<summary>Sends a request_sync command to Google.</summary>
    ///<param name="agentUserId">Only needed for automations. Specific Home Assistant user ID (not username, ID in Settings &gt; People &gt; Users &gt; under username) to sync with Google Assistant. Not needed when you use this action through Home Assistant frontend or API. Used in automation, script or other place where context.user_id is missing.</param>
    public void RequestSync(string? agentUserId = null)
    {
        _haContext.CallService("google_assistant", "request_sync", null, new GoogleAssistantRequestSyncParameters { AgentUserId = agentUserId });
    }
}

public partial record GoogleAssistantRequestSyncParameters
{
    ///<summary>Only needed for automations. Specific Home Assistant user ID (not username, ID in Settings &gt; People &gt; Users &gt; under username) to sync with Google Assistant. Not needed when you use this action through Home Assistant frontend or API. Used in automation, script or other place where context.user_id is missing.</summary>
    [JsonPropertyName("agent_user_id")]
    public string? AgentUserId { get; init; }
}

public partial class GoogleGenerativeAiConversationServices
{
    private readonly IHaContext _haContext;
    public GoogleGenerativeAiConversationServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Generate content from a prompt consisting of text and optionally images (deprecated)</summary>
    public void GenerateContent(GoogleGenerativeAiConversationGenerateContentParameters data)
    {
        _haContext.CallService("google_generative_ai_conversation", "generate_content", null, data);
    }

    ///<summary>Generate content from a prompt consisting of text and optionally images (deprecated)</summary>
    ///<param name="prompt">The prompt eg: Describe what you see in these images</param>
    ///<param name="filenames">Attachments to add to the prompt (images, PDFs, etc) eg: /config/www/image.jpg</param>
    public void GenerateContent(string prompt, IEnumerable<string>? filenames = null)
    {
        _haContext.CallService("google_generative_ai_conversation", "generate_content", null, new GoogleGenerativeAiConversationGenerateContentParameters { Prompt = prompt, Filenames = filenames });
    }

    ///<summary>Generate content from a prompt consisting of text and optionally images (deprecated)</summary>
    public Task<JsonElement?> GenerateContentAsync(GoogleGenerativeAiConversationGenerateContentParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("google_generative_ai_conversation", "generate_content", null, data);
    }

    ///<summary>Generate content from a prompt consisting of text and optionally images (deprecated)</summary>
    ///<param name="prompt">The prompt eg: Describe what you see in these images</param>
    ///<param name="filenames">Attachments to add to the prompt (images, PDFs, etc) eg: /config/www/image.jpg</param>
    public Task<JsonElement?> GenerateContentAsync(string prompt, IEnumerable<string>? filenames = null)
    {
        return _haContext.CallServiceWithResponseAsync("google_generative_ai_conversation", "generate_content", null, new GoogleGenerativeAiConversationGenerateContentParameters { Prompt = prompt, Filenames = filenames });
    }
}

public partial record GoogleGenerativeAiConversationGenerateContentParameters
{
    ///<summary>The prompt eg: Describe what you see in these images</summary>
    [JsonPropertyName("prompt")]
    public string? Prompt { get; init; }

    ///<summary>Attachments to add to the prompt (images, PDFs, etc) eg: /config/www/image.jpg</summary>
    [JsonPropertyName("filenames")]
    public IEnumerable<string>? Filenames { get; init; }
}

public partial class GoogleHomeServices
{
    private readonly IHaContext _haContext;
    public GoogleHomeServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Delete an alarm from a Google Home device.</summary>
    public void DeleteAlarm(GoogleHomeDeleteAlarmParameters data)
    {
        _haContext.CallService("google_home", "delete_alarm", null, data);
    }

    ///<summary>Delete an alarm from a Google Home device.</summary>
    ///<param name="entityId">Represents a Google Home device (sensor.xxxx_alarms). eg: sensor.kitchen_alarms</param>
    ///<param name="skipRefresh">Skip refreshing Google Home devices after deleting an alarm. eg: True</param>
    ///<param name="alarmId">ID of an alarm (alarm/xxx). eg: alarm/6ed06a56-8a58-c6e3-a7d4-03f92c9d8a51</param>
    public void DeleteAlarm(string entityId, string alarmId, bool? skipRefresh = null)
    {
        _haContext.CallService("google_home", "delete_alarm", null, new GoogleHomeDeleteAlarmParameters { EntityId = entityId, SkipRefresh = skipRefresh, AlarmId = alarmId });
    }

    ///<summary>Delete a timer from a Google Home device.</summary>
    public void DeleteTimer(GoogleHomeDeleteTimerParameters data)
    {
        _haContext.CallService("google_home", "delete_timer", null, data);
    }

    ///<summary>Delete a timer from a Google Home device.</summary>
    ///<param name="entityId">Represents a Google Home device (sensor.xxxx_alarms). eg: sensor.kitchen_timers</param>
    ///<param name="skipRefresh">Skip refreshing Google Home devices after deleting a timer. eg: True</param>
    ///<param name="timerId">ID of a timer (timer/xxx). eg: timer/6ed06a56-8a58-c6e3-a7d4-03f92c9d8a51</param>
    public void DeleteTimer(string entityId, string timerId, bool? skipRefresh = null)
    {
        _haContext.CallService("google_home", "delete_timer", null, new GoogleHomeDeleteTimerParameters { EntityId = entityId, SkipRefresh = skipRefresh, TimerId = timerId });
    }

    ///<summary>Reboot a Google Home device.</summary>
    ///<param name="target">The target for this service call</param>
    public void RebootDevice(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("google_home", "reboot_device", target, data);
    }

    ///<summary>Refresh the status of all Google Home Devices.</summary>
    public void RefreshDevices(object? data = null)
    {
        _haContext.CallService("google_home", "refresh_devices", null, data);
    }
}

public partial record GoogleHomeDeleteAlarmParameters
{
    ///<summary>Represents a Google Home device (sensor.xxxx_alarms). eg: sensor.kitchen_alarms</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>Skip refreshing Google Home devices after deleting an alarm. eg: True</summary>
    [JsonPropertyName("skip_refresh")]
    public bool? SkipRefresh { get; init; }

    ///<summary>ID of an alarm (alarm/xxx). eg: alarm/6ed06a56-8a58-c6e3-a7d4-03f92c9d8a51</summary>
    [JsonPropertyName("alarm_id")]
    public string? AlarmId { get; init; }
}

public partial record GoogleHomeDeleteTimerParameters
{
    ///<summary>Represents a Google Home device (sensor.xxxx_alarms). eg: sensor.kitchen_timers</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>Skip refreshing Google Home devices after deleting a timer. eg: True</summary>
    [JsonPropertyName("skip_refresh")]
    public bool? SkipRefresh { get; init; }

    ///<summary>ID of a timer (timer/xxx). eg: timer/6ed06a56-8a58-c6e3-a7d4-03f92c9d8a51</summary>
    [JsonPropertyName("timer_id")]
    public string? TimerId { get; init; }
}

public partial class GroupServices
{
    private readonly IHaContext _haContext;
    public GroupServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads group configuration, entities, and notify services from YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("group", "reload", null, data);
    }

    ///<summary>Removes a group.</summary>
    public void Remove(GroupRemoveParameters data)
    {
        _haContext.CallService("group", "remove", null, data);
    }

    ///<summary>Removes a group.</summary>
    ///<param name="objectId">Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id]. eg: test_group</param>
    public void Remove(object objectId)
    {
        _haContext.CallService("group", "remove", null, new GroupRemoveParameters { ObjectId = objectId });
    }

    ///<summary>Creates/Updates a group.</summary>
    public void Set(GroupSetParameters data)
    {
        _haContext.CallService("group", "set", null, data);
    }

    ///<summary>Creates/Updates a group.</summary>
    ///<param name="objectId">Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id]. eg: test_group</param>
    ///<param name="name">Name of the group. eg: My test group</param>
    ///<param name="icon">Name of the icon for the group. eg: mdi:camera</param>
    ///<param name="entities">List of all members in the group. Cannot be used in combination with `Add entities` or `Remove entities`. eg: domain.entity_id1, domain.entity_id2</param>
    ///<param name="addEntities">List of members to be added to the group. Cannot be used in combination with `Entities` or `Remove entities`. eg: domain.entity_id1, domain.entity_id2</param>
    ///<param name="removeEntities">List of members to be removed from a group. Cannot be used in combination with `Entities` or `Add entities`. eg: domain.entity_id1, domain.entity_id2</param>
    ///<param name="all">Enable this option if the group should only be used when all entities are in state `on`.</param>
    public void Set(string objectId, string? name = null, object? icon = null, IEnumerable<string>? entities = null, IEnumerable<string>? addEntities = null, IEnumerable<string>? removeEntities = null, bool? all = null)
    {
        _haContext.CallService("group", "set", null, new GroupSetParameters { ObjectId = objectId, Name = name, Icon = icon, Entities = entities, AddEntities = addEntities, RemoveEntities = removeEntities, All = all });
    }
}

public partial record GroupRemoveParameters
{
    ///<summary>Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id]. eg: test_group</summary>
    [JsonPropertyName("object_id")]
    public object? ObjectId { get; init; }
}

public partial record GroupSetParameters
{
    ///<summary>Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id]. eg: test_group</summary>
    [JsonPropertyName("object_id")]
    public string? ObjectId { get; init; }

    ///<summary>Name of the group. eg: My test group</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Name of the icon for the group. eg: mdi:camera</summary>
    [JsonPropertyName("icon")]
    public object? Icon { get; init; }

    ///<summary>List of all members in the group. Cannot be used in combination with `Add entities` or `Remove entities`. eg: domain.entity_id1, domain.entity_id2</summary>
    [JsonPropertyName("entities")]
    public IEnumerable<string>? Entities { get; init; }

    ///<summary>List of members to be added to the group. Cannot be used in combination with `Entities` or `Remove entities`. eg: domain.entity_id1, domain.entity_id2</summary>
    [JsonPropertyName("add_entities")]
    public IEnumerable<string>? AddEntities { get; init; }

    ///<summary>List of members to be removed from a group. Cannot be used in combination with `Entities` or `Add entities`. eg: domain.entity_id1, domain.entity_id2</summary>
    [JsonPropertyName("remove_entities")]
    public IEnumerable<string>? RemoveEntities { get; init; }

    ///<summary>Enable this option if the group should only be used when all entities are in state `on`.</summary>
    [JsonPropertyName("all")]
    public bool? All { get; init; }
}

public partial class HassioServices
{
    private readonly IHaContext _haContext;
    public HassioServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Restarts an add-on.</summary>
    public void AddonRestart(HassioAddonRestartParameters data)
    {
        _haContext.CallService("hassio", "addon_restart", null, data);
    }

    ///<summary>Restarts an add-on.</summary>
    ///<param name="addon">The add-on to restart. eg: core_ssh</param>
    public void AddonRestart(object addon)
    {
        _haContext.CallService("hassio", "addon_restart", null, new HassioAddonRestartParameters { Addon = addon });
    }

    ///<summary>Starts an add-on.</summary>
    public void AddonStart(HassioAddonStartParameters data)
    {
        _haContext.CallService("hassio", "addon_start", null, data);
    }

    ///<summary>Starts an add-on.</summary>
    ///<param name="addon">The add-on to start. eg: core_ssh</param>
    public void AddonStart(object addon)
    {
        _haContext.CallService("hassio", "addon_start", null, new HassioAddonStartParameters { Addon = addon });
    }

    ///<summary>Writes data to the add-on&apos;s standard input.</summary>
    public void AddonStdin(HassioAddonStdinParameters data)
    {
        _haContext.CallService("hassio", "addon_stdin", null, data);
    }

    ///<summary>Writes data to the add-on&apos;s standard input.</summary>
    ///<param name="addon">The add-on to write to. eg: core_ssh</param>
    public void AddonStdin(object addon)
    {
        _haContext.CallService("hassio", "addon_stdin", null, new HassioAddonStdinParameters { Addon = addon });
    }

    ///<summary>Stops an add-on.</summary>
    public void AddonStop(HassioAddonStopParameters data)
    {
        _haContext.CallService("hassio", "addon_stop", null, data);
    }

    ///<summary>Stops an add-on.</summary>
    ///<param name="addon">The add-on to stop. eg: core_ssh</param>
    public void AddonStop(object addon)
    {
        _haContext.CallService("hassio", "addon_stop", null, new HassioAddonStopParameters { Addon = addon });
    }

    ///<summary>Creates a full backup.</summary>
    public void BackupFull(HassioBackupFullParameters data)
    {
        _haContext.CallService("hassio", "backup_full", null, data);
    }

    ///<summary>Creates a full backup.</summary>
    ///<param name="name">Optional (default = current date and time). eg: Backup 1</param>
    ///<param name="password">Password to protect the backup with. eg: password</param>
    ///<param name="compressed">Compresses the backup files.</param>
    ///<param name="location">Name of a backup network storage to host backups. eg: my_backup_mount</param>
    ///<param name="homeassistantExcludeDatabase">Exclude the Home Assistant database file from the backup.</param>
    public void BackupFull(string? name = null, string? password = null, bool? compressed = null, object? location = null, bool? homeassistantExcludeDatabase = null)
    {
        _haContext.CallService("hassio", "backup_full", null, new HassioBackupFullParameters { Name = name, Password = password, Compressed = compressed, Location = location, HomeassistantExcludeDatabase = homeassistantExcludeDatabase });
    }

    ///<summary>Creates a partial backup.</summary>
    public void BackupPartial(HassioBackupPartialParameters data)
    {
        _haContext.CallService("hassio", "backup_partial", null, data);
    }

    ///<summary>Creates a partial backup.</summary>
    ///<param name="homeassistant">Includes Home Assistant settings in the backup.</param>
    ///<param name="homeassistantExcludeDatabase">Exclude the Home Assistant database file from the backup.</param>
    ///<param name="addons">List of add-ons to include in the backup. Use the name slug of each add-on. eg: [&quot;core_ssh&quot;,&quot;core_samba&quot;,&quot;core_mosquitto&quot;]</param>
    ///<param name="folders">List of directories to include in the backup. eg: [&quot;homeassistant&quot;,&quot;share&quot;]</param>
    ///<param name="name">Optional (default = current date and time). eg: Partial backup 1</param>
    ///<param name="password">Password to protect the backup with. eg: password</param>
    ///<param name="compressed">Compresses the backup files.</param>
    ///<param name="location">Name of a backup network storage to host backups. eg: my_backup_mount</param>
    public void BackupPartial(bool? homeassistant = null, bool? homeassistantExcludeDatabase = null, object? addons = null, object? folders = null, string? name = null, string? password = null, bool? compressed = null, object? location = null)
    {
        _haContext.CallService("hassio", "backup_partial", null, new HassioBackupPartialParameters { Homeassistant = homeassistant, HomeassistantExcludeDatabase = homeassistantExcludeDatabase, Addons = addons, Folders = folders, Name = name, Password = password, Compressed = compressed, Location = location });
    }

    ///<summary>Reboots the host system.</summary>
    public void HostReboot(object? data = null)
    {
        _haContext.CallService("hassio", "host_reboot", null, data);
    }

    ///<summary>Powers off the host system.</summary>
    public void HostShutdown(object? data = null)
    {
        _haContext.CallService("hassio", "host_shutdown", null, data);
    }

    ///<summary>Restores from full backup.</summary>
    public void RestoreFull(HassioRestoreFullParameters data)
    {
        _haContext.CallService("hassio", "restore_full", null, data);
    }

    ///<summary>Restores from full backup.</summary>
    ///<param name="slug">Slug of backup to restore from.</param>
    ///<param name="password">Optional password. eg: password</param>
    public void RestoreFull(string slug, string? password = null)
    {
        _haContext.CallService("hassio", "restore_full", null, new HassioRestoreFullParameters { Slug = slug, Password = password });
    }

    ///<summary>Restores from a partial backup.</summary>
    public void RestorePartial(HassioRestorePartialParameters data)
    {
        _haContext.CallService("hassio", "restore_partial", null, data);
    }

    ///<summary>Restores from a partial backup.</summary>
    ///<param name="slug">Slug of backup to restore from.</param>
    ///<param name="homeassistant">Restores Home Assistant.</param>
    ///<param name="folders">List of directories to restore from the backup. eg: [&quot;homeassistant&quot;,&quot;share&quot;]</param>
    ///<param name="addons">List of add-ons to restore from the backup. Use the name slug of each add-on. eg: [&quot;core_ssh&quot;,&quot;core_samba&quot;,&quot;core_mosquitto&quot;]</param>
    ///<param name="password">Optional password. eg: password</param>
    public void RestorePartial(string slug, bool? homeassistant = null, object? folders = null, object? addons = null, string? password = null)
    {
        _haContext.CallService("hassio", "restore_partial", null, new HassioRestorePartialParameters { Slug = slug, Homeassistant = homeassistant, Folders = folders, Addons = addons, Password = password });
    }
}

public partial record HassioAddonRestartParameters
{
    ///<summary>The add-on to restart. eg: core_ssh</summary>
    [JsonPropertyName("addon")]
    public object? Addon { get; init; }
}

public partial record HassioAddonStartParameters
{
    ///<summary>The add-on to start. eg: core_ssh</summary>
    [JsonPropertyName("addon")]
    public object? Addon { get; init; }
}

public partial record HassioAddonStdinParameters
{
    ///<summary>The add-on to write to. eg: core_ssh</summary>
    [JsonPropertyName("addon")]
    public object? Addon { get; init; }
}

public partial record HassioAddonStopParameters
{
    ///<summary>The add-on to stop. eg: core_ssh</summary>
    [JsonPropertyName("addon")]
    public object? Addon { get; init; }
}

public partial record HassioBackupFullParameters
{
    ///<summary>Optional (default = current date and time). eg: Backup 1</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Password to protect the backup with. eg: password</summary>
    [JsonPropertyName("password")]
    public string? Password { get; init; }

    ///<summary>Compresses the backup files.</summary>
    [JsonPropertyName("compressed")]
    public bool? Compressed { get; init; }

    ///<summary>Name of a backup network storage to host backups. eg: my_backup_mount</summary>
    [JsonPropertyName("location")]
    public object? Location { get; init; }

    ///<summary>Exclude the Home Assistant database file from the backup.</summary>
    [JsonPropertyName("homeassistant_exclude_database")]
    public bool? HomeassistantExcludeDatabase { get; init; }
}

public partial record HassioBackupPartialParameters
{
    ///<summary>Includes Home Assistant settings in the backup.</summary>
    [JsonPropertyName("homeassistant")]
    public bool? Homeassistant { get; init; }

    ///<summary>Exclude the Home Assistant database file from the backup.</summary>
    [JsonPropertyName("homeassistant_exclude_database")]
    public bool? HomeassistantExcludeDatabase { get; init; }

    ///<summary>List of add-ons to include in the backup. Use the name slug of each add-on. eg: [&quot;core_ssh&quot;,&quot;core_samba&quot;,&quot;core_mosquitto&quot;]</summary>
    [JsonPropertyName("addons")]
    public object? Addons { get; init; }

    ///<summary>List of directories to include in the backup. eg: [&quot;homeassistant&quot;,&quot;share&quot;]</summary>
    [JsonPropertyName("folders")]
    public object? Folders { get; init; }

    ///<summary>Optional (default = current date and time). eg: Partial backup 1</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Password to protect the backup with. eg: password</summary>
    [JsonPropertyName("password")]
    public string? Password { get; init; }

    ///<summary>Compresses the backup files.</summary>
    [JsonPropertyName("compressed")]
    public bool? Compressed { get; init; }

    ///<summary>Name of a backup network storage to host backups. eg: my_backup_mount</summary>
    [JsonPropertyName("location")]
    public object? Location { get; init; }
}

public partial record HassioRestoreFullParameters
{
    ///<summary>Slug of backup to restore from.</summary>
    [JsonPropertyName("slug")]
    public string? Slug { get; init; }

    ///<summary>Optional password. eg: password</summary>
    [JsonPropertyName("password")]
    public string? Password { get; init; }
}

public partial record HassioRestorePartialParameters
{
    ///<summary>Slug of backup to restore from.</summary>
    [JsonPropertyName("slug")]
    public string? Slug { get; init; }

    ///<summary>Restores Home Assistant.</summary>
    [JsonPropertyName("homeassistant")]
    public bool? Homeassistant { get; init; }

    ///<summary>List of directories to restore from the backup. eg: [&quot;homeassistant&quot;,&quot;share&quot;]</summary>
    [JsonPropertyName("folders")]
    public object? Folders { get; init; }

    ///<summary>List of add-ons to restore from the backup. Use the name slug of each add-on. eg: [&quot;core_ssh&quot;,&quot;core_samba&quot;,&quot;core_mosquitto&quot;]</summary>
    [JsonPropertyName("addons")]
    public object? Addons { get; init; }

    ///<summary>Optional password. eg: password</summary>
    [JsonPropertyName("password")]
    public string? Password { get; init; }
}

public partial class HomeassistantServices
{
    private readonly IHaContext _haContext;
    public HomeassistantServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Adds an alias to an area.</summary>
    public void AddAliasToArea(HomeassistantAddAliasToAreaParameters data)
    {
        _haContext.CallService("homeassistant", "add_alias_to_area", null, data);
    }

    ///<summary>Adds an alias to an area.</summary>
    ///<param name="areaId">The ID of the area to add the alias to.</param>
    ///<param name="alias">The alias (or list of aliasses) to add to the area.</param>
    public void AddAliasToArea(string areaId, object @alias)
    {
        _haContext.CallService("homeassistant", "add_alias_to_area", null, new HomeassistantAddAliasToAreaParameters { AreaId = areaId, Alias = @alias });
    }

    ///<summary>Adds an alias to a floor.</summary>
    public void AddAliasToFloor(HomeassistantAddAliasToFloorParameters data)
    {
        _haContext.CallService("homeassistant", "add_alias_to_floor", null, data);
    }

    ///<summary>Adds an alias to a floor.</summary>
    ///<param name="floorId">The ID of the floor to add the alias to.</param>
    ///<param name="alias">The alias (or list of aliasses) to add to the floor.</param>
    public void AddAliasToFloor(object floorId, object @alias)
    {
        _haContext.CallService("homeassistant", "add_alias_to_floor", null, new HomeassistantAddAliasToFloorParameters { FloorId = floorId, Alias = @alias });
    }

    ///<summary>Adds an area to a floor. Please note, if the area is already on a floor, it will be removed from the previous floor.</summary>
    public void AddAreaToFloor(HomeassistantAddAreaToFloorParameters data)
    {
        _haContext.CallService("homeassistant", "add_area_to_floor", null, data);
    }

    ///<summary>Adds an area to a floor. Please note, if the area is already on a floor, it will be removed from the previous floor.</summary>
    ///<param name="floorId">The ID of the floor to add the area on.</param>
    ///<param name="areaId">The ID of the area(s) to add to the floor.</param>
    public void AddAreaToFloor(object floorId, IEnumerable<string> areaId)
    {
        _haContext.CallService("homeassistant", "add_area_to_floor", null, new HomeassistantAddAreaToFloorParameters { FloorId = floorId, AreaId = areaId });
    }

    ///<summary>Adds an device to an area. Please note, if the device is already in an area, it will be removed from the previous area.</summary>
    public void AddDeviceToArea(HomeassistantAddDeviceToAreaParameters data)
    {
        _haContext.CallService("homeassistant", "add_device_to_area", null, data);
    }

    ///<summary>Adds an device to an area. Please note, if the device is already in an area, it will be removed from the previous area.</summary>
    ///<param name="areaId">The ID of the area to add the device to.</param>
    ///<param name="deviceId">The ID of the device(s) to add to the area.</param>
    public void AddDeviceToArea(string areaId, IEnumerable<string> deviceId)
    {
        _haContext.CallService("homeassistant", "add_device_to_area", null, new HomeassistantAddDeviceToAreaParameters { AreaId = areaId, DeviceId = deviceId });
    }

    ///<summary>Adds an entity to an area. Please note, if the enity is already in an area, it will be removed from the previous area. This will override the area the device, that provides this entity, is in.</summary>
    public void AddEntityToArea(HomeassistantAddEntityToAreaParameters data)
    {
        _haContext.CallService("homeassistant", "add_entity_to_area", null, data);
    }

    ///<summary>Adds an entity to an area. Please note, if the enity is already in an area, it will be removed from the previous area. This will override the area the device, that provides this entity, is in.</summary>
    ///<param name="areaId">The ID of the area to add the entity to.</param>
    ///<param name="entityId">The ID of the entity (or entities) to add to the area.</param>
    public void AddEntityToArea(string areaId, IEnumerable<string> entityId)
    {
        _haContext.CallService("homeassistant", "add_entity_to_area", null, new HomeassistantAddEntityToAreaParameters { AreaId = areaId, EntityId = entityId });
    }

    ///<summary>Adds a label to an area. If multiple labels or multiple areas are provided, all combinations will be added.</summary>
    public void AddLabelToArea(HomeassistantAddLabelToAreaParameters data)
    {
        _haContext.CallService("homeassistant", "add_label_to_area", null, data);
    }

    ///<summary>Adds a label to an area. If multiple labels or multiple areas are provided, all combinations will be added.</summary>
    ///<param name="labelId">The ID(s) of the label(s) to add the area(s).</param>
    ///<param name="areaId">The ID(s) of the area(s) to add the label(s) to.</param>
    public void AddLabelToArea(IEnumerable<object> labelId, IEnumerable<string> areaId)
    {
        _haContext.CallService("homeassistant", "add_label_to_area", null, new HomeassistantAddLabelToAreaParameters { LabelId = labelId, AreaId = areaId });
    }

    ///<summary>Adds a label to a device. If multiple labels or multiple devices are provided, all combinations will be added.</summary>
    public void AddLabelToDevice(HomeassistantAddLabelToDeviceParameters data)
    {
        _haContext.CallService("homeassistant", "add_label_to_device", null, data);
    }

    ///<summary>Adds a label to a device. If multiple labels or multiple devices are provided, all combinations will be added.</summary>
    ///<param name="labelId">The ID(s) of the label(s) to add the device(s).</param>
    ///<param name="deviceId">The ID(s) of the device(s) to add the label(s) to.</param>
    public void AddLabelToDevice(IEnumerable<object> labelId, IEnumerable<string> deviceId)
    {
        _haContext.CallService("homeassistant", "add_label_to_device", null, new HomeassistantAddLabelToDeviceParameters { LabelId = labelId, DeviceId = deviceId });
    }

    ///<summary>Adds a label to an entity. If multiple labels or multiple entities are provided, all combinations will be added.</summary>
    public void AddLabelToEntity(HomeassistantAddLabelToEntityParameters data)
    {
        _haContext.CallService("homeassistant", "add_label_to_entity", null, data);
    }

    ///<summary>Adds a label to an entity. If multiple labels or multiple entities are provided, all combinations will be added.</summary>
    ///<param name="labelId">The ID(s) of the label(s) to add the entity/entities.</param>
    ///<param name="entityId">The ID(s) of the entity/entities to add the label(s) to.</param>
    public void AddLabelToEntity(IEnumerable<object> labelId, IEnumerable<string> entityId)
    {
        _haContext.CallService("homeassistant", "add_label_to_entity", null, new HomeassistantAddLabelToEntityParameters { LabelId = labelId, EntityId = entityId });
    }

    ///<summary>Checks the Home Assistant YAML-configuration files for errors. Errors will be shown in the Home Assistant logs.</summary>
    public void CheckConfig(object? data = null)
    {
        _haContext.CallService("homeassistant", "check_config", null, data);
    }

    ///<summary>Creates a new area on the fly.</summary>
    public void CreateArea(HomeassistantCreateAreaParameters data)
    {
        _haContext.CallService("homeassistant", "create_area", null, data);
    }

    ///<summary>Creates a new area on the fly.</summary>
    ///<param name="name">The name of the area to create.</param>
    ///<param name="icon">Icon to use for the area.</param>
    ///<param name="aliases">A list of aliases for the area. This is useful if you want to use the area in a different language or different nickname.</param>
    public void CreateArea(string name, object? icon = null, object? aliases = null)
    {
        _haContext.CallService("homeassistant", "create_area", null, new HomeassistantCreateAreaParameters { Name = name, Icon = icon, Aliases = aliases });
    }

    ///<summary>Creates a new floor on the fly.</summary>
    public void CreateFloor(HomeassistantCreateFloorParameters data)
    {
        _haContext.CallService("homeassistant", "create_floor", null, data);
    }

    ///<summary>Creates a new floor on the fly.</summary>
    ///<param name="name">The name of the floor to create.</param>
    ///<param name="icon">Icon to use for the floor.</param>
    ///<param name="level">The level the floor is on in your home.</param>
    ///<param name="aliases">A list of aliases for the floor. This is useful if you want to use the floor in a different language or different nickname.</param>
    public void CreateFloor(string name, object? icon = null, long? level = null, object? aliases = null)
    {
        _haContext.CallService("homeassistant", "create_floor", null, new HomeassistantCreateFloorParameters { Name = name, Icon = icon, Level = level, Aliases = aliases });
    }

    ///<summary>Creates a new label on the fly.</summary>
    public void CreateLabel(HomeassistantCreateLabelParameters data)
    {
        _haContext.CallService("homeassistant", "create_label", null, data);
    }

    ///<summary>Creates a new label on the fly.</summary>
    ///<param name="name">The name of the label to create.</param>
    ///<param name="description">Description for the label.</param>
    ///<param name="icon">Icon to use for the label.</param>
    ///<param name="color">Color to use for the label. Can be a color name from the list, or a hex color code (like #FF0000).</param>
    public void CreateLabel(string name, string description, object? icon = null, object? color = null)
    {
        _haContext.CallService("homeassistant", "create_label", null, new HomeassistantCreateLabelParameters { Name = name, Description = description, Icon = icon, Color = color });
    }

    ///<summary>Deletes all orphaned entities that no longer have an integration that claim/provide them. Please note, if the integration was just removed, it might need a restart for Home Assistant to realize they are orphaned. **WARNING** Entities might have been marked orphaned because an integration is offline or not working since Home Assistant started. Calling this action will delete those entities as well.</summary>
    public void DeleteAllOrphanedEntities(object? data = null)
    {
        _haContext.CallService("homeassistant", "delete_all_orphaned_entities", null, data);
    }

    ///<summary>Deletes a new area on the fly.</summary>
    public void DeleteArea(HomeassistantDeleteAreaParameters data)
    {
        _haContext.CallService("homeassistant", "delete_area", null, data);
    }

    ///<summary>Deletes a new area on the fly.</summary>
    ///<param name="areaId">The ID of the area to delete.</param>
    public void DeleteArea(string areaId)
    {
        _haContext.CallService("homeassistant", "delete_area", null, new HomeassistantDeleteAreaParameters { AreaId = areaId });
    }

    ///<summary>Deletes a floor on the fly.</summary>
    public void DeleteFloor(HomeassistantDeleteFloorParameters data)
    {
        _haContext.CallService("homeassistant", "delete_floor", null, data);
    }

    ///<summary>Deletes a floor on the fly.</summary>
    ///<param name="floorId">The ID of the floor to delete.</param>
    public void DeleteFloor(object floorId)
    {
        _haContext.CallService("homeassistant", "delete_floor", null, new HomeassistantDeleteFloorParameters { FloorId = floorId });
    }

    ///<summary>Deletes a label on the fly.</summary>
    public void DeleteLabel(HomeassistantDeleteLabelParameters data)
    {
        _haContext.CallService("homeassistant", "delete_label", null, data);
    }

    ///<summary>Deletes a label on the fly.</summary>
    ///<param name="labelId">The ID of the label to delete.</param>
    public void DeleteLabel(object labelId)
    {
        _haContext.CallService("homeassistant", "delete_label", null, new HomeassistantDeleteLabelParameters { LabelId = labelId });
    }

    ///<summary>Disables an integration configuration entry.</summary>
    public void DisableConfigEntry(HomeassistantDisableConfigEntryParameters data)
    {
        _haContext.CallService("homeassistant", "disable_config_entry", null, data);
    }

    ///<summary>Disables an integration configuration entry.</summary>
    ///<param name="configEntryId">The integration configuration entry to disable.</param>
    public void DisableConfigEntry(object configEntryId)
    {
        _haContext.CallService("homeassistant", "disable_config_entry", null, new HomeassistantDisableConfigEntryParameters { ConfigEntryId = configEntryId });
    }

    ///<summary>Disables a device on the fly.</summary>
    public void DisableDevice(HomeassistantDisableDeviceParameters data)
    {
        _haContext.CallService("homeassistant", "disable_device", null, data);
    }

    ///<summary>Disables a device on the fly.</summary>
    ///<param name="deviceId">The device(s) to disable.</param>
    public void DisableDevice(IEnumerable<string> deviceId)
    {
        _haContext.CallService("homeassistant", "disable_device", null, new HomeassistantDisableDeviceParameters { DeviceId = deviceId });
    }

    ///<summary>Disables an entity (or entities) on the fly.</summary>
    public void DisableEntity(HomeassistantDisableEntityParameters data)
    {
        _haContext.CallService("homeassistant", "disable_entity", null, data);
    }

    ///<summary>Disables an entity (or entities) on the fly.</summary>
    ///<param name="entityId">The entity/entities to disable.</param>
    public void DisableEntity(IEnumerable<string> entityId)
    {
        _haContext.CallService("homeassistant", "disable_entity", null, new HomeassistantDisableEntityParameters { EntityId = entityId });
    }

    ///<summary>Disables polling for updates for an integration configuration entry.</summary>
    public void DisablePolling(HomeassistantDisablePollingParameters data)
    {
        _haContext.CallService("homeassistant", "disable_polling", null, data);
    }

    ///<summary>Disables polling for updates for an integration configuration entry.</summary>
    ///<param name="configEntryId">The integration configuration entry to disable polling for.</param>
    public void DisablePolling(object configEntryId)
    {
        _haContext.CallService("homeassistant", "disable_polling", null, new HomeassistantDisablePollingParameters { ConfigEntryId = configEntryId });
    }

    ///<summary>Enables an integration configuration entry.</summary>
    public void EnableConfigEntry(HomeassistantEnableConfigEntryParameters data)
    {
        _haContext.CallService("homeassistant", "enable_config_entry", null, data);
    }

    ///<summary>Enables an integration configuration entry.</summary>
    ///<param name="configEntryId">The integration configuration entry to enable.</param>
    public void EnableConfigEntry(object configEntryId)
    {
        _haContext.CallService("homeassistant", "enable_config_entry", null, new HomeassistantEnableConfigEntryParameters { ConfigEntryId = configEntryId });
    }

    ///<summary>Enables a device on the fly.</summary>
    public void EnableDevice(HomeassistantEnableDeviceParameters data)
    {
        _haContext.CallService("homeassistant", "enable_device", null, data);
    }

    ///<summary>Enables a device on the fly.</summary>
    ///<param name="deviceId">The device(s) to enable.</param>
    public void EnableDevice(IEnumerable<string> deviceId)
    {
        _haContext.CallService("homeassistant", "enable_device", null, new HomeassistantEnableDeviceParameters { DeviceId = deviceId });
    }

    ///<summary>Enables an entity (or entities) on the fly.</summary>
    public void EnableEntity(HomeassistantEnableEntityParameters data)
    {
        _haContext.CallService("homeassistant", "enable_entity", null, data);
    }

    ///<summary>Enables an entity (or entities) on the fly.</summary>
    ///<param name="entityId">The entity/entities to enable.</param>
    public void EnableEntity(IEnumerable<string> entityId)
    {
        _haContext.CallService("homeassistant", "enable_entity", null, new HomeassistantEnableEntityParameters { EntityId = entityId });
    }

    ///<summary>Enables polling for updates for an integration configuration entry.</summary>
    public void EnablePolling(HomeassistantEnablePollingParameters data)
    {
        _haContext.CallService("homeassistant", "enable_polling", null, data);
    }

    ///<summary>Enables polling for updates for an integration configuration entry.</summary>
    ///<param name="configEntryId">The integration configuration entry to enable polling for.</param>
    public void EnablePolling(object configEntryId)
    {
        _haContext.CallService("homeassistant", "enable_polling", null, new HomeassistantEnablePollingParameters { ConfigEntryId = configEntryId });
    }

    ///<summary>Hides an entity (or entities) on the fly.</summary>
    public void HideEntity(HomeassistantHideEntityParameters data)
    {
        _haContext.CallService("homeassistant", "hide_entity", null, data);
    }

    ///<summary>Hides an entity (or entities) on the fly.</summary>
    ///<param name="entityId">The entity/entities to hide.</param>
    public void HideEntity(IEnumerable<string> entityId)
    {
        _haContext.CallService("homeassistant", "hide_entity", null, new HomeassistantHideEntityParameters { EntityId = entityId });
    }

    ///<summary>Ignore all currently discovered devices that are shown on the integrations dashboard. This will not ignore devices that are discovered after this.</summary>
    public void IgnoreAllDiscovered(HomeassistantIgnoreAllDiscoveredParameters data)
    {
        _haContext.CallService("homeassistant", "ignore_all_discovered", null, data);
    }

    ///<summary>Ignore all currently discovered devices that are shown on the integrations dashboard. This will not ignore devices that are discovered after this.</summary>
    ///<param name="domain">The integration domain to ignore all discovered devices for. If not provided, all domains will be considered to be ignored.</param>
    public void IgnoreAllDiscovered(string? domain = null)
    {
        _haContext.CallService("homeassistant", "ignore_all_discovered", null, new HomeassistantIgnoreAllDiscoveredParameters { Domain = domain });
    }

    ///<summary>Lists all orphaned database entities unclaimed by any integration.</summary>
    public void ListOrphanedDatabaseEntities(object? data = null)
    {
        _haContext.CallService("homeassistant", "list_orphaned_database_entities", null, data);
    }

    ///<summary>Lists all orphaned database entities unclaimed by any integration.</summary>
    public Task<JsonElement?> ListOrphanedDatabaseEntitiesAsync(object? data = null)
    {
        return _haContext.CallServiceWithResponseAsync("homeassistant", "list_orphaned_database_entities", null, data);
    }

    ///<summary>Reloads all YAML configuration that can be reloaded without restarting Home Assistant.</summary>
    public void ReloadAll(object? data = null)
    {
        _haContext.CallService("homeassistant", "reload_all", null, data);
    }

    ///<summary>Reloads the specified config entry.</summary>
    ///<param name="target">The target for this service call</param>
    public void ReloadConfigEntry(ServiceTarget target, HomeassistantReloadConfigEntryParameters data)
    {
        _haContext.CallService("homeassistant", "reload_config_entry", target, data);
    }

    ///<summary>Reloads the specified config entry.</summary>
    ///<param name="entryId">The configuration entry ID of the entry to be reloaded. eg: 8955375327824e14ba89e4b29cc3ec9a</param>
    public void ReloadConfigEntry(ServiceTarget target, object? entryId = null)
    {
        _haContext.CallService("homeassistant", "reload_config_entry", target, new HomeassistantReloadConfigEntryParameters { EntryId = entryId });
    }

    ///<summary>Reloads the Core configuration from the YAML-configuration.</summary>
    public void ReloadCoreConfig(object? data = null)
    {
        _haContext.CallService("homeassistant", "reload_core_config", null, data);
    }

    ///<summary>Reloads Jinja2 templates found in the `custom_templates` folder in your config. New values will be applied on the next render of the template.</summary>
    public void ReloadCustomTemplates(object? data = null)
    {
        _haContext.CallService("homeassistant", "reload_custom_templates", null, data);
    }

    ///<summary>Removes an alias from an area.</summary>
    public void RemoveAliasFromArea(HomeassistantRemoveAliasFromAreaParameters data)
    {
        _haContext.CallService("homeassistant", "remove_alias_from_area", null, data);
    }

    ///<summary>Removes an alias from an area.</summary>
    ///<param name="areaId">The ID of the area to remove the alias from.</param>
    ///<param name="alias">The alias (or list of aliasses) to remove from the area.</param>
    public void RemoveAliasFromArea(string areaId, object @alias)
    {
        _haContext.CallService("homeassistant", "remove_alias_from_area", null, new HomeassistantRemoveAliasFromAreaParameters { AreaId = areaId, Alias = @alias });
    }

    ///<summary>Removes an alias from a floor.</summary>
    public void RemoveAliasFromFloor(HomeassistantRemoveAliasFromFloorParameters data)
    {
        _haContext.CallService("homeassistant", "remove_alias_from_floor", null, data);
    }

    ///<summary>Removes an alias from a floor.</summary>
    ///<param name="floorId">The ID of the floor to remove the alias from.</param>
    ///<param name="alias">The alias (or list of aliasses) to remove from the floor.</param>
    public void RemoveAliasFromFloor(object floorId, object @alias)
    {
        _haContext.CallService("homeassistant", "remove_alias_from_floor", null, new HomeassistantRemoveAliasFromFloorParameters { FloorId = floorId, Alias = @alias });
    }

    ///<summary>Removes an area from a floor. As an area can only be on one floor, this call doesn&apos;t need to specify the floor.</summary>
    public void RemoveAreaFromFloor(HomeassistantRemoveAreaFromFloorParameters data)
    {
        _haContext.CallService("homeassistant", "remove_area_from_floor", null, data);
    }

    ///<summary>Removes an area from a floor. As an area can only be on one floor, this call doesn&apos;t need to specify the floor.</summary>
    ///<param name="areaId">The ID of the area to remove the floor from.</param>
    public void RemoveAreaFromFloor(IEnumerable<string> areaId)
    {
        _haContext.CallService("homeassistant", "remove_area_from_floor", null, new HomeassistantRemoveAreaFromFloorParameters { AreaId = areaId });
    }

    ///<summary>Removes a device from an area. As a device can only be in one area, this call doesn&apos;t need to specify the area.</summary>
    public void RemoveDeviceFromArea(HomeassistantRemoveDeviceFromAreaParameters data)
    {
        _haContext.CallService("homeassistant", "remove_device_from_area", null, data);
    }

    ///<summary>Removes a device from an area. As a device can only be in one area, this call doesn&apos;t need to specify the area.</summary>
    ///<param name="deviceId">The ID of the device to remove the area from.</param>
    public void RemoveDeviceFromArea(IEnumerable<string> deviceId)
    {
        _haContext.CallService("homeassistant", "remove_device_from_area", null, new HomeassistantRemoveDeviceFromAreaParameters { DeviceId = deviceId });
    }

    ///<summary>Removes an entity from an area. As an entity can only be in one area, this call doesn&apos;t need to specify the area. Please note, the entity will still be in the area of the device that provides it after this call.</summary>
    public void RemoveEntityFromArea(HomeassistantRemoveEntityFromAreaParameters data)
    {
        _haContext.CallService("homeassistant", "remove_entity_from_area", null, data);
    }

    ///<summary>Removes an entity from an area. As an entity can only be in one area, this call doesn&apos;t need to specify the area. Please note, the entity will still be in the area of the device that provides it after this call.</summary>
    ///<param name="entityId">The ID of the entity (or entities) to remove the area from.</param>
    public void RemoveEntityFromArea(IEnumerable<string> entityId)
    {
        _haContext.CallService("homeassistant", "remove_entity_from_area", null, new HomeassistantRemoveEntityFromAreaParameters { EntityId = entityId });
    }

    ///<summary>Removes a label to an area. If multiple labels or multiple areas are provided, all combinations will be removed.</summary>
    public void RemoveLabelFromArea(HomeassistantRemoveLabelFromAreaParameters data)
    {
        _haContext.CallService("homeassistant", "remove_label_from_area", null, data);
    }

    ///<summary>Removes a label to an area. If multiple labels or multiple areas are provided, all combinations will be removed.</summary>
    ///<param name="labelId">The ID(s) of the label(s) to remove from the area(s).</param>
    ///<param name="areaId">The ID(s) of the area(s) to remove the label(s) from.</param>
    public void RemoveLabelFromArea(IEnumerable<object> labelId, IEnumerable<string> areaId)
    {
        _haContext.CallService("homeassistant", "remove_label_from_area", null, new HomeassistantRemoveLabelFromAreaParameters { LabelId = labelId, AreaId = areaId });
    }

    ///<summary>Removes a label from a device. If multiple labels or multiple devices are provided, all combinations will be removed.</summary>
    public void RemoveLabelFromDevice(HomeassistantRemoveLabelFromDeviceParameters data)
    {
        _haContext.CallService("homeassistant", "remove_label_from_device", null, data);
    }

    ///<summary>Removes a label from a device. If multiple labels or multiple devices are provided, all combinations will be removed.</summary>
    ///<param name="labelId">The ID(s) of the label(s) to remove from the device(s).</param>
    ///<param name="deviceId">The ID(s) of the device(s) to remove the label(s) from.</param>
    public void RemoveLabelFromDevice(IEnumerable<object> labelId, IEnumerable<string> deviceId)
    {
        _haContext.CallService("homeassistant", "remove_label_from_device", null, new HomeassistantRemoveLabelFromDeviceParameters { LabelId = labelId, DeviceId = deviceId });
    }

    ///<summary>Removes a label from an entity. If multiple labels or multiple entities are provided, all combinations will be removed.</summary>
    public void RemoveLabelFromEntity(HomeassistantRemoveLabelFromEntityParameters data)
    {
        _haContext.CallService("homeassistant", "remove_label_from_entity", null, data);
    }

    ///<summary>Removes a label from an entity. If multiple labels or multiple entities are provided, all combinations will be removed.</summary>
    ///<param name="labelId">The ID(s) of the label(s) to remove from the entity/entities.</param>
    ///<param name="entityId">The ID(s) of the entity/entities to remove the label(s) from.</param>
    public void RemoveLabelFromEntity(IEnumerable<object> labelId, IEnumerable<string> entityId)
    {
        _haContext.CallService("homeassistant", "remove_label_from_entity", null, new HomeassistantRemoveLabelFromEntityParameters { LabelId = labelId, EntityId = entityId });
    }

    ///<summary>Renames an entity (or entities) on the fly.</summary>
    public void RenameEntity(HomeassistantRenameEntityParameters data)
    {
        _haContext.CallService("homeassistant", "rename_entity", null, data);
    }

    ///<summary>Renames an entity (or entities) on the fly.</summary>
    ///<param name="entityId">The entity/entities to rename.</param>
    ///<param name="name">The new name for the entity/entities.</param>
    public void RenameEntity(IEnumerable<string> entityId, string name)
    {
        _haContext.CallService("homeassistant", "rename_entity", null, new HomeassistantRenameEntityParameters { EntityId = entityId, Name = name });
    }

    ///<summary>Restart the Home Assistant action.</summary>
    public void Restart(HomeassistantRestartParameters data)
    {
        _haContext.CallService("homeassistant", "restart", null, data);
    }

    ///<summary>Restart the Home Assistant action.</summary>
    ///<param name="safeMode">If the restart should be done in safe mode. This will disable all custom integrations and frontend modules.</param>
    ///<param name="force">Force the restart. WARNING! This will not gracefully shutdown Home Assistant, it will skip configuration checks and ignore running database migrations. Only use this if you know what you are doing.</param>
    public void Restart(bool? safeMode = null, bool? force = null)
    {
        _haContext.CallService("homeassistant", "restart", null, new HomeassistantRestartParameters { SafeMode = safeMode, Force = force });
    }

    ///<summary>Saves the persistent states immediately. Maintains the normal periodic saving interval.</summary>
    public void SavePersistentStates(object? data = null)
    {
        _haContext.CallService("homeassistant", "save_persistent_states", null, data);
    }

    ///<summary>Sets aliases for an area. Overwrite and removed any existing aliases, fully replacing them with the new ones.</summary>
    public void SetAreaAliases(HomeassistantSetAreaAliasesParameters data)
    {
        _haContext.CallService("homeassistant", "set_area_aliases", null, data);
    }

    ///<summary>Sets aliases for an area. Overwrite and removed any existing aliases, fully replacing them with the new ones.</summary>
    ///<param name="areaId">The ID of the area to set the aliases for.</param>
    ///<param name="aliases">The aliases to set for the area.</param>
    public void SetAreaAliases(string areaId, object aliases)
    {
        _haContext.CallService("homeassistant", "set_area_aliases", null, new HomeassistantSetAreaAliasesParameters { AreaId = areaId, Aliases = aliases });
    }

    ///<summary>Sets aliases for a floor. Overwrite and removed any existing aliases, fully replacing them with the new ones.</summary>
    public void SetFloorAliases(HomeassistantSetFloorAliasesParameters data)
    {
        _haContext.CallService("homeassistant", "set_floor_aliases", null, data);
    }

    ///<summary>Sets aliases for a floor. Overwrite and removed any existing aliases, fully replacing them with the new ones.</summary>
    ///<param name="floorId">The ID of the floor to set the aliases for.</param>
    ///<param name="aliases">The aliases to set for the floor.</param>
    public void SetFloorAliases(object floorId, object aliases)
    {
        _haContext.CallService("homeassistant", "set_floor_aliases", null, new HomeassistantSetFloorAliasesParameters { FloorId = floorId, Aliases = aliases });
    }

    ///<summary>Updates the Home Assistant location.</summary>
    public void SetLocation(HomeassistantSetLocationParameters data)
    {
        _haContext.CallService("homeassistant", "set_location", null, data);
    }

    ///<summary>Updates the Home Assistant location.</summary>
    ///<param name="latitude">Latitude of your location. eg: 32.87336</param>
    ///<param name="longitude">Longitude of your location. eg: 117.22743</param>
    ///<param name="elevation">Elevation of your location above sea level. eg: 120</param>
    public void SetLocation(double latitude, double longitude, double? elevation = null)
    {
        _haContext.CallService("homeassistant", "set_location", null, new HomeassistantSetLocationParameters { Latitude = latitude, Longitude = longitude, Elevation = elevation });
    }

    ///<summary>Stops Home Assistant.</summary>
    public void Stop(object? data = null)
    {
        _haContext.CallService("homeassistant", "stop", null, data);
    }

    ///<summary>Generic action to toggle devices on/off under any domain.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("homeassistant", "toggle", target, data);
    }

    ///<summary>Generic action to turn devices off under any domain.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("homeassistant", "turn_off", target, data);
    }

    ///<summary>Generic action to turn devices on under any domain.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("homeassistant", "turn_on", target, data);
    }

    ///<summary>Unhides an entity (or entities) on the fly.</summary>
    public void UnhideEntity(HomeassistantUnhideEntityParameters data)
    {
        _haContext.CallService("homeassistant", "unhide_entity", null, data);
    }

    ///<summary>Unhides an entity (or entities) on the fly.</summary>
    ///<param name="entityId">The entity/entities to unhide.</param>
    public void UnhideEntity(IEnumerable<string> entityId)
    {
        _haContext.CallService("homeassistant", "unhide_entity", null, new HomeassistantUnhideEntityParameters { EntityId = entityId });
    }

    ///<summary>Forces one or more entities to update their data.</summary>
    public void UpdateEntity(HomeassistantUpdateEntityParameters data)
    {
        _haContext.CallService("homeassistant", "update_entity", null, data);
    }

    ///<summary>Forces one or more entities to update their data.</summary>
    ///<param name="entityId">List of entities to force update.</param>
    public void UpdateEntity(IEnumerable<string> entityId)
    {
        _haContext.CallService("homeassistant", "update_entity", null, new HomeassistantUpdateEntityParameters { EntityId = entityId });
    }

    ///<summary>Updates an entity&apos;s ID on the fly.</summary>
    public void UpdateEntityId(HomeassistantUpdateEntityIdParameters data)
    {
        _haContext.CallService("homeassistant", "update_entity_id", null, data);
    }

    ///<summary>Updates an entity&apos;s ID on the fly.</summary>
    ///<param name="entityId">The entity/entities to update.</param>
    ///<param name="newEntityId">The new ID for the entity</param>
    public void UpdateEntityId(string entityId, string newEntityId)
    {
        _haContext.CallService("homeassistant", "update_entity_id", null, new HomeassistantUpdateEntityIdParameters { EntityId = entityId, NewEntityId = newEntityId });
    }
}

public partial record HomeassistantAddAliasToAreaParameters
{
    ///<summary>The ID of the area to add the alias to.</summary>
    [JsonPropertyName("area_id")]
    public string? AreaId { get; init; }

    ///<summary>The alias (or list of aliasses) to add to the area.</summary>
    [JsonPropertyName("alias")]
    public object? Alias { get; init; }
}

public partial record HomeassistantAddAliasToFloorParameters
{
    ///<summary>The ID of the floor to add the alias to.</summary>
    [JsonPropertyName("floor_id")]
    public object? FloorId { get; init; }

    ///<summary>The alias (or list of aliasses) to add to the floor.</summary>
    [JsonPropertyName("alias")]
    public object? Alias { get; init; }
}

public partial record HomeassistantAddAreaToFloorParameters
{
    ///<summary>The ID of the floor to add the area on.</summary>
    [JsonPropertyName("floor_id")]
    public object? FloorId { get; init; }

    ///<summary>The ID of the area(s) to add to the floor.</summary>
    [JsonPropertyName("area_id")]
    public IEnumerable<string>? AreaId { get; init; }
}

public partial record HomeassistantAddDeviceToAreaParameters
{
    ///<summary>The ID of the area to add the device to.</summary>
    [JsonPropertyName("area_id")]
    public string? AreaId { get; init; }

    ///<summary>The ID of the device(s) to add to the area.</summary>
    [JsonPropertyName("device_id")]
    public IEnumerable<string>? DeviceId { get; init; }
}

public partial record HomeassistantAddEntityToAreaParameters
{
    ///<summary>The ID of the area to add the entity to.</summary>
    [JsonPropertyName("area_id")]
    public string? AreaId { get; init; }

    ///<summary>The ID of the entity (or entities) to add to the area.</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }
}

public partial record HomeassistantAddLabelToAreaParameters
{
    ///<summary>The ID(s) of the label(s) to add the area(s).</summary>
    [JsonPropertyName("label_id")]
    public IEnumerable<object>? LabelId { get; init; }

    ///<summary>The ID(s) of the area(s) to add the label(s) to.</summary>
    [JsonPropertyName("area_id")]
    public IEnumerable<string>? AreaId { get; init; }
}

public partial record HomeassistantAddLabelToDeviceParameters
{
    ///<summary>The ID(s) of the label(s) to add the device(s).</summary>
    [JsonPropertyName("label_id")]
    public IEnumerable<object>? LabelId { get; init; }

    ///<summary>The ID(s) of the device(s) to add the label(s) to.</summary>
    [JsonPropertyName("device_id")]
    public IEnumerable<string>? DeviceId { get; init; }
}

public partial record HomeassistantAddLabelToEntityParameters
{
    ///<summary>The ID(s) of the label(s) to add the entity/entities.</summary>
    [JsonPropertyName("label_id")]
    public IEnumerable<object>? LabelId { get; init; }

    ///<summary>The ID(s) of the entity/entities to add the label(s) to.</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }
}

public partial record HomeassistantCreateAreaParameters
{
    ///<summary>The name of the area to create.</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Icon to use for the area.</summary>
    [JsonPropertyName("icon")]
    public object? Icon { get; init; }

    ///<summary>A list of aliases for the area. This is useful if you want to use the area in a different language or different nickname.</summary>
    [JsonPropertyName("aliases")]
    public object? Aliases { get; init; }
}

public partial record HomeassistantCreateFloorParameters
{
    ///<summary>The name of the floor to create.</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Icon to use for the floor.</summary>
    [JsonPropertyName("icon")]
    public object? Icon { get; init; }

    ///<summary>The level the floor is on in your home.</summary>
    [JsonPropertyName("level")]
    public long? Level { get; init; }

    ///<summary>A list of aliases for the floor. This is useful if you want to use the floor in a different language or different nickname.</summary>
    [JsonPropertyName("aliases")]
    public object? Aliases { get; init; }
}

public partial record HomeassistantCreateLabelParameters
{
    ///<summary>The name of the label to create.</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Description for the label.</summary>
    [JsonPropertyName("description")]
    public string? Description { get; init; }

    ///<summary>Icon to use for the label.</summary>
    [JsonPropertyName("icon")]
    public object? Icon { get; init; }

    ///<summary>Color to use for the label. Can be a color name from the list, or a hex color code (like #FF0000).</summary>
    [JsonPropertyName("color")]
    public object? Color { get; init; }
}

public partial record HomeassistantDeleteAreaParameters
{
    ///<summary>The ID of the area to delete.</summary>
    [JsonPropertyName("area_id")]
    public string? AreaId { get; init; }
}

public partial record HomeassistantDeleteFloorParameters
{
    ///<summary>The ID of the floor to delete.</summary>
    [JsonPropertyName("floor_id")]
    public object? FloorId { get; init; }
}

public partial record HomeassistantDeleteLabelParameters
{
    ///<summary>The ID of the label to delete.</summary>
    [JsonPropertyName("label_id")]
    public object? LabelId { get; init; }
}

public partial record HomeassistantDisableConfigEntryParameters
{
    ///<summary>The integration configuration entry to disable.</summary>
    [JsonPropertyName("config_entry_id")]
    public object? ConfigEntryId { get; init; }
}

public partial record HomeassistantDisableDeviceParameters
{
    ///<summary>The device(s) to disable.</summary>
    [JsonPropertyName("device_id")]
    public IEnumerable<string>? DeviceId { get; init; }
}

public partial record HomeassistantDisableEntityParameters
{
    ///<summary>The entity/entities to disable.</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }
}

public partial record HomeassistantDisablePollingParameters
{
    ///<summary>The integration configuration entry to disable polling for.</summary>
    [JsonPropertyName("config_entry_id")]
    public object? ConfigEntryId { get; init; }
}

public partial record HomeassistantEnableConfigEntryParameters
{
    ///<summary>The integration configuration entry to enable.</summary>
    [JsonPropertyName("config_entry_id")]
    public object? ConfigEntryId { get; init; }
}

public partial record HomeassistantEnableDeviceParameters
{
    ///<summary>The device(s) to enable.</summary>
    [JsonPropertyName("device_id")]
    public IEnumerable<string>? DeviceId { get; init; }
}

public partial record HomeassistantEnableEntityParameters
{
    ///<summary>The entity/entities to enable.</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }
}

public partial record HomeassistantEnablePollingParameters
{
    ///<summary>The integration configuration entry to enable polling for.</summary>
    [JsonPropertyName("config_entry_id")]
    public object? ConfigEntryId { get; init; }
}

public partial record HomeassistantHideEntityParameters
{
    ///<summary>The entity/entities to hide.</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }
}

public partial record HomeassistantIgnoreAllDiscoveredParameters
{
    ///<summary>The integration domain to ignore all discovered devices for. If not provided, all domains will be considered to be ignored.</summary>
    [JsonPropertyName("domain")]
    public string? Domain { get; init; }
}

public partial record HomeassistantReloadConfigEntryParameters
{
    ///<summary>The configuration entry ID of the entry to be reloaded. eg: 8955375327824e14ba89e4b29cc3ec9a</summary>
    [JsonPropertyName("entry_id")]
    public object? EntryId { get; init; }
}

public partial record HomeassistantRemoveAliasFromAreaParameters
{
    ///<summary>The ID of the area to remove the alias from.</summary>
    [JsonPropertyName("area_id")]
    public string? AreaId { get; init; }

    ///<summary>The alias (or list of aliasses) to remove from the area.</summary>
    [JsonPropertyName("alias")]
    public object? Alias { get; init; }
}

public partial record HomeassistantRemoveAliasFromFloorParameters
{
    ///<summary>The ID of the floor to remove the alias from.</summary>
    [JsonPropertyName("floor_id")]
    public object? FloorId { get; init; }

    ///<summary>The alias (or list of aliasses) to remove from the floor.</summary>
    [JsonPropertyName("alias")]
    public object? Alias { get; init; }
}

public partial record HomeassistantRemoveAreaFromFloorParameters
{
    ///<summary>The ID of the area to remove the floor from.</summary>
    [JsonPropertyName("area_id")]
    public IEnumerable<string>? AreaId { get; init; }
}

public partial record HomeassistantRemoveDeviceFromAreaParameters
{
    ///<summary>The ID of the device to remove the area from.</summary>
    [JsonPropertyName("device_id")]
    public IEnumerable<string>? DeviceId { get; init; }
}

public partial record HomeassistantRemoveEntityFromAreaParameters
{
    ///<summary>The ID of the entity (or entities) to remove the area from.</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }
}

public partial record HomeassistantRemoveLabelFromAreaParameters
{
    ///<summary>The ID(s) of the label(s) to remove from the area(s).</summary>
    [JsonPropertyName("label_id")]
    public IEnumerable<object>? LabelId { get; init; }

    ///<summary>The ID(s) of the area(s) to remove the label(s) from.</summary>
    [JsonPropertyName("area_id")]
    public IEnumerable<string>? AreaId { get; init; }
}

public partial record HomeassistantRemoveLabelFromDeviceParameters
{
    ///<summary>The ID(s) of the label(s) to remove from the device(s).</summary>
    [JsonPropertyName("label_id")]
    public IEnumerable<object>? LabelId { get; init; }

    ///<summary>The ID(s) of the device(s) to remove the label(s) from.</summary>
    [JsonPropertyName("device_id")]
    public IEnumerable<string>? DeviceId { get; init; }
}

public partial record HomeassistantRemoveLabelFromEntityParameters
{
    ///<summary>The ID(s) of the label(s) to remove from the entity/entities.</summary>
    [JsonPropertyName("label_id")]
    public IEnumerable<object>? LabelId { get; init; }

    ///<summary>The ID(s) of the entity/entities to remove the label(s) from.</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }
}

public partial record HomeassistantRenameEntityParameters
{
    ///<summary>The entity/entities to rename.</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }

    ///<summary>The new name for the entity/entities.</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }
}

public partial record HomeassistantRestartParameters
{
    ///<summary>If the restart should be done in safe mode. This will disable all custom integrations and frontend modules.</summary>
    [JsonPropertyName("safe_mode")]
    public bool? SafeMode { get; init; }

    ///<summary>Force the restart. WARNING! This will not gracefully shutdown Home Assistant, it will skip configuration checks and ignore running database migrations. Only use this if you know what you are doing.</summary>
    [JsonPropertyName("force")]
    public bool? Force { get; init; }
}

public partial record HomeassistantSetAreaAliasesParameters
{
    ///<summary>The ID of the area to set the aliases for.</summary>
    [JsonPropertyName("area_id")]
    public string? AreaId { get; init; }

    ///<summary>The aliases to set for the area.</summary>
    [JsonPropertyName("aliases")]
    public object? Aliases { get; init; }
}

public partial record HomeassistantSetFloorAliasesParameters
{
    ///<summary>The ID of the floor to set the aliases for.</summary>
    [JsonPropertyName("floor_id")]
    public object? FloorId { get; init; }

    ///<summary>The aliases to set for the floor.</summary>
    [JsonPropertyName("aliases")]
    public object? Aliases { get; init; }
}

public partial record HomeassistantSetLocationParameters
{
    ///<summary>Latitude of your location. eg: 32.87336</summary>
    [JsonPropertyName("latitude")]
    public double? Latitude { get; init; }

    ///<summary>Longitude of your location. eg: 117.22743</summary>
    [JsonPropertyName("longitude")]
    public double? Longitude { get; init; }

    ///<summary>Elevation of your location above sea level. eg: 120</summary>
    [JsonPropertyName("elevation")]
    public double? Elevation { get; init; }
}

public partial record HomeassistantUnhideEntityParameters
{
    ///<summary>The entity/entities to unhide.</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }
}

public partial record HomeassistantUpdateEntityParameters
{
    ///<summary>List of entities to force update.</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }
}

public partial record HomeassistantUpdateEntityIdParameters
{
    ///<summary>The entity/entities to update.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>The new ID for the entity</summary>
    [JsonPropertyName("new_entity_id")]
    public string? NewEntityId { get; init; }
}

public partial class HueServices
{
    private readonly IHaContext _haContext;
    public HueServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Activates a Hue scene with more control over the options.</summary>
    ///<param name="target">The target for this service call</param>
    public void ActivateScene(ServiceTarget target, HueActivateSceneParameters data)
    {
        _haContext.CallService("hue", "activate_scene", target, data);
    }

    ///<summary>Activates a Hue scene with more control over the options.</summary>
    ///<param name="transition">Transition duration it takes to bring devices to the state defined in the scene.</param>
    ///<param name="dynamic">Enable dynamic mode of the scene.</param>
    ///<param name="speed">Speed of dynamic palette for this scene.</param>
    ///<param name="brightness">Set brightness for the scene.</param>
    public void ActivateScene(ServiceTarget target, long? transition = null, bool? dynamic = null, long? speed = null, long? brightness = null)
    {
        _haContext.CallService("hue", "activate_scene", target, new HueActivateSceneParameters { Transition = transition, Dynamic = dynamic, Speed = speed, Brightness = brightness });
    }

    ///<summary>Activates a Hue scene stored in the Hue hub.</summary>
    public void HueActivateScene(HueHueActivateSceneParameters data)
    {
        _haContext.CallService("hue", "hue_activate_scene", null, data);
    }

    ///<summary>Activates a Hue scene stored in the Hue hub.</summary>
    ///<param name="groupName">Name of Hue group/room from the Hue app. eg: Living Room</param>
    ///<param name="sceneName">Name of Hue scene from the Hue app. eg: Energize</param>
    ///<param name="dynamic">Enable dynamic mode of the scene (V2 bridges and supported scenes only).</param>
    public void HueActivateScene(string? groupName = null, string? sceneName = null, bool? dynamic = null)
    {
        _haContext.CallService("hue", "hue_activate_scene", null, new HueHueActivateSceneParameters { GroupName = groupName, SceneName = sceneName, Dynamic = dynamic });
    }
}

public partial record HueActivateSceneParameters
{
    ///<summary>Transition duration it takes to bring devices to the state defined in the scene.</summary>
    [JsonPropertyName("transition")]
    public long? Transition { get; init; }

    ///<summary>Enable dynamic mode of the scene.</summary>
    [JsonPropertyName("dynamic")]
    public bool? Dynamic { get; init; }

    ///<summary>Speed of dynamic palette for this scene.</summary>
    [JsonPropertyName("speed")]
    public long? Speed { get; init; }

    ///<summary>Set brightness for the scene.</summary>
    [JsonPropertyName("brightness")]
    public long? Brightness { get; init; }
}

public partial record HueHueActivateSceneParameters
{
    ///<summary>Name of Hue group/room from the Hue app. eg: Living Room</summary>
    [JsonPropertyName("group_name")]
    public string? GroupName { get; init; }

    ///<summary>Name of Hue scene from the Hue app. eg: Energize</summary>
    [JsonPropertyName("scene_name")]
    public string? SceneName { get; init; }

    ///<summary>Enable dynamic mode of the scene (V2 bridges and supported scenes only).</summary>
    [JsonPropertyName("dynamic")]
    public bool? Dynamic { get; init; }
}

public partial class HuesyncboxServices
{
    private readonly IHaContext _haContext;
    public HuesyncboxServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Set the bridge to be used by the Philips Hue Play HDMI Syncbox. Keep in mind that changing the bridge by the box takes a while (about 15 seconds it seems). After the bridge has changed you might need to select the `entertainment_area` if connectionstate is `invalidgroup` instead of `connected`.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetBridge(ServiceTarget target, HuesyncboxSetBridgeParameters data)
    {
        _haContext.CallService("huesyncbox", "set_bridge", target, data);
    }

    ///<summary>Set the bridge to be used by the Philips Hue Play HDMI Syncbox. Keep in mind that changing the bridge by the box takes a while (about 15 seconds it seems). After the bridge has changed you might need to select the `entertainment_area` if connectionstate is `invalidgroup` instead of `connected`.</summary>
    ///<param name="bridgeId">ID of the bridge. A hexadecimal code of 16 characters. eg: 001788FFFE000000</param>
    ///<param name="bridgeUsername">Username (a.k.a. application key) valid for the bridge. A long code of random characters. eg: WB9xS1t0Baw-8ZqYKMcEhOaKRU42E84-NZBXwcIL</param>
    ///<param name="bridgeClientkey">Clientkey that belongs with the username. A hexadecimal code of 32 characters. eg: 00112233445566778899AABBCCDDEEFF</param>
    public void SetBridge(ServiceTarget target, string bridgeId, string bridgeUsername, string bridgeClientkey)
    {
        _haContext.CallService("huesyncbox", "set_bridge", target, new HuesyncboxSetBridgeParameters { BridgeId = bridgeId, BridgeUsername = bridgeUsername, BridgeClientkey = bridgeClientkey });
    }

    ///<summary>Control the complete light sync state of the Philips Hue Play HDMI Syncbox with one call.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetSyncState(ServiceTarget target, HuesyncboxSetSyncStateParameters data)
    {
        _haContext.CallService("huesyncbox", "set_sync_state", target, data);
    }

    ///<summary>Control the complete light sync state of the Philips Hue Play HDMI Syncbox with one call.</summary>
    ///<param name="power">Turn the box on or off. eg: True</param>
    ///<param name="sync">Set light sync state on or off. Setting this to on will also turn on the box. eg: True</param>
    ///<param name="brightness">Brightness value to set. eg: 42</param>
    ///<param name="intensity">Intensity to set. eg: high</param>
    ///<param name="mode">Mode to set. Setting the mode will also turn on the box and start light sync. eg: video</param>
    ///<param name="input">Input to select. eg: input1</param>
    ///<param name="entertainmentArea">Entertainment area to select. Name must match _exactly_ eg: TV Area</param>
    public void SetSyncState(ServiceTarget target, bool? power = null, bool? sync = null, long? brightness = null, object? intensity = null, object? mode = null, object? input = null, string? entertainmentArea = null)
    {
        _haContext.CallService("huesyncbox", "set_sync_state", target, new HuesyncboxSetSyncStateParameters { Power = power, Sync = sync, Brightness = brightness, Intensity = intensity, Mode = mode, Input = input, EntertainmentArea = entertainmentArea });
    }
}

public partial record HuesyncboxSetBridgeParameters
{
    ///<summary>ID of the bridge. A hexadecimal code of 16 characters. eg: 001788FFFE000000</summary>
    [JsonPropertyName("bridge_id")]
    public string? BridgeId { get; init; }

    ///<summary>Username (a.k.a. application key) valid for the bridge. A long code of random characters. eg: WB9xS1t0Baw-8ZqYKMcEhOaKRU42E84-NZBXwcIL</summary>
    [JsonPropertyName("bridge_username")]
    public string? BridgeUsername { get; init; }

    ///<summary>Clientkey that belongs with the username. A hexadecimal code of 32 characters. eg: 00112233445566778899AABBCCDDEEFF</summary>
    [JsonPropertyName("bridge_clientkey")]
    public string? BridgeClientkey { get; init; }
}

public partial record HuesyncboxSetSyncStateParameters
{
    ///<summary>Turn the box on or off. eg: True</summary>
    [JsonPropertyName("power")]
    public bool? Power { get; init; }

    ///<summary>Set light sync state on or off. Setting this to on will also turn on the box. eg: True</summary>
    [JsonPropertyName("sync")]
    public bool? Sync { get; init; }

    ///<summary>Brightness value to set. eg: 42</summary>
    [JsonPropertyName("brightness")]
    public long? Brightness { get; init; }

    ///<summary>Intensity to set. eg: high</summary>
    [JsonPropertyName("intensity")]
    public object? Intensity { get; init; }

    ///<summary>Mode to set. Setting the mode will also turn on the box and start light sync. eg: video</summary>
    [JsonPropertyName("mode")]
    public object? Mode { get; init; }

    ///<summary>Input to select. eg: input1</summary>
    [JsonPropertyName("input")]
    public object? Input { get; init; }

    ///<summary>Entertainment area to select. Name must match _exactly_ eg: TV Area</summary>
    [JsonPropertyName("entertainment_area")]
    public string? EntertainmentArea { get; init; }
}

public partial class ImageServices
{
    private readonly IHaContext _haContext;
    public ImageServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Takes a snapshot from an image.</summary>
    ///<param name="target">The target for this service call</param>
    public void Snapshot(ServiceTarget target, ImageSnapshotParameters data)
    {
        _haContext.CallService("image", "snapshot", target, data);
    }

    ///<summary>Takes a snapshot from an image.</summary>
    ///<param name="filename">Template of a filename. Variable available is `entity_id`. eg: /tmp/image_snapshot.jpg</param>
    public void Snapshot(ServiceTarget target, string filename)
    {
        _haContext.CallService("image", "snapshot", target, new ImageSnapshotParameters { Filename = filename });
    }
}

public partial record ImageSnapshotParameters
{
    ///<summary>Template of a filename. Variable available is `entity_id`. eg: /tmp/image_snapshot.jpg</summary>
    [JsonPropertyName("filename")]
    public string? Filename { get; init; }
}

public partial class InputBooleanServices
{
    private readonly IHaContext _haContext;
    public InputBooleanServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("input_boolean", "reload", null, data);
    }

    ///<summary>Toggles the helper on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_boolean", "toggle", target, data);
    }

    ///<summary>Turns off the helper.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_boolean", "turn_off", target, data);
    }

    ///<summary>Turns on the helper.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_boolean", "turn_on", target, data);
    }
}

public partial class InputButtonServices
{
    private readonly IHaContext _haContext;
    public InputButtonServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Mimics the physical button press on the device.</summary>
    ///<param name="target">The target for this service call</param>
    public void Press(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_button", "press", target, data);
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("input_button", "reload", null, data);
    }
}

public partial class InputDatetimeServices
{
    private readonly IHaContext _haContext;
    public InputDatetimeServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("input_datetime", "reload", null, data);
    }

    ///<summary>Sets the date and/or time.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetDatetime(ServiceTarget target, InputDatetimeSetDatetimeParameters data)
    {
        _haContext.CallService("input_datetime", "set_datetime", target, data);
    }

    ///<summary>Sets the date and/or time.</summary>
    ///<param name="date">The target date. eg: &quot;2019-04-20&quot;</param>
    ///<param name="time">The target time. eg: &quot;05:04:20&quot;</param>
    ///<param name="datetime">The target date &amp; time. eg: &quot;2019-04-20 05:04:20&quot;</param>
    ///<param name="timestamp">The target date &amp; time, expressed by a UNIX timestamp.</param>
    public void SetDatetime(ServiceTarget target, string? date = null, TimeOnly? time = null, string? datetime = null, long? timestamp = null)
    {
        _haContext.CallService("input_datetime", "set_datetime", target, new InputDatetimeSetDatetimeParameters { Date = date, Time = time, Datetime = datetime, Timestamp = timestamp });
    }
}

public partial record InputDatetimeSetDatetimeParameters
{
    ///<summary>The target date. eg: &quot;2019-04-20&quot;</summary>
    [JsonPropertyName("date")]
    public string? Date { get; init; }

    ///<summary>The target time. eg: &quot;05:04:20&quot;</summary>
    [JsonPropertyName("time")]
    public TimeOnly? Time { get; init; }

    ///<summary>The target date &amp; time. eg: &quot;2019-04-20 05:04:20&quot;</summary>
    [JsonPropertyName("datetime")]
    public string? Datetime { get; init; }

    ///<summary>The target date &amp; time, expressed by a UNIX timestamp.</summary>
    [JsonPropertyName("timestamp")]
    public long? Timestamp { get; init; }
}

public partial class InputNumberServices
{
    private readonly IHaContext _haContext;
    public InputNumberServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Decrease an input number entity value by a certain amount.</summary>
    ///<param name="target">The target for this service call</param>
    public void Decrement(ServiceTarget target, InputNumberDecrementParameters data)
    {
        _haContext.CallService("input_number", "decrement", target, data);
    }

    ///<summary>Decrease an input number entity value by a certain amount.</summary>
    ///<param name="amount">The amount to decrease the input number with. If not provided, the step of the number entity will be used.</param>
    public void Decrement(ServiceTarget target, long? amount = null)
    {
        _haContext.CallService("input_number", "decrement", target, new InputNumberDecrementParameters { Amount = amount });
    }

    ///<summary>Increase an input number entity value by a certain amount.</summary>
    ///<param name="target">The target for this service call</param>
    public void Increment(ServiceTarget target, InputNumberIncrementParameters data)
    {
        _haContext.CallService("input_number", "increment", target, data);
    }

    ///<summary>Increase an input number entity value by a certain amount.</summary>
    ///<param name="amount">The amount to increase the input number with. If not provided, the step of the number entity will be used.</param>
    public void Increment(ServiceTarget target, long? amount = null)
    {
        _haContext.CallService("input_number", "increment", target, new InputNumberIncrementParameters { Amount = amount });
    }

    ///<summary>Set an input number entity to its maximum value.</summary>
    ///<param name="target">The target for this service call</param>
    public void Max(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_number", "max", target, data);
    }

    ///<summary>Set an input number entity to its minimum value.</summary>
    ///<param name="target">The target for this service call</param>
    public void Min(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_number", "min", target, data);
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("input_number", "reload", null, data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, InputNumberSetValueParameters data)
    {
        _haContext.CallService("input_number", "set_value", target, data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="value">The target value.</param>
    public void SetValue(ServiceTarget target, double value)
    {
        _haContext.CallService("input_number", "set_value", target, new InputNumberSetValueParameters { Value = value });
    }
}

public partial record InputNumberDecrementParameters
{
    ///<summary>The amount to decrease the input number with. If not provided, the step of the number entity will be used.</summary>
    [JsonPropertyName("amount")]
    public long? Amount { get; init; }
}

public partial record InputNumberIncrementParameters
{
    ///<summary>The amount to increase the input number with. If not provided, the step of the number entity will be used.</summary>
    [JsonPropertyName("amount")]
    public long? Amount { get; init; }
}

public partial record InputNumberSetValueParameters
{
    ///<summary>The target value.</summary>
    [JsonPropertyName("value")]
    public double? Value { get; init; }
}

public partial class InputSelectServices
{
    private readonly IHaContext _haContext;
    public InputSelectServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Select an random option for an input_select entity.</summary>
    ///<param name="target">The target for this service call</param>
    public void Random(ServiceTarget target, InputSelectRandomParameters data)
    {
        _haContext.CallService("input_select", "random", target, data);
    }

    ///<summary>Select an random option for an input_select entity.</summary>
    ///<param name="options">Limits the options to select from. If not provided, all options will be considered.</param>
    public void Random(ServiceTarget target, object? options = null)
    {
        _haContext.CallService("input_select", "random", target, new InputSelectRandomParameters { Options = options });
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("input_select", "reload", null, data);
    }

    ///<summary>Selects the first option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectFirst(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_select", "select_first", target, data);
    }

    ///<summary>Selects the last option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectLast(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_select", "select_last", target, data);
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectNext(ServiceTarget target, InputSelectSelectNextParameters data)
    {
        _haContext.CallService("input_select", "select_next", target, data);
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public void SelectNext(ServiceTarget target, bool? cycle = null)
    {
        _haContext.CallService("input_select", "select_next", target, new InputSelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectOption(ServiceTarget target, InputSelectSelectOptionParameters data)
    {
        _haContext.CallService("input_select", "select_option", target, data);
    }

    ///<summary>Selects an option.</summary>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public void SelectOption(ServiceTarget target, object option)
    {
        _haContext.CallService("input_select", "select_option", target, new InputSelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectPrevious(ServiceTarget target, InputSelectSelectPreviousParameters data)
    {
        _haContext.CallService("input_select", "select_previous", target, data);
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="cycle">If the option should cycle from the first to the last option on the list.</param>
    public void SelectPrevious(ServiceTarget target, bool? cycle = null)
    {
        _haContext.CallService("input_select", "select_previous", target, new InputSelectSelectPreviousParameters { Cycle = cycle });
    }

    ///<summary>Sets the options.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetOptions(ServiceTarget target, InputSelectSetOptionsParameters data)
    {
        _haContext.CallService("input_select", "set_options", target, data);
    }

    ///<summary>Sets the options.</summary>
    ///<param name="options">List of options. eg: [&quot;Item A&quot;, &quot;Item B&quot;, &quot;Item C&quot;]</param>
    public void SetOptions(ServiceTarget target, IEnumerable<string> options)
    {
        _haContext.CallService("input_select", "set_options", target, new InputSelectSetOptionsParameters { Options = options });
    }

    ///<summary>Shuffles the list of selectable options for an `input_select` entity. This is not persistent and will be undone once reloaded or Home Assistant restarts.</summary>
    ///<param name="target">The target for this service call</param>
    public void Shuffle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_select", "shuffle", target, data);
    }

    ///<summary>Sorts the list of selectable options for an `input_select` entity. This is not persistent and will be undone once reloaded or Home Assistant restarts.</summary>
    ///<param name="target">The target for this service call</param>
    public void Sort(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_select", "sort", target, data);
    }
}

public partial record InputSelectRandomParameters
{
    ///<summary>Limits the options to select from. If not provided, all options will be considered.</summary>
    [JsonPropertyName("options")]
    public object? Options { get; init; }
}

public partial record InputSelectSelectNextParameters
{
    ///<summary>If the option should cycle from the last to the first option on the list.</summary>
    [JsonPropertyName("cycle")]
    public bool? Cycle { get; init; }
}

public partial record InputSelectSelectOptionParameters
{
    ///<summary>Option to be selected. eg: &quot;Item A&quot;</summary>
    [JsonPropertyName("option")]
    public object? Option { get; init; }
}

public partial record InputSelectSelectPreviousParameters
{
    ///<summary>If the option should cycle from the first to the last option on the list.</summary>
    [JsonPropertyName("cycle")]
    public bool? Cycle { get; init; }
}

public partial record InputSelectSetOptionsParameters
{
    ///<summary>List of options. eg: [&quot;Item A&quot;, &quot;Item B&quot;, &quot;Item C&quot;]</summary>
    [JsonPropertyName("options")]
    public IEnumerable<string>? Options { get; init; }
}

public partial class InputTextServices
{
    private readonly IHaContext _haContext;
    public InputTextServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("input_text", "reload", null, data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, InputTextSetValueParameters data)
    {
        _haContext.CallService("input_text", "set_value", target, data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="value">The target value. eg: This is an example text</param>
    public void SetValue(ServiceTarget target, string value)
    {
        _haContext.CallService("input_text", "set_value", target, new InputTextSetValueParameters { Value = value });
    }
}

public partial record InputTextSetValueParameters
{
    ///<summary>The target value. eg: This is an example text</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial class LightServices
{
    private readonly IHaContext _haContext;
    public LightServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Toggles one or more lights, from on to off, or off to on, based on their current state.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, LightToggleParameters data)
    {
        _haContext.CallService("light", "toggle", target, data);
    }

    ///<summary>Toggles one or more lights, from on to off, or off to on, based on their current state.</summary>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="colorTempKelvin">Color temperature in Kelvin.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="effect">Light effect.</param>
    ///<param name="rgbwColor"> eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor"> eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName"></param>
    ///<param name="hsColor"> eg: [300, 70]</param>
    ///<param name="xyColor"> eg: [0.52, 0.43]</param>
    ///<param name="colorTemp"></param>
    ///<param name="brightness"></param>
    ///<param name="white"></param>
    ///<param name="profile"> eg: relax</param>
    ///<param name="flash"></param>
    public void Toggle(ServiceTarget target, long? transition = null, IReadOnlyCollection<int>? rgbColor = null, object? colorTempKelvin = null, long? brightnessPct = null, string? effect = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, long? brightness = null, object? white = null, string? profile = null, object? flash = null)
    {
        _haContext.CallService("light", "toggle", target, new LightToggleParameters { Transition = transition, RgbColor = rgbColor, ColorTempKelvin = colorTempKelvin, BrightnessPct = brightnessPct, Effect = effect, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Brightness = brightness, White = white, Profile = profile, Flash = flash });
    }

    ///<summary>Turns off one or more lights.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, LightTurnOffParameters data)
    {
        _haContext.CallService("light", "turn_off", target, data);
    }

    ///<summary>Turns off one or more lights.</summary>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="flash"></param>
    public void TurnOff(ServiceTarget target, long? transition = null, object? flash = null)
    {
        _haContext.CallService("light", "turn_off", target, new LightTurnOffParameters { Transition = transition, Flash = flash });
    }

    ///<summary>Turns on one or more lights and adjusts their properties, even when they are turned on already.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, LightTurnOnParameters data)
    {
        _haContext.CallService("light", "turn_on", target, data);
    }

    ///<summary>Turns on one or more lights and adjusts their properties, even when they are turned on already.</summary>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="colorTempKelvin">Color temperature in Kelvin.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="brightnessStepPct">Change brightness by a percentage.</param>
    ///<param name="effect">Light effect.</param>
    ///<param name="rgbwColor"> eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor"> eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName"></param>
    ///<param name="hsColor"> eg: [300, 70]</param>
    ///<param name="xyColor"> eg: [0.52, 0.43]</param>
    ///<param name="colorTemp"></param>
    ///<param name="brightness"></param>
    ///<param name="brightnessStep"></param>
    ///<param name="white"></param>
    ///<param name="profile"> eg: relax</param>
    ///<param name="flash"></param>
    public void TurnOn(ServiceTarget target, long? transition = null, IReadOnlyCollection<int>? rgbColor = null, object? colorTempKelvin = null, long? brightnessPct = null, long? brightnessStepPct = null, string? effect = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, long? brightness = null, long? brightnessStep = null, object? white = null, string? profile = null, object? flash = null)
    {
        _haContext.CallService("light", "turn_on", target, new LightTurnOnParameters { Transition = transition, RgbColor = rgbColor, ColorTempKelvin = colorTempKelvin, BrightnessPct = brightnessPct, BrightnessStepPct = brightnessStepPct, Effect = effect, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Brightness = brightness, BrightnessStep = brightnessStep, White = white, Profile = profile, Flash = flash });
    }
}

public partial record LightToggleParameters
{
    ///<summary>Duration it takes to get to next state.</summary>
    [JsonPropertyName("transition")]
    public long? Transition { get; init; }

    ///<summary>The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</summary>
    [JsonPropertyName("rgb_color")]
    public IReadOnlyCollection<int>? RgbColor { get; init; }

    ///<summary>Color temperature in Kelvin.</summary>
    [JsonPropertyName("color_temp_kelvin")]
    public object? ColorTempKelvin { get; init; }

    ///<summary>Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</summary>
    [JsonPropertyName("brightness_pct")]
    public long? BrightnessPct { get; init; }

    ///<summary>Light effect.</summary>
    [JsonPropertyName("effect")]
    public string? Effect { get; init; }

    ///<summary> eg: [255, 100, 100, 50]</summary>
    [JsonPropertyName("rgbw_color")]
    public object? RgbwColor { get; init; }

    ///<summary> eg: [255, 100, 100, 50, 70]</summary>
    [JsonPropertyName("rgbww_color")]
    public object? RgbwwColor { get; init; }

    [JsonPropertyName("color_name")]
    public object? ColorName { get; init; }

    ///<summary> eg: [300, 70]</summary>
    [JsonPropertyName("hs_color")]
    public object? HsColor { get; init; }

    ///<summary> eg: [0.52, 0.43]</summary>
    [JsonPropertyName("xy_color")]
    public object? XyColor { get; init; }

    [JsonPropertyName("color_temp")]
    public object? ColorTemp { get; init; }

    [JsonPropertyName("brightness")]
    public long? Brightness { get; init; }

    [JsonPropertyName("white")]
    public object? White { get; init; }

    ///<summary> eg: relax</summary>
    [JsonPropertyName("profile")]
    public string? Profile { get; init; }

    [JsonPropertyName("flash")]
    public object? Flash { get; init; }
}

public partial record LightTurnOffParameters
{
    ///<summary>Duration it takes to get to next state.</summary>
    [JsonPropertyName("transition")]
    public long? Transition { get; init; }

    [JsonPropertyName("flash")]
    public object? Flash { get; init; }
}

public partial record LightTurnOnParameters
{
    ///<summary>Duration it takes to get to next state.</summary>
    [JsonPropertyName("transition")]
    public long? Transition { get; init; }

    ///<summary>The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</summary>
    [JsonPropertyName("rgb_color")]
    public IReadOnlyCollection<int>? RgbColor { get; init; }

    ///<summary>Color temperature in Kelvin.</summary>
    [JsonPropertyName("color_temp_kelvin")]
    public object? ColorTempKelvin { get; init; }

    ///<summary>Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</summary>
    [JsonPropertyName("brightness_pct")]
    public long? BrightnessPct { get; init; }

    ///<summary>Change brightness by a percentage.</summary>
    [JsonPropertyName("brightness_step_pct")]
    public long? BrightnessStepPct { get; init; }

    ///<summary>Light effect.</summary>
    [JsonPropertyName("effect")]
    public string? Effect { get; init; }

    ///<summary> eg: [255, 100, 100, 50]</summary>
    [JsonPropertyName("rgbw_color")]
    public object? RgbwColor { get; init; }

    ///<summary> eg: [255, 100, 100, 50, 70]</summary>
    [JsonPropertyName("rgbww_color")]
    public object? RgbwwColor { get; init; }

    [JsonPropertyName("color_name")]
    public object? ColorName { get; init; }

    ///<summary> eg: [300, 70]</summary>
    [JsonPropertyName("hs_color")]
    public object? HsColor { get; init; }

    ///<summary> eg: [0.52, 0.43]</summary>
    [JsonPropertyName("xy_color")]
    public object? XyColor { get; init; }

    [JsonPropertyName("color_temp")]
    public object? ColorTemp { get; init; }

    [JsonPropertyName("brightness")]
    public long? Brightness { get; init; }

    [JsonPropertyName("brightness_step")]
    public long? BrightnessStep { get; init; }

    [JsonPropertyName("white")]
    public object? White { get; init; }

    ///<summary> eg: relax</summary>
    [JsonPropertyName("profile")]
    public string? Profile { get; init; }

    [JsonPropertyName("flash")]
    public object? Flash { get; init; }
}

public partial class LocaltuyaServices
{
    private readonly IHaContext _haContext;
    public LocaltuyaServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reload localtuya and reconnect to all devices.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("localtuya", "reload", null, data);
    }

    ///<summary>Change the value of a datapoint (DP)</summary>
    public void SetDp(LocaltuyaSetDpParameters data)
    {
        _haContext.CallService("localtuya", "set_dp", null, data);
    }

    ///<summary>Change the value of a datapoint (DP)</summary>
    ///<param name="deviceId">Device ID of device to change datapoint value for eg: 11100118278aab4de001</param>
    ///<param name="dp">Datapoint index eg: 1</param>
    ///<param name="value">New value to set eg: False</param>
    public void SetDp(object? deviceId = null, object? dp = null, object? value = null)
    {
        _haContext.CallService("localtuya", "set_dp", null, new LocaltuyaSetDpParameters { DeviceId = deviceId, Dp = dp, Value = value });
    }
}

public partial record LocaltuyaSetDpParameters
{
    ///<summary>Device ID of device to change datapoint value for eg: 11100118278aab4de001</summary>
    [JsonPropertyName("device_id")]
    public object? DeviceId { get; init; }

    ///<summary>Datapoint index eg: 1</summary>
    [JsonPropertyName("dp")]
    public object? Dp { get; init; }

    ///<summary>New value to set eg: False</summary>
    [JsonPropertyName("value")]
    public object? Value { get; init; }
}

public partial class LockServices
{
    private readonly IHaContext _haContext;
    public LockServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Locks a lock.</summary>
    ///<param name="target">The target for this service call</param>
    public void Lock(ServiceTarget target, LockLockParameters data)
    {
        _haContext.CallService("lock", "lock", target, data);
    }

    ///<summary>Locks a lock.</summary>
    ///<param name="code">Code used to lock the lock. eg: 1234</param>
    public void Lock(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("lock", "lock", target, new LockLockParameters { Code = code });
    }

    ///<summary>Opens a lock.</summary>
    ///<param name="target">The target for this service call</param>
    public void Open(ServiceTarget target, LockOpenParameters data)
    {
        _haContext.CallService("lock", "open", target, data);
    }

    ///<summary>Opens a lock.</summary>
    ///<param name="code">Code used to open the lock. eg: 1234</param>
    public void Open(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("lock", "open", target, new LockOpenParameters { Code = code });
    }

    ///<summary>Unlocks a lock.</summary>
    ///<param name="target">The target for this service call</param>
    public void Unlock(ServiceTarget target, LockUnlockParameters data)
    {
        _haContext.CallService("lock", "unlock", target, data);
    }

    ///<summary>Unlocks a lock.</summary>
    ///<param name="code">Code used to unlock the lock. eg: 1234</param>
    public void Unlock(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("lock", "unlock", target, new LockUnlockParameters { Code = code });
    }
}

public partial record LockLockParameters
{
    ///<summary>Code used to lock the lock. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record LockOpenParameters
{
    ///<summary>Code used to open the lock. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record LockUnlockParameters
{
    ///<summary>Code used to unlock the lock. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial class LogbookServices
{
    private readonly IHaContext _haContext;
    public LogbookServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Tracks a custom activity.</summary>
    public void Log(LogbookLogParameters data)
    {
        _haContext.CallService("logbook", "log", null, data);
    }

    ///<summary>Tracks a custom activity.</summary>
    ///<param name="name">Custom name for an entity, can be referenced using the &apos;Entity ID&apos; field. eg: Kitchen</param>
    ///<param name="message">Message of the activity. eg: is being used</param>
    ///<param name="entityId">Entity to reference in the activity.</param>
    ///<param name="domain">Determines which icon is used in the activity. The icon illustrates the integration domain related to this activity. eg: light</param>
    public void Log(string name, string message, string? entityId = null, string? domain = null)
    {
        _haContext.CallService("logbook", "log", null, new LogbookLogParameters { Name = name, Message = message, EntityId = entityId, Domain = domain });
    }
}

public partial record LogbookLogParameters
{
    ///<summary>Custom name for an entity, can be referenced using the &apos;Entity ID&apos; field. eg: Kitchen</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Message of the activity. eg: is being used</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Entity to reference in the activity.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>Determines which icon is used in the activity. The icon illustrates the integration domain related to this activity. eg: light</summary>
    [JsonPropertyName("domain")]
    public string? Domain { get; init; }
}

public partial class LoggerServices
{
    private readonly IHaContext _haContext;
    public LoggerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the default log level for integrations.</summary>
    public void SetDefaultLevel(LoggerSetDefaultLevelParameters data)
    {
        _haContext.CallService("logger", "set_default_level", null, data);
    }

    ///<summary>Sets the default log level for integrations.</summary>
    ///<param name="level">Default severity level for all integrations.</param>
    public void SetDefaultLevel(object? level = null)
    {
        _haContext.CallService("logger", "set_default_level", null, new LoggerSetDefaultLevelParameters { Level = level });
    }

    ///<summary>Sets the log level for one or more integrations.</summary>
    public void SetLevel(object? data = null)
    {
        _haContext.CallService("logger", "set_level", null, data);
    }
}

public partial record LoggerSetDefaultLevelParameters
{
    ///<summary>Default severity level for all integrations.</summary>
    [JsonPropertyName("level")]
    public object? Level { get; init; }
}

public partial class MailAndPackagesServices
{
    private readonly IHaContext _haContext;
    public MailAndPackagesServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Refreshes the Mail Camera specified or all of them at once. Leave blank to refresh them all.</summary>
    public void UpdateImage(MailAndPackagesUpdateImageParameters data)
    {
        _haContext.CallService("mail_and_packages", "update_image", null, data);
    }

    ///<summary>Refreshes the Mail Camera specified or all of them at once. Leave blank to refresh them all.</summary>
    ///<param name="entityId">The camera entity to refresh. eg: camera.mail_usps_camera</param>
    public void UpdateImage(string? entityId = null)
    {
        _haContext.CallService("mail_and_packages", "update_image", null, new MailAndPackagesUpdateImageParameters { EntityId = entityId });
    }
}

public partial record MailAndPackagesUpdateImageParameters
{
    ///<summary>The camera entity to refresh. eg: camera.mail_usps_camera</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }
}

public partial class MediaPlayerServices
{
    private readonly IHaContext _haContext;
    public MediaPlayerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Browses the available media.</summary>
    ///<param name="target">The target for this service call</param>
    public void BrowseMedia(ServiceTarget target, MediaPlayerBrowseMediaParameters data)
    {
        _haContext.CallService("media_player", "browse_media", target, data);
    }

    ///<summary>Browses the available media.</summary>
    ///<param name="mediaContentType">The type of the content to browse, such as image, music, TV show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="mediaContentId">The ID of the content to browse. Integration dependent. eg: A:ALBUMARTIST/Beatles</param>
    public void BrowseMedia(ServiceTarget target, string? mediaContentType = null, string? mediaContentId = null)
    {
        _haContext.CallService("media_player", "browse_media", target, new MediaPlayerBrowseMediaParameters { MediaContentType = mediaContentType, MediaContentId = mediaContentId });
    }

    ///<summary>Browses the available media.</summary>
    ///<param name="target">The target for this service call</param>
    public Task<JsonElement?> BrowseMediaAsync(ServiceTarget target, MediaPlayerBrowseMediaParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("media_player", "browse_media", target, data);
    }

    ///<summary>Browses the available media.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="mediaContentType">The type of the content to browse, such as image, music, TV show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="mediaContentId">The ID of the content to browse. Integration dependent. eg: A:ALBUMARTIST/Beatles</param>
    public Task<JsonElement?> BrowseMediaAsync(ServiceTarget target, string? mediaContentType = null, string? mediaContentId = null)
    {
        return _haContext.CallServiceWithResponseAsync("media_player", "browse_media", target, new MediaPlayerBrowseMediaParameters { MediaContentType = mediaContentType, MediaContentId = mediaContentId });
    }

    ///<summary>Removes all items from the playlist.</summary>
    ///<param name="target">The target for this service call</param>
    public void ClearPlaylist(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "clear_playlist", target, data);
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    ///<param name="target">The target for this service call</param>
    public void Join(ServiceTarget target, MediaPlayerJoinParameters data)
    {
        _haContext.CallService("media_player", "join", target, data);
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    ///<param name="groupMembers">The players which will be synced with the playback specified in &apos;Targets&apos;. eg: - media_player.multiroom_player2 - media_player.multiroom_player3 </param>
    public void Join(ServiceTarget target, IEnumerable<string> groupMembers)
    {
        _haContext.CallService("media_player", "join", target, new MediaPlayerJoinParameters { GroupMembers = groupMembers });
    }

    ///<summary>Selects the next track.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaNextTrack(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "media_next_track", target, data);
    }

    ///<summary>Pauses.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaPause(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "media_pause", target, data);
    }

    ///<summary>Starts playing.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaPlay(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "media_play", target, data);
    }

    ///<summary>Toggles play/pause.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaPlayPause(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "media_play_pause", target, data);
    }

    ///<summary>Selects the previous track.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaPreviousTrack(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "media_previous_track", target, data);
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaSeek(ServiceTarget target, MediaPlayerMediaSeekParameters data)
    {
        _haContext.CallService("media_player", "media_seek", target, data);
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    ///<param name="seekPosition">Target position in the currently playing media. The format is platform dependent.</param>
    public void MediaSeek(ServiceTarget target, double seekPosition)
    {
        _haContext.CallService("media_player", "media_seek", target, new MediaPlayerMediaSeekParameters { SeekPosition = seekPosition });
    }

    ///<summary>Stops playing.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaStop(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "media_stop", target, data);
    }

    ///<summary>Starts playing specified media.</summary>
    ///<param name="target">The target for this service call</param>
    public void PlayMedia(ServiceTarget target, MediaPlayerPlayMediaParameters data)
    {
        _haContext.CallService("media_player", "play_media", target, data);
    }

    ///<summary>Starts playing specified media.</summary>
    ///<param name="media">The media selected to play. eg: {&quot;media_content_id&quot;: &quot;https://home-assistant.io/images/cast/splash.png&quot;, &quot;media_content_type&quot;: &quot;music&quot;}</param>
    ///<param name="enqueue">If the content should be played now or be added to the queue.</param>
    ///<param name="announce">If the media should be played as an announcement. eg: true</param>
    public void PlayMedia(ServiceTarget target, object media, object? enqueue = null, bool? announce = null)
    {
        _haContext.CallService("media_player", "play_media", target, new MediaPlayerPlayMediaParameters { Media = media, Enqueue = enqueue, Announce = announce });
    }

    ///<summary>Sets the repeat mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void RepeatSet(ServiceTarget target, MediaPlayerRepeatSetParameters data)
    {
        _haContext.CallService("media_player", "repeat_set", target, data);
    }

    ///<summary>Sets the repeat mode.</summary>
    ///<param name="repeat">Whether the media (one or all) should be played in a loop or not.</param>
    public void RepeatSet(ServiceTarget target, object repeat)
    {
        _haContext.CallService("media_player", "repeat_set", target, new MediaPlayerRepeatSetParameters { Repeat = repeat });
    }

    ///<summary>Searches the available media.</summary>
    ///<param name="target">The target for this service call</param>
    public void SearchMedia(ServiceTarget target, MediaPlayerSearchMediaParameters data)
    {
        _haContext.CallService("media_player", "search_media", target, data);
    }

    ///<summary>Searches the available media.</summary>
    ///<param name="searchQuery">The term to search for. eg: Beatles</param>
    ///<param name="mediaContentType">The type of the content to browse, such as image, music, TV show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="mediaContentId">The ID of the content to browse. Integration dependent. eg: A:ALBUMARTIST/Beatles</param>
    ///<param name="mediaFilterClasses">List of media classes to filter the search results by. eg: [&quot;album&quot;,&quot;artist&quot;]</param>
    public void SearchMedia(ServiceTarget target, string searchQuery, string? mediaContentType = null, string? mediaContentId = null, IEnumerable<string>? mediaFilterClasses = null)
    {
        _haContext.CallService("media_player", "search_media", target, new MediaPlayerSearchMediaParameters { SearchQuery = searchQuery, MediaContentType = mediaContentType, MediaContentId = mediaContentId, MediaFilterClasses = mediaFilterClasses });
    }

    ///<summary>Searches the available media.</summary>
    ///<param name="target">The target for this service call</param>
    public Task<JsonElement?> SearchMediaAsync(ServiceTarget target, MediaPlayerSearchMediaParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("media_player", "search_media", target, data);
    }

    ///<summary>Searches the available media.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="searchQuery">The term to search for. eg: Beatles</param>
    ///<param name="mediaContentType">The type of the content to browse, such as image, music, TV show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="mediaContentId">The ID of the content to browse. Integration dependent. eg: A:ALBUMARTIST/Beatles</param>
    ///<param name="mediaFilterClasses">List of media classes to filter the search results by. eg: [&quot;album&quot;,&quot;artist&quot;]</param>
    public Task<JsonElement?> SearchMediaAsync(ServiceTarget target, string searchQuery, string? mediaContentType = null, string? mediaContentId = null, IEnumerable<string>? mediaFilterClasses = null)
    {
        return _haContext.CallServiceWithResponseAsync("media_player", "search_media", target, new MediaPlayerSearchMediaParameters { SearchQuery = searchQuery, MediaContentType = mediaContentType, MediaContentId = mediaContentId, MediaFilterClasses = mediaFilterClasses });
    }

    ///<summary>Selects a specific sound mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectSoundMode(ServiceTarget target, MediaPlayerSelectSoundModeParameters data)
    {
        _haContext.CallService("media_player", "select_sound_mode", target, data);
    }

    ///<summary>Selects a specific sound mode.</summary>
    ///<param name="soundMode">Name of the sound mode to switch to. eg: Music</param>
    public void SelectSoundMode(ServiceTarget target, string? soundMode = null)
    {
        _haContext.CallService("media_player", "select_sound_mode", target, new MediaPlayerSelectSoundModeParameters { SoundMode = soundMode });
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectSource(ServiceTarget target, MediaPlayerSelectSourceParameters data)
    {
        _haContext.CallService("media_player", "select_source", target, data);
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    ///<param name="source">Name of the source to switch to. Platform dependent. eg: video1</param>
    public void SelectSource(ServiceTarget target, string source)
    {
        _haContext.CallService("media_player", "select_source", target, new MediaPlayerSelectSourceParameters { Source = source });
    }

    ///<summary>Enables or disables the shuffle mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void ShuffleSet(ServiceTarget target, MediaPlayerShuffleSetParameters data)
    {
        _haContext.CallService("media_player", "shuffle_set", target, data);
    }

    ///<summary>Enables or disables the shuffle mode.</summary>
    ///<param name="shuffle">Whether the media should be played in randomized order or not.</param>
    public void ShuffleSet(ServiceTarget target, bool shuffle)
    {
        _haContext.CallService("media_player", "shuffle_set", target, new MediaPlayerShuffleSetParameters { Shuffle = shuffle });
    }

    ///<summary>Toggles a media player on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "toggle", target, data);
    }

    ///<summary>Turns off the power of the media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "turn_off", target, data);
    }

    ///<summary>Turns on the power of the media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "turn_on", target, data);
    }

    ///<summary>Removes the player from a group. Only works on platforms which support player groups.</summary>
    ///<param name="target">The target for this service call</param>
    public void Unjoin(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "unjoin", target, data);
    }

    ///<summary>Turns down the volume.</summary>
    ///<param name="target">The target for this service call</param>
    public void VolumeDown(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "volume_down", target, data);
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void VolumeMute(ServiceTarget target, MediaPlayerVolumeMuteParameters data)
    {
        _haContext.CallService("media_player", "volume_mute", target, data);
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    ///<param name="isVolumeMuted">Defines whether or not it is muted.</param>
    public void VolumeMute(ServiceTarget target, bool isVolumeMuted)
    {
        _haContext.CallService("media_player", "volume_mute", target, new MediaPlayerVolumeMuteParameters { IsVolumeMuted = isVolumeMuted });
    }

    ///<summary>Sets the volume level.</summary>
    ///<param name="target">The target for this service call</param>
    public void VolumeSet(ServiceTarget target, MediaPlayerVolumeSetParameters data)
    {
        _haContext.CallService("media_player", "volume_set", target, data);
    }

    ///<summary>Sets the volume level.</summary>
    ///<param name="volumeLevel">The volume. 0 is inaudible, 1 is the maximum volume.</param>
    public void VolumeSet(ServiceTarget target, double volumeLevel)
    {
        _haContext.CallService("media_player", "volume_set", target, new MediaPlayerVolumeSetParameters { VolumeLevel = volumeLevel });
    }

    ///<summary>Turns up the volume.</summary>
    ///<param name="target">The target for this service call</param>
    public void VolumeUp(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "volume_up", target, data);
    }
}

public partial record MediaPlayerBrowseMediaParameters
{
    ///<summary>The type of the content to browse, such as image, music, TV show, video, episode, channel, or playlist. eg: music</summary>
    [JsonPropertyName("media_content_type")]
    public string? MediaContentType { get; init; }

    ///<summary>The ID of the content to browse. Integration dependent. eg: A:ALBUMARTIST/Beatles</summary>
    [JsonPropertyName("media_content_id")]
    public string? MediaContentId { get; init; }
}

public partial record MediaPlayerJoinParameters
{
    ///<summary>The players which will be synced with the playback specified in &apos;Targets&apos;. eg: - media_player.multiroom_player2 - media_player.multiroom_player3 </summary>
    [JsonPropertyName("group_members")]
    public IEnumerable<string>? GroupMembers { get; init; }
}

public partial record MediaPlayerMediaSeekParameters
{
    ///<summary>Target position in the currently playing media. The format is platform dependent.</summary>
    [JsonPropertyName("seek_position")]
    public double? SeekPosition { get; init; }
}

public partial record MediaPlayerPlayMediaParameters
{
    ///<summary>The media selected to play. eg: {&quot;media_content_id&quot;: &quot;https://home-assistant.io/images/cast/splash.png&quot;, &quot;media_content_type&quot;: &quot;music&quot;}</summary>
    [JsonPropertyName("media")]
    public object? Media { get; init; }

    ///<summary>If the content should be played now or be added to the queue.</summary>
    [JsonPropertyName("enqueue")]
    public object? Enqueue { get; init; }

    ///<summary>If the media should be played as an announcement. eg: true</summary>
    [JsonPropertyName("announce")]
    public bool? Announce { get; init; }
}

public partial record MediaPlayerRepeatSetParameters
{
    ///<summary>Whether the media (one or all) should be played in a loop or not.</summary>
    [JsonPropertyName("repeat")]
    public object? Repeat { get; init; }
}

public partial record MediaPlayerSearchMediaParameters
{
    ///<summary>The term to search for. eg: Beatles</summary>
    [JsonPropertyName("search_query")]
    public string? SearchQuery { get; init; }

    ///<summary>The type of the content to browse, such as image, music, TV show, video, episode, channel, or playlist. eg: music</summary>
    [JsonPropertyName("media_content_type")]
    public string? MediaContentType { get; init; }

    ///<summary>The ID of the content to browse. Integration dependent. eg: A:ALBUMARTIST/Beatles</summary>
    [JsonPropertyName("media_content_id")]
    public string? MediaContentId { get; init; }

    ///<summary>List of media classes to filter the search results by. eg: [&quot;album&quot;,&quot;artist&quot;]</summary>
    [JsonPropertyName("media_filter_classes")]
    public IEnumerable<string>? MediaFilterClasses { get; init; }
}

public partial record MediaPlayerSelectSoundModeParameters
{
    ///<summary>Name of the sound mode to switch to. eg: Music</summary>
    [JsonPropertyName("sound_mode")]
    public string? SoundMode { get; init; }
}

public partial record MediaPlayerSelectSourceParameters
{
    ///<summary>Name of the source to switch to. Platform dependent. eg: video1</summary>
    [JsonPropertyName("source")]
    public string? Source { get; init; }
}

public partial record MediaPlayerShuffleSetParameters
{
    ///<summary>Whether the media should be played in randomized order or not.</summary>
    [JsonPropertyName("shuffle")]
    public bool? Shuffle { get; init; }
}

public partial record MediaPlayerVolumeMuteParameters
{
    ///<summary>Defines whether or not it is muted.</summary>
    [JsonPropertyName("is_volume_muted")]
    public bool? IsVolumeMuted { get; init; }
}

public partial record MediaPlayerVolumeSetParameters
{
    ///<summary>The volume. 0 is inaudible, 1 is the maximum volume.</summary>
    [JsonPropertyName("volume_level")]
    public double? VolumeLevel { get; init; }
}

public partial class MotionBlindsServices
{
    private readonly IHaContext _haContext;
    public MotionBlindsServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the absolute position of the cover.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetAbsolutePosition(ServiceTarget target, MotionBlindsSetAbsolutePositionParameters data)
    {
        _haContext.CallService("motion_blinds", "set_absolute_position", target, data);
    }

    ///<summary>Sets the absolute position of the cover.</summary>
    ///<param name="absolutePosition">Absolute position to move to.</param>
    ///<param name="tiltPosition">Tilt position to move to.</param>
    ///<param name="width">Specify the width that is covered, only for TDBU Combined entities.</param>
    public void SetAbsolutePosition(ServiceTarget target, long absolutePosition, long? tiltPosition = null, long? width = null)
    {
        _haContext.CallService("motion_blinds", "set_absolute_position", target, new MotionBlindsSetAbsolutePositionParameters { AbsolutePosition = absolutePosition, TiltPosition = tiltPosition, Width = width });
    }
}

public partial record MotionBlindsSetAbsolutePositionParameters
{
    ///<summary>Absolute position to move to.</summary>
    [JsonPropertyName("absolute_position")]
    public long? AbsolutePosition { get; init; }

    ///<summary>Tilt position to move to.</summary>
    [JsonPropertyName("tilt_position")]
    public long? TiltPosition { get; init; }

    ///<summary>Specify the width that is covered, only for TDBU Combined entities.</summary>
    [JsonPropertyName("width")]
    public long? Width { get; init; }
}

public partial class MqttServices
{
    private readonly IHaContext _haContext;
    public MqttServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Writes all messages on a specific topic into the `mqtt_dump.txt` file in your configuration folder.</summary>
    public void Dump(MqttDumpParameters data)
    {
        _haContext.CallService("mqtt", "dump", null, data);
    }

    ///<summary>Writes all messages on a specific topic into the `mqtt_dump.txt` file in your configuration folder.</summary>
    ///<param name="topic">Topic to listen to. eg: OpenZWave/#</param>
    ///<param name="duration">How long we should listen for messages in seconds.</param>
    public void Dump(string? topic = null, long? duration = null)
    {
        _haContext.CallService("mqtt", "dump", null, new MqttDumpParameters { Topic = topic, Duration = duration });
    }

    ///<summary>Publishes a message to an MQTT topic.</summary>
    public void Publish(MqttPublishParameters data)
    {
        _haContext.CallService("mqtt", "publish", null, data);
    }

    ///<summary>Publishes a message to an MQTT topic.</summary>
    ///<param name="topic">Topic to publish to. eg: /homeassistant/hello</param>
    ///<param name="payload">The payload to publish. Publishes an empty message if not provided. eg: The temperature is {{ states(&apos;sensor.temperature&apos;) }}</param>
    ///<param name="evaluatePayload">If &apos;Payload&apos; is a Python bytes literal, evaluate the bytes literal and publish the raw data.</param>
    ///<param name="qos">Quality of Service to use. 0: At most once. 1: At least once. 2: Exactly once.</param>
    ///<param name="retain">If the message should have the retain flag set. If set, the broker stores the most recent message on a topic.</param>
    public void Publish(string topic, object? payload = null, bool? evaluatePayload = null, object? qos = null, bool? retain = null)
    {
        _haContext.CallService("mqtt", "publish", null, new MqttPublishParameters { Topic = topic, Payload = payload, EvaluatePayload = evaluatePayload, Qos = qos, Retain = retain });
    }

    ///<summary>Reloads MQTT entities from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("mqtt", "reload", null, data);
    }
}

public partial record MqttDumpParameters
{
    ///<summary>Topic to listen to. eg: OpenZWave/#</summary>
    [JsonPropertyName("topic")]
    public string? Topic { get; init; }

    ///<summary>How long we should listen for messages in seconds.</summary>
    [JsonPropertyName("duration")]
    public long? Duration { get; init; }
}

public partial record MqttPublishParameters
{
    ///<summary>Topic to publish to. eg: /homeassistant/hello</summary>
    [JsonPropertyName("topic")]
    public string? Topic { get; init; }

    ///<summary>The payload to publish. Publishes an empty message if not provided. eg: The temperature is {{ states(&apos;sensor.temperature&apos;) }}</summary>
    [JsonPropertyName("payload")]
    public object? Payload { get; init; }

    ///<summary>If &apos;Payload&apos; is a Python bytes literal, evaluate the bytes literal and publish the raw data.</summary>
    [JsonPropertyName("evaluate_payload")]
    public bool? EvaluatePayload { get; init; }

    ///<summary>Quality of Service to use. 0: At most once. 1: At least once. 2: Exactly once.</summary>
    [JsonPropertyName("qos")]
    public object? Qos { get; init; }

    ///<summary>If the message should have the retain flag set. If set, the broker stores the most recent message on a topic.</summary>
    [JsonPropertyName("retain")]
    public bool? Retain { get; init; }
}

public partial class NotifyServices
{
    private readonly IHaContext _haContext;
    public NotifyServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sends a notification message using the discord_homeassistant service.</summary>
    public void DiscordHomeassistant(NotifyDiscordHomeassistantParameters data)
    {
        _haContext.CallService("notify", "discord_homeassistant", null, data);
    }

    ///<summary>Sends a notification message using the discord_homeassistant service.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void DiscordHomeassistant(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "discord_homeassistant", null, new NotifyDiscordHomeassistantParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the mobile_app_sm_g780g integration.</summary>
    public void MobileAppSmG780g(NotifyMobileAppSmG780gParameters data)
    {
        _haContext.CallService("notify", "mobile_app_sm_g780g", null, data);
    }

    ///<summary>Sends a notification message using the mobile_app_sm_g780g integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void MobileAppSmG780g(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "mobile_app_sm_g780g", null, new NotifyMobileAppSmG780gParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the mobile_app_tablet_vincent integration.</summary>
    public void MobileAppTabletVincent(NotifyMobileAppTabletVincentParameters data)
    {
        _haContext.CallService("notify", "mobile_app_tablet_vincent", null, data);
    }

    ///<summary>Sends a notification message using the mobile_app_tablet_vincent integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void MobileAppTabletVincent(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "mobile_app_tablet_vincent", null, new NotifyMobileAppTabletVincentParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the mobile_app_vincent_phone integration.</summary>
    public void MobileAppVincentPhone(NotifyMobileAppVincentPhoneParameters data)
    {
        _haContext.CallService("notify", "mobile_app_vincent_phone", null, data);
    }

    ///<summary>Sends a notification message using the mobile_app_vincent_phone integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void MobileAppVincentPhone(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "mobile_app_vincent_phone", null, new NotifyMobileAppVincentPhoneParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the notify service.</summary>
    public void Notify(NotifyNotifyParameters data)
    {
        _haContext.CallService("notify", "notify", null, data);
    }

    ///<summary>Sends a notification message using the notify service.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void Notify(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "notify", null, new NotifyNotifyParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification that is visible in the notifications panel.</summary>
    public void PersistentNotification(NotifyPersistentNotificationParameters data)
    {
        _haContext.CallService("notify", "persistent_notification", null, data);
    }

    ///<summary>Sends a notification that is visible in the notifications panel.</summary>
    ///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title">Title of the notification. eg: Your Garage Door Friend</param>
    ///<param name="data">Some integrations provide extended functionality via this field. For more information, refer to the integration documentation. eg: platform specific</param>
    public void PersistentNotification(string message, string? title = null, object? data = null)
    {
        _haContext.CallService("notify", "persistent_notification", null, new NotifyPersistentNotificationParameters { Message = message, Title = title, Data = data });
    }

    ///<summary>Sends a notification message.</summary>
    ///<param name="target">The target for this service call</param>
    public void SendMessage(ServiceTarget target, NotifySendMessageParameters data)
    {
        _haContext.CallService("notify", "send_message", target, data);
    }

    ///<summary>Sends a notification message.</summary>
    ///<param name="message">Your notification message.</param>
    ///<param name="title">Title for your notification message.</param>
    public void SendMessage(ServiceTarget target, string message, string? title = null)
    {
        _haContext.CallService("notify", "send_message", target, new NotifySendMessageParameters { Message = message, Title = title });
    }
}

public partial record NotifyDiscordHomeassistantParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyMobileAppSmG780gParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyMobileAppTabletVincentParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyMobileAppVincentPhoneParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyNotifyParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyPersistentNotificationParameters
{
    ///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Title of the notification. eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary>Some integrations provide extended functionality via this field. For more information, refer to the integration documentation. eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifySendMessageParameters
{
    ///<summary>Your notification message.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Title for your notification message.</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }
}

public partial class NumberServices
{
    private readonly IHaContext _haContext;
    public NumberServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Decrease a number entity value by a certain amount.</summary>
    ///<param name="target">The target for this service call</param>
    public void Decrement(ServiceTarget target, NumberDecrementParameters data)
    {
        _haContext.CallService("number", "decrement", target, data);
    }

    ///<summary>Decrease a number entity value by a certain amount.</summary>
    ///<param name="amount">The amount to decrease the number with. If not provided, the step of the number entity will be used.</param>
    public void Decrement(ServiceTarget target, long? amount = null)
    {
        _haContext.CallService("number", "decrement", target, new NumberDecrementParameters { Amount = amount });
    }

    ///<summary>Increase a number entity value by a certain amount.</summary>
    ///<param name="target">The target for this service call</param>
    public void Increment(ServiceTarget target, NumberIncrementParameters data)
    {
        _haContext.CallService("number", "increment", target, data);
    }

    ///<summary>Increase a number entity value by a certain amount.</summary>
    ///<param name="amount">The amount to increase the number with. If not provided, the step of the number entity will be used.</param>
    public void Increment(ServiceTarget target, long? amount = null)
    {
        _haContext.CallService("number", "increment", target, new NumberIncrementParameters { Amount = amount });
    }

    ///<summary>Set a number entity to its maximum value.</summary>
    ///<param name="target">The target for this service call</param>
    public void Max(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("number", "max", target, data);
    }

    ///<summary>Set a number entity to its minimum value.</summary>
    ///<param name="target">The target for this service call</param>
    public void Min(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("number", "min", target, data);
    }

    ///<summary>Sets the value of a number.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, NumberSetValueParameters data)
    {
        _haContext.CallService("number", "set_value", target, data);
    }

    ///<summary>Sets the value of a number.</summary>
    ///<param name="value">The target value to set. eg: 42</param>
    public void SetValue(ServiceTarget target, string value)
    {
        _haContext.CallService("number", "set_value", target, new NumberSetValueParameters { Value = value });
    }
}

public partial record NumberDecrementParameters
{
    ///<summary>The amount to decrease the number with. If not provided, the step of the number entity will be used.</summary>
    [JsonPropertyName("amount")]
    public long? Amount { get; init; }
}

public partial record NumberIncrementParameters
{
    ///<summary>The amount to increase the number with. If not provided, the step of the number entity will be used.</summary>
    [JsonPropertyName("amount")]
    public long? Amount { get; init; }
}

public partial record NumberSetValueParameters
{
    ///<summary>The target value to set. eg: 42</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial class OnedriveServices
{
    private readonly IHaContext _haContext;
    public OnedriveServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Uploads files to OneDrive.</summary>
    public void Upload(OnedriveUploadParameters data)
    {
        _haContext.CallService("onedrive", "upload", null, data);
    }

    ///<summary>Uploads files to OneDrive.</summary>
    ///<param name="configEntryId">The config entry representing the OneDrive you want to upload to.</param>
    ///<param name="filename">Path to the file to upload. eg: /config/www/image.jpg</param>
    ///<param name="destinationFolder">Folder inside the Home Assistant app folder (Apps/Home Assistant) you want to upload the file to. Will be created if it does not exist. eg: photos/snapshots</param>
    public void Upload(object configEntryId, string destinationFolder, object? filename = null)
    {
        _haContext.CallService("onedrive", "upload", null, new OnedriveUploadParameters { ConfigEntryId = configEntryId, Filename = filename, DestinationFolder = destinationFolder });
    }

    ///<summary>Uploads files to OneDrive.</summary>
    public Task<JsonElement?> UploadAsync(OnedriveUploadParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("onedrive", "upload", null, data);
    }

    ///<summary>Uploads files to OneDrive.</summary>
    ///<param name="configEntryId">The config entry representing the OneDrive you want to upload to.</param>
    ///<param name="filename">Path to the file to upload. eg: /config/www/image.jpg</param>
    ///<param name="destinationFolder">Folder inside the Home Assistant app folder (Apps/Home Assistant) you want to upload the file to. Will be created if it does not exist. eg: photos/snapshots</param>
    public Task<JsonElement?> UploadAsync(object configEntryId, string destinationFolder, object? filename = null)
    {
        return _haContext.CallServiceWithResponseAsync("onedrive", "upload", null, new OnedriveUploadParameters { ConfigEntryId = configEntryId, Filename = filename, DestinationFolder = destinationFolder });
    }
}

public partial record OnedriveUploadParameters
{
    ///<summary>The config entry representing the OneDrive you want to upload to.</summary>
    [JsonPropertyName("config_entry_id")]
    public object? ConfigEntryId { get; init; }

    ///<summary>Path to the file to upload. eg: /config/www/image.jpg</summary>
    [JsonPropertyName("filename")]
    public object? Filename { get; init; }

    ///<summary>Folder inside the Home Assistant app folder (Apps/Home Assistant) you want to upload the file to. Will be created if it does not exist. eg: photos/snapshots</summary>
    [JsonPropertyName("destination_folder")]
    public string? DestinationFolder { get; init; }
}

public partial class OpenaiConversationServices
{
    private readonly IHaContext _haContext;
    public OpenaiConversationServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sends a conversational query to ChatGPT including any attached image or PDF files</summary>
    public void GenerateContent(OpenaiConversationGenerateContentParameters data)
    {
        _haContext.CallService("openai_conversation", "generate_content", null, data);
    }

    ///<summary>Sends a conversational query to ChatGPT including any attached image or PDF files</summary>
    ///<param name="configEntry">The config entry to use for this action</param>
    ///<param name="prompt">The prompt to send eg: Hello, how can I help you?</param>
    ///<param name="filenames">List of files to upload eg: - /path/to/file1.txt - /path/to/file2.txt </param>
    public void GenerateContent(object configEntry, string prompt, string? filenames = null)
    {
        _haContext.CallService("openai_conversation", "generate_content", null, new OpenaiConversationGenerateContentParameters { ConfigEntry = configEntry, Prompt = prompt, Filenames = filenames });
    }

    ///<summary>Sends a conversational query to ChatGPT including any attached image or PDF files</summary>
    public Task<JsonElement?> GenerateContentAsync(OpenaiConversationGenerateContentParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("openai_conversation", "generate_content", null, data);
    }

    ///<summary>Sends a conversational query to ChatGPT including any attached image or PDF files</summary>
    ///<param name="configEntry">The config entry to use for this action</param>
    ///<param name="prompt">The prompt to send eg: Hello, how can I help you?</param>
    ///<param name="filenames">List of files to upload eg: - /path/to/file1.txt - /path/to/file2.txt </param>
    public Task<JsonElement?> GenerateContentAsync(object configEntry, string prompt, string? filenames = null)
    {
        return _haContext.CallServiceWithResponseAsync("openai_conversation", "generate_content", null, new OpenaiConversationGenerateContentParameters { ConfigEntry = configEntry, Prompt = prompt, Filenames = filenames });
    }

    ///<summary>Turns a prompt into an image</summary>
    public void GenerateImage(OpenaiConversationGenerateImageParameters data)
    {
        _haContext.CallService("openai_conversation", "generate_image", null, data);
    }

    ///<summary>Turns a prompt into an image</summary>
    ///<param name="configEntry">The config entry to use for this action</param>
    ///<param name="prompt">The text to turn into an image eg: A photo of a dog</param>
    ///<param name="size">The size of the image to generate eg: 1024x1024</param>
    ///<param name="quality">The quality of the image that will be generated eg: standard</param>
    ///<param name="style">The style of the generated image eg: vivid</param>
    public void GenerateImage(object configEntry, string prompt, object? size = null, object? quality = null, object? style = null)
    {
        _haContext.CallService("openai_conversation", "generate_image", null, new OpenaiConversationGenerateImageParameters { ConfigEntry = configEntry, Prompt = prompt, Size = size, Quality = quality, Style = style });
    }

    ///<summary>Turns a prompt into an image</summary>
    public Task<JsonElement?> GenerateImageAsync(OpenaiConversationGenerateImageParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("openai_conversation", "generate_image", null, data);
    }

    ///<summary>Turns a prompt into an image</summary>
    ///<param name="configEntry">The config entry to use for this action</param>
    ///<param name="prompt">The text to turn into an image eg: A photo of a dog</param>
    ///<param name="size">The size of the image to generate eg: 1024x1024</param>
    ///<param name="quality">The quality of the image that will be generated eg: standard</param>
    ///<param name="style">The style of the generated image eg: vivid</param>
    public Task<JsonElement?> GenerateImageAsync(object configEntry, string prompt, object? size = null, object? quality = null, object? style = null)
    {
        return _haContext.CallServiceWithResponseAsync("openai_conversation", "generate_image", null, new OpenaiConversationGenerateImageParameters { ConfigEntry = configEntry, Prompt = prompt, Size = size, Quality = quality, Style = style });
    }
}

public partial record OpenaiConversationGenerateContentParameters
{
    ///<summary>The config entry to use for this action</summary>
    [JsonPropertyName("config_entry")]
    public object? ConfigEntry { get; init; }

    ///<summary>The prompt to send eg: Hello, how can I help you?</summary>
    [JsonPropertyName("prompt")]
    public string? Prompt { get; init; }

    ///<summary>List of files to upload eg: - /path/to/file1.txt - /path/to/file2.txt </summary>
    [JsonPropertyName("filenames")]
    public string? Filenames { get; init; }
}

public partial record OpenaiConversationGenerateImageParameters
{
    ///<summary>The config entry to use for this action</summary>
    [JsonPropertyName("config_entry")]
    public object? ConfigEntry { get; init; }

    ///<summary>The text to turn into an image eg: A photo of a dog</summary>
    [JsonPropertyName("prompt")]
    public string? Prompt { get; init; }

    ///<summary>The size of the image to generate eg: 1024x1024</summary>
    [JsonPropertyName("size")]
    public object? Size { get; init; }

    ///<summary>The quality of the image that will be generated eg: standard</summary>
    [JsonPropertyName("quality")]
    public object? Quality { get; init; }

    ///<summary>The style of the generated image eg: vivid</summary>
    [JsonPropertyName("style")]
    public object? Style { get; init; }
}

public partial class PersistentNotificationServices
{
    private readonly IHaContext _haContext;
    public PersistentNotificationServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Shows a notification on the notifications panel.</summary>
    public void Create(PersistentNotificationCreateParameters data)
    {
        _haContext.CallService("persistent_notification", "create", null, data);
    }

    ///<summary>Shows a notification on the notifications panel.</summary>
    ///<param name="message">Message body of the notification. eg: Please check your configuration.yaml.</param>
    ///<param name="title">Optional title of the notification. eg: Test notification</param>
    ///<param name="notificationId">ID of the notification. This new notification will overwrite an existing notification with the same ID. eg: 1234</param>
    public void Create(string message, string? title = null, string? notificationId = null)
    {
        _haContext.CallService("persistent_notification", "create", null, new PersistentNotificationCreateParameters { Message = message, Title = title, NotificationId = notificationId });
    }

    ///<summary>Deletes a notification from the notifications panel.</summary>
    public void Dismiss(PersistentNotificationDismissParameters data)
    {
        _haContext.CallService("persistent_notification", "dismiss", null, data);
    }

    ///<summary>Deletes a notification from the notifications panel.</summary>
    ///<param name="notificationId">ID of the notification to be deleted. eg: 1234</param>
    public void Dismiss(string notificationId)
    {
        _haContext.CallService("persistent_notification", "dismiss", null, new PersistentNotificationDismissParameters { NotificationId = notificationId });
    }

    ///<summary>Deletes all notifications from the notifications panel.</summary>
    public void DismissAll(object? data = null)
    {
        _haContext.CallService("persistent_notification", "dismiss_all", null, data);
    }
}

public partial record PersistentNotificationCreateParameters
{
    ///<summary>Message body of the notification. eg: Please check your configuration.yaml.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Optional title of the notification. eg: Test notification</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary>ID of the notification. This new notification will overwrite an existing notification with the same ID. eg: 1234</summary>
    [JsonPropertyName("notification_id")]
    public string? NotificationId { get; init; }
}

public partial record PersistentNotificationDismissParameters
{
    ///<summary>ID of the notification to be deleted. eg: 1234</summary>
    [JsonPropertyName("notification_id")]
    public string? NotificationId { get; init; }
}

public partial class PersonServices
{
    private readonly IHaContext _haContext;
    public PersonServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Add a device tracker to a person.</summary>
    public void AddDeviceTracker(PersonAddDeviceTrackerParameters data)
    {
        _haContext.CallService("person", "add_device_tracker", null, data);
    }

    ///<summary>Add a device tracker to a person.</summary>
    ///<param name="entityId">The person entity ID to add the device tracker to.</param>
    ///<param name="deviceTracker">The device tracker entity ID to add to the person.</param>
    public void AddDeviceTracker(string entityId, IEnumerable<string> deviceTracker)
    {
        _haContext.CallService("person", "add_device_tracker", null, new PersonAddDeviceTrackerParameters { EntityId = entityId, DeviceTracker = deviceTracker });
    }

    ///<summary>Reloads persons from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("person", "reload", null, data);
    }

    ///<summary>Remove a device tracker from a person.</summary>
    public void RemoveDeviceTracker(PersonRemoveDeviceTrackerParameters data)
    {
        _haContext.CallService("person", "remove_device_tracker", null, data);
    }

    ///<summary>Remove a device tracker from a person.</summary>
    ///<param name="entityId">The person entity ID to remove the device tracker from.</param>
    ///<param name="deviceTracker">The device tracker entity ID to remove from the person.</param>
    public void RemoveDeviceTracker(string entityId, IEnumerable<string> deviceTracker)
    {
        _haContext.CallService("person", "remove_device_tracker", null, new PersonRemoveDeviceTrackerParameters { EntityId = entityId, DeviceTracker = deviceTracker });
    }
}

public partial record PersonAddDeviceTrackerParameters
{
    ///<summary>The person entity ID to add the device tracker to.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>The device tracker entity ID to add to the person.</summary>
    [JsonPropertyName("device_tracker")]
    public IEnumerable<string>? DeviceTracker { get; init; }
}

public partial record PersonRemoveDeviceTrackerParameters
{
    ///<summary>The person entity ID to remove the device tracker from.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>The device tracker entity ID to remove from the person.</summary>
    [JsonPropertyName("device_tracker")]
    public IEnumerable<string>? DeviceTracker { get; init; }
}

public partial class PowercalcServices
{
    private readonly IHaContext _haContext;
    public PowercalcServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Start execution of a playbook.</summary>
    ///<param name="target">The target for this service call</param>
    public void ActivatePlaybook(ServiceTarget target, PowercalcActivatePlaybookParameters data)
    {
        _haContext.CallService("powercalc", "activate_playbook", target, data);
    }

    ///<summary>Start execution of a playbook.</summary>
    ///<param name="playbookId">Playbook identifier. eg: program1</param>
    public void ActivatePlaybook(ServiceTarget target, string playbookId)
    {
        _haContext.CallService("powercalc", "activate_playbook", target, new PowercalcActivatePlaybookParameters { PlaybookId = playbookId });
    }

    ///<summary>Sets the energy sensor to a given kWh value.</summary>
    ///<param name="target">The target for this service call</param>
    public void CalibrateEnergy(ServiceTarget target, PowercalcCalibrateEnergyParameters data)
    {
        _haContext.CallService("powercalc", "calibrate_energy", target, data);
    }

    ///<summary>Sets the energy sensor to a given kWh value.</summary>
    ///<param name="value">The value to set. eg: 100</param>
    public void CalibrateEnergy(ServiceTarget target, string value)
    {
        _haContext.CallService("powercalc", "calibrate_energy", target, new PowercalcCalibrateEnergyParameters { Value = value });
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    ///<param name="target">The target for this service call</param>
    public void CalibrateUtilityMeter(ServiceTarget target, PowercalcCalibrateUtilityMeterParameters data)
    {
        _haContext.CallService("powercalc", "calibrate_utility_meter", target, data);
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    ///<param name="value">The value to set. eg: 100</param>
    public void CalibrateUtilityMeter(ServiceTarget target, string value)
    {
        _haContext.CallService("powercalc", "calibrate_utility_meter", target, new PowercalcCalibrateUtilityMeterParameters { Value = value });
    }

    ///<summary>Batch change configuration of all Powercalc config entries</summary>
    public void ChangeGuiConfig(PowercalcChangeGuiConfigParameters data)
    {
        _haContext.CallService("powercalc", "change_gui_config", null, data);
    }

    ///<summary>Batch change configuration of all Powercalc config entries</summary>
    ///<param name="field">The field you&apos;d like to change</param>
    ///<param name="value">The value to set.</param>
    public void ChangeGuiConfig(object @field, string value)
    {
        _haContext.CallService("powercalc", "change_gui_config", null, new PowercalcChangeGuiConfigParameters { Field = @field, Value = value });
    }

    ///<summary>Get current running playbook</summary>
    public void GetActivePlaybook(object? data = null)
    {
        _haContext.CallService("powercalc", "get_active_playbook", null, data);
    }

    ///<summary>Get current running playbook</summary>
    public Task<JsonElement?> GetActivePlaybookAsync(object? data = null)
    {
        return _haContext.CallServiceWithResponseAsync("powercalc", "get_active_playbook", null, data);
    }

    ///<summary>Retrieve all entity id&apos;s of a group energy or power sensor</summary>
    ///<param name="target">The target for this service call</param>
    public void GetGroupEntities(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("powercalc", "get_group_entities", target, data);
    }

    ///<summary>Retrieve all entity id&apos;s of a group energy or power sensor</summary>
    ///<param name="target">The target for this service call</param>
    public Task<JsonElement?> GetGroupEntitiesAsync(ServiceTarget target, object? data = null)
    {
        return _haContext.CallServiceWithResponseAsync("powercalc", "get_group_entities", target, data);
    }

    ///<summary>Increases the sensor with a given amount.</summary>
    ///<param name="target">The target for this service call</param>
    public void IncreaseDailyEnergy(ServiceTarget target, PowercalcIncreaseDailyEnergyParameters data)
    {
        _haContext.CallService("powercalc", "increase_daily_energy", target, data);
    }

    ///<summary>Increases the sensor with a given amount.</summary>
    ///<param name="value">Amount to add to the sensor. eg: 100</param>
    public void IncreaseDailyEnergy(ServiceTarget target, string value)
    {
        _haContext.CallService("powercalc", "increase_daily_energy", target, new PowercalcIncreaseDailyEnergyParameters { Value = value });
    }

    ///<summary>Reload Powercalc configuration and entities</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("powercalc", "reload", null, data);
    }

    ///<summary>Reset an energy sensor to zero kWh.</summary>
    ///<param name="target">The target for this service call</param>
    public void ResetEnergy(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("powercalc", "reset_energy", target, data);
    }

    ///<summary>Stop currently active playbook.</summary>
    ///<param name="target">The target for this service call</param>
    public void StopPlaybook(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("powercalc", "stop_playbook", target, data);
    }

    ///<summary>Some profiles in the library has different sub profiles. This service allows you to switch to another one.</summary>
    ///<param name="target">The target for this service call</param>
    public void SwitchSubProfile(ServiceTarget target, PowercalcSwitchSubProfileParameters data)
    {
        _haContext.CallService("powercalc", "switch_sub_profile", target, data);
    }

    ///<summary>Some profiles in the library has different sub profiles. This service allows you to switch to another one.</summary>
    ///<param name="profile">Define one of the possible sub profiles eg: night_vision</param>
    public void SwitchSubProfile(ServiceTarget target, string profile)
    {
        _haContext.CallService("powercalc", "switch_sub_profile", target, new PowercalcSwitchSubProfileParameters { Profile = profile });
    }

    ///<summary>Update the profile library and reinitialize discovery</summary>
    public void UpdateLibrary(object? data = null)
    {
        _haContext.CallService("powercalc", "update_library", null, data);
    }
}

public partial record PowercalcActivatePlaybookParameters
{
    ///<summary>Playbook identifier. eg: program1</summary>
    [JsonPropertyName("playbook_id")]
    public string? PlaybookId { get; init; }
}

public partial record PowercalcCalibrateEnergyParameters
{
    ///<summary>The value to set. eg: 100</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial record PowercalcCalibrateUtilityMeterParameters
{
    ///<summary>The value to set. eg: 100</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial record PowercalcChangeGuiConfigParameters
{
    ///<summary>The field you&apos;d like to change</summary>
    [JsonPropertyName("field")]
    public object? Field { get; init; }

    ///<summary>The value to set.</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial record PowercalcIncreaseDailyEnergyParameters
{
    ///<summary>Amount to add to the sensor. eg: 100</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial record PowercalcSwitchSubProfileParameters
{
    ///<summary>Define one of the possible sub profiles eg: night_vision</summary>
    [JsonPropertyName("profile")]
    public string? Profile { get; init; }
}

public partial class RecorderServices
{
    private readonly IHaContext _haContext;
    public RecorderServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Stops the recording of events and state changes.</summary>
    public void Disable(object? data = null)
    {
        _haContext.CallService("recorder", "disable", null, data);
    }

    ///<summary>Starts the recording of events and state changes.</summary>
    public void Enable(object? data = null)
    {
        _haContext.CallService("recorder", "enable", null, data);
    }

    ///<summary>Retrieves statistics data for entities within a specific time period.</summary>
    public void GetStatistics(RecorderGetStatisticsParameters data)
    {
        _haContext.CallService("recorder", "get_statistics", null, data);
    }

    ///<summary>Retrieves statistics data for entities within a specific time period.</summary>
    ///<param name="startTime">The start time for the statistics query. eg: 2025-01-01 00:00:00</param>
    ///<param name="endTime">The end time for the statistics query. If omitted, returns all statistics from start time onward. eg: 2025-01-02 00:00:00</param>
    ///<param name="statisticIds">The entity IDs or statistic IDs to return statistics for. eg: [&quot;sensor.energy_consumption&quot;,&quot;sensor.temperature&quot;]</param>
    ///<param name="period">The time period to group statistics by. eg: hour</param>
    ///<param name="types">The types of statistics values to return. eg: [&quot;mean&quot;,&quot;sum&quot;]</param>
    ///<param name="units">Optional unit conversion mapping. eg: {&quot;energy&quot;:&quot;kWh&quot;,&quot;temperature&quot;:&quot;°C&quot;}</param>
    public void GetStatistics(DateTime startTime, IEnumerable<object> statisticIds, object period, IEnumerable<object> types, DateTime? endTime = null, object? units = null)
    {
        _haContext.CallService("recorder", "get_statistics", null, new RecorderGetStatisticsParameters { StartTime = startTime, EndTime = endTime, StatisticIds = statisticIds, Period = period, Types = types, Units = units });
    }

    ///<summary>Retrieves statistics data for entities within a specific time period.</summary>
    public Task<JsonElement?> GetStatisticsAsync(RecorderGetStatisticsParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("recorder", "get_statistics", null, data);
    }

    ///<summary>Retrieves statistics data for entities within a specific time period.</summary>
    ///<param name="startTime">The start time for the statistics query. eg: 2025-01-01 00:00:00</param>
    ///<param name="endTime">The end time for the statistics query. If omitted, returns all statistics from start time onward. eg: 2025-01-02 00:00:00</param>
    ///<param name="statisticIds">The entity IDs or statistic IDs to return statistics for. eg: [&quot;sensor.energy_consumption&quot;,&quot;sensor.temperature&quot;]</param>
    ///<param name="period">The time period to group statistics by. eg: hour</param>
    ///<param name="types">The types of statistics values to return. eg: [&quot;mean&quot;,&quot;sum&quot;]</param>
    ///<param name="units">Optional unit conversion mapping. eg: {&quot;energy&quot;:&quot;kWh&quot;,&quot;temperature&quot;:&quot;°C&quot;}</param>
    public Task<JsonElement?> GetStatisticsAsync(DateTime startTime, IEnumerable<object> statisticIds, object period, IEnumerable<object> types, DateTime? endTime = null, object? units = null)
    {
        return _haContext.CallServiceWithResponseAsync("recorder", "get_statistics", null, new RecorderGetStatisticsParameters { StartTime = startTime, EndTime = endTime, StatisticIds = statisticIds, Period = period, Types = types, Units = units });
    }

    ///<summary>Import long-term statistics.</summary>
    public void ImportStatistics(RecorderImportStatisticsParameters data)
    {
        _haContext.CallService("recorder", "import_statistics", null, data);
    }

    ///<summary>Import long-term statistics.</summary>
    ///<param name="statisticId">The statistics ID (entity ID) to import for.</param>
    ///<param name="name">The name of the statistics.</param>
    ///<param name="source">The source of the statistics data.</param>
    ///<param name="unitOfMeasurement">The unit of measurement of the statistics.</param>
    ///<param name="hasMean">If the statistics has a mean value.</param>
    ///<param name="hasSum">If the statistics has a sum value.</param>
    ///<param name="stats">A list of mappings/dictionaries with statistics to import. The dictionaries must contain a &quot;start&quot; key with a datetime string other valid options are &quot;mean&quot;, &quot;sum&quot;, &quot;min&quot;, &quot;max&quot;, &quot;last_reset&quot;, and &quot;state&quot;. All of those are optional and either an integer or a float, except for &quot;last_reset&quot; which is a datetime string.</param>
    public void ImportStatistics(string statisticId, string source, bool hasMean, bool hasSum, object stats, string? name = null, string? unitOfMeasurement = null)
    {
        _haContext.CallService("recorder", "import_statistics", null, new RecorderImportStatisticsParameters { StatisticId = statisticId, Name = name, Source = source, UnitOfMeasurement = unitOfMeasurement, HasMean = hasMean, HasSum = hasSum, Stats = stats });
    }

    ///<summary>Starts purge task - to clean up old data from your database.</summary>
    public void Purge(RecorderPurgeParameters data)
    {
        _haContext.CallService("recorder", "purge", null, data);
    }

    ///<summary>Starts purge task - to clean up old data from your database.</summary>
    ///<param name="keepDays">Number of days to keep the data in the database. Starting today, counting backward. A value of `7` means that everything older than a week will be purged.</param>
    ///<param name="repack">Attempt to save disk space by rewriting the entire database file.</param>
    ///<param name="applyFilter">Apply `entity_id` and `event_type` filters in addition to time-based purge.</param>
    public void Purge(long? keepDays = null, bool? repack = null, bool? applyFilter = null)
    {
        _haContext.CallService("recorder", "purge", null, new RecorderPurgeParameters { KeepDays = keepDays, Repack = repack, ApplyFilter = applyFilter });
    }

    ///<summary>Starts a purge task to remove the data related to specific entities from your database.</summary>
    public void PurgeEntities(RecorderPurgeEntitiesParameters data)
    {
        _haContext.CallService("recorder", "purge_entities", null, data);
    }

    ///<summary>Starts a purge task to remove the data related to specific entities from your database.</summary>
    ///<param name="entityId">List of entities for which the data is to be removed from the Recorder database.</param>
    ///<param name="domains">List of domains for which the data needs to be removed from the Recorder database. eg: sun</param>
    ///<param name="entityGlobs">List of glob patterns used to select the entities for which the data is to be removed from the Recorder database. eg: domain*.object_id*</param>
    ///<param name="keepDays">Number of days to keep the data for rows matching the filter. Starting today, counting backward. A value of `7` means that everything older than a week will be purged. The default of 0 days will remove all matching rows immediately.</param>
    public void PurgeEntities(IEnumerable<string>? entityId = null, object? domains = null, object? entityGlobs = null, long? keepDays = null)
    {
        _haContext.CallService("recorder", "purge_entities", null, new RecorderPurgeEntitiesParameters { EntityId = entityId, Domains = domains, EntityGlobs = entityGlobs, KeepDays = keepDays });
    }
}

public partial record RecorderGetStatisticsParameters
{
    ///<summary>The start time for the statistics query. eg: 2025-01-01 00:00:00</summary>
    [JsonPropertyName("start_time")]
    public DateTime? StartTime { get; init; }

    ///<summary>The end time for the statistics query. If omitted, returns all statistics from start time onward. eg: 2025-01-02 00:00:00</summary>
    [JsonPropertyName("end_time")]
    public DateTime? EndTime { get; init; }

    ///<summary>The entity IDs or statistic IDs to return statistics for. eg: [&quot;sensor.energy_consumption&quot;,&quot;sensor.temperature&quot;]</summary>
    [JsonPropertyName("statistic_ids")]
    public IEnumerable<object>? StatisticIds { get; init; }

    ///<summary>The time period to group statistics by. eg: hour</summary>
    [JsonPropertyName("period")]
    public object? Period { get; init; }

    ///<summary>The types of statistics values to return. eg: [&quot;mean&quot;,&quot;sum&quot;]</summary>
    [JsonPropertyName("types")]
    public IEnumerable<object>? Types { get; init; }

    ///<summary>Optional unit conversion mapping. eg: {&quot;energy&quot;:&quot;kWh&quot;,&quot;temperature&quot;:&quot;°C&quot;}</summary>
    [JsonPropertyName("units")]
    public object? Units { get; init; }
}

public partial record RecorderImportStatisticsParameters
{
    ///<summary>The statistics ID (entity ID) to import for.</summary>
    [JsonPropertyName("statistic_id")]
    public string? StatisticId { get; init; }

    ///<summary>The name of the statistics.</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>The source of the statistics data.</summary>
    [JsonPropertyName("source")]
    public string? Source { get; init; }

    ///<summary>The unit of measurement of the statistics.</summary>
    [JsonPropertyName("unit_of_measurement")]
    public string? UnitOfMeasurement { get; init; }

    ///<summary>If the statistics has a mean value.</summary>
    [JsonPropertyName("has_mean")]
    public bool? HasMean { get; init; }

    ///<summary>If the statistics has a sum value.</summary>
    [JsonPropertyName("has_sum")]
    public bool? HasSum { get; init; }

    ///<summary>A list of mappings/dictionaries with statistics to import. The dictionaries must contain a &quot;start&quot; key with a datetime string other valid options are &quot;mean&quot;, &quot;sum&quot;, &quot;min&quot;, &quot;max&quot;, &quot;last_reset&quot;, and &quot;state&quot;. All of those are optional and either an integer or a float, except for &quot;last_reset&quot; which is a datetime string.</summary>
    [JsonPropertyName("stats")]
    public object? Stats { get; init; }
}

public partial record RecorderPurgeParameters
{
    ///<summary>Number of days to keep the data in the database. Starting today, counting backward. A value of `7` means that everything older than a week will be purged.</summary>
    [JsonPropertyName("keep_days")]
    public long? KeepDays { get; init; }

    ///<summary>Attempt to save disk space by rewriting the entire database file.</summary>
    [JsonPropertyName("repack")]
    public bool? Repack { get; init; }

    ///<summary>Apply `entity_id` and `event_type` filters in addition to time-based purge.</summary>
    [JsonPropertyName("apply_filter")]
    public bool? ApplyFilter { get; init; }
}

public partial record RecorderPurgeEntitiesParameters
{
    ///<summary>List of entities for which the data is to be removed from the Recorder database.</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }

    ///<summary>List of domains for which the data needs to be removed from the Recorder database. eg: sun</summary>
    [JsonPropertyName("domains")]
    public object? Domains { get; init; }

    ///<summary>List of glob patterns used to select the entities for which the data is to be removed from the Recorder database. eg: domain*.object_id*</summary>
    [JsonPropertyName("entity_globs")]
    public object? EntityGlobs { get; init; }

    ///<summary>Number of days to keep the data for rows matching the filter. Starting today, counting backward. A value of `7` means that everything older than a week will be purged. The default of 0 days will remove all matching rows immediately.</summary>
    [JsonPropertyName("keep_days")]
    public long? KeepDays { get; init; }
}

public partial class RemoteServices
{
    private readonly IHaContext _haContext;
    public RemoteServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    ///<param name="target">The target for this service call</param>
    public void DeleteCommand(ServiceTarget target, RemoteDeleteCommandParameters data)
    {
        _haContext.CallService("remote", "delete_command", target, data);
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    ///<param name="device">Device from which commands will be deleted. eg: television</param>
    ///<param name="command">The single command or the list of commands to be deleted. eg: Mute</param>
    public void DeleteCommand(ServiceTarget target, object command, string? device = null)
    {
        _haContext.CallService("remote", "delete_command", target, new RemoteDeleteCommandParameters { Device = device, Command = command });
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    ///<param name="target">The target for this service call</param>
    public void LearnCommand(ServiceTarget target, RemoteLearnCommandParameters data)
    {
        _haContext.CallService("remote", "learn_command", target, data);
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    ///<param name="device">Device ID to learn command from. eg: television</param>
    ///<param name="command">A single command or a list of commands to learn. eg: Turn on</param>
    ///<param name="commandType">The type of command to be learned.</param>
    ///<param name="alternative">If code must be stored as an alternative. This is useful for discrete codes. Discrete codes are used for toggles that only perform one function. For example, a code to only turn a device on. If it is on already, sending the code won&apos;t change the state.</param>
    ///<param name="timeout">Timeout for the command to be learned.</param>
    public void LearnCommand(ServiceTarget target, string? device = null, object? command = null, object? commandType = null, bool? alternative = null, long? timeout = null)
    {
        _haContext.CallService("remote", "learn_command", target, new RemoteLearnCommandParameters { Device = device, Command = command, CommandType = commandType, Alternative = alternative, Timeout = timeout });
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    ///<param name="target">The target for this service call</param>
    public void SendCommand(ServiceTarget target, RemoteSendCommandParameters data)
    {
        _haContext.CallService("remote", "send_command", target, data);
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    ///<param name="device">Device ID to send command to. eg: 32756745</param>
    ///<param name="command">A single command or a list of commands to send. eg: Play</param>
    ///<param name="numRepeats">The number of times you want to repeat the commands.</param>
    ///<param name="delaySecs">The time you want to wait in between repeated commands.</param>
    ///<param name="holdSecs">The time you want to have it held before the release is send.</param>
    public void SendCommand(ServiceTarget target, object command, string? device = null, long? numRepeats = null, double? delaySecs = null, double? holdSecs = null)
    {
        _haContext.CallService("remote", "send_command", target, new RemoteSendCommandParameters { Device = device, Command = command, NumRepeats = numRepeats, DelaySecs = delaySecs, HoldSecs = holdSecs });
    }

    ///<summary>Sends the toggle command.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("remote", "toggle", target, data);
    }

    ///<summary>Sends the turn off command.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("remote", "turn_off", target, data);
    }

    ///<summary>Sends the turn on command.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, RemoteTurnOnParameters data)
    {
        _haContext.CallService("remote", "turn_on", target, data);
    }

    ///<summary>Sends the turn on command.</summary>
    ///<param name="activity">Activity ID or activity name to be started. eg: BedroomTV</param>
    public void TurnOn(ServiceTarget target, string? activity = null)
    {
        _haContext.CallService("remote", "turn_on", target, new RemoteTurnOnParameters { Activity = activity });
    }
}

public partial record RemoteDeleteCommandParameters
{
    ///<summary>Device from which commands will be deleted. eg: television</summary>
    [JsonPropertyName("device")]
    public string? Device { get; init; }

    ///<summary>The single command or the list of commands to be deleted. eg: Mute</summary>
    [JsonPropertyName("command")]
    public object? Command { get; init; }
}

public partial record RemoteLearnCommandParameters
{
    ///<summary>Device ID to learn command from. eg: television</summary>
    [JsonPropertyName("device")]
    public string? Device { get; init; }

    ///<summary>A single command or a list of commands to learn. eg: Turn on</summary>
    [JsonPropertyName("command")]
    public object? Command { get; init; }

    ///<summary>The type of command to be learned.</summary>
    [JsonPropertyName("command_type")]
    public object? CommandType { get; init; }

    ///<summary>If code must be stored as an alternative. This is useful for discrete codes. Discrete codes are used for toggles that only perform one function. For example, a code to only turn a device on. If it is on already, sending the code won&apos;t change the state.</summary>
    [JsonPropertyName("alternative")]
    public bool? Alternative { get; init; }

    ///<summary>Timeout for the command to be learned.</summary>
    [JsonPropertyName("timeout")]
    public long? Timeout { get; init; }
}

public partial record RemoteSendCommandParameters
{
    ///<summary>Device ID to send command to. eg: 32756745</summary>
    [JsonPropertyName("device")]
    public string? Device { get; init; }

    ///<summary>A single command or a list of commands to send. eg: Play</summary>
    [JsonPropertyName("command")]
    public object? Command { get; init; }

    ///<summary>The number of times you want to repeat the commands.</summary>
    [JsonPropertyName("num_repeats")]
    public long? NumRepeats { get; init; }

    ///<summary>The time you want to wait in between repeated commands.</summary>
    [JsonPropertyName("delay_secs")]
    public double? DelaySecs { get; init; }

    ///<summary>The time you want to have it held before the release is send.</summary>
    [JsonPropertyName("hold_secs")]
    public double? HoldSecs { get; init; }
}

public partial record RemoteTurnOnParameters
{
    ///<summary>Activity ID or activity name to be started. eg: BedroomTV</summary>
    [JsonPropertyName("activity")]
    public string? Activity { get; init; }
}

public partial class RepairsServices
{
    private readonly IHaContext _haContext;
    public RepairsServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Manually create and raise a issue in Home Assistant repairs.</summary>
    public void Create(RepairsCreateParameters data)
    {
        _haContext.CallService("repairs", "create", null, data);
    }

    ///<summary>Manually create and raise a issue in Home Assistant repairs.</summary>
    ///<param name="title">The title of the issue.</param>
    ///<param name="description">The description of the issue. Supports Markdown.</param>
    ///<param name="issueId">The issue can have an identifier, which allows you to cancel it later with that ID if needed. It also prevent duplicate issues to be created. If not provided, a random ID will be generated.</param>
    ///<param name="domain">This field can be used to set the domain of the issue. For example, by default (if not set), it will use &quot;spook&quot;. This causes Spook to be shown in the logo/image of the issue. If you set it to &quot;homeassistant&quot;, the Home Assistant logo will be used, or use &quot;hue&quot;, &quot;zwave_js&quot;, &quot;mqtt&quot;, etc. to use the logo of that integration.</param>
    ///<param name="severity">The severity of the issue. This will be used to determine the priority of the issue. If not set, &quot;warning&quot; will be used</param>
    ///<param name="persistent">If the issue should be persistent, which means it will survive restarts of Home Assistant. By default, issues are not persistent.</param>
    public void Create(string title, string description, string? issueId = null, string? domain = null, object? severity = null, bool? persistent = null)
    {
        _haContext.CallService("repairs", "create", null, new RepairsCreateParameters { Title = title, Description = description, IssueId = issueId, Domain = domain, Severity = severity, Persistent = persistent });
    }

    ///<summary>Ignore all issues currently raised in Home Assistant Repairs.</summary>
    public void IgnoreAll(object? data = null)
    {
        _haContext.CallService("repairs", "ignore_all", null, data);
    }

    ///<summary>Removes a manually created Home Assistant repairs issue. This action can only remove issues created with the `repairs_create` action.</summary>
    public void Remove(RepairsRemoveParameters data)
    {
        _haContext.CallService("repairs", "remove", null, data);
    }

    ///<summary>Removes a manually created Home Assistant repairs issue. This action can only remove issues created with the `repairs_create` action.</summary>
    ///<param name="issueId">The issue ID to remove.</param>
    public void Remove(string issueId)
    {
        _haContext.CallService("repairs", "remove", null, new RepairsRemoveParameters { IssueId = issueId });
    }

    ///<summary>Unignore all issues currently raised in Home Assistant Repairs.</summary>
    public void UnignoreAll(object? data = null)
    {
        _haContext.CallService("repairs", "unignore_all", null, data);
    }
}

public partial record RepairsCreateParameters
{
    ///<summary>The title of the issue.</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary>The description of the issue. Supports Markdown.</summary>
    [JsonPropertyName("description")]
    public string? Description { get; init; }

    ///<summary>The issue can have an identifier, which allows you to cancel it later with that ID if needed. It also prevent duplicate issues to be created. If not provided, a random ID will be generated.</summary>
    [JsonPropertyName("issue_id")]
    public string? IssueId { get; init; }

    ///<summary>This field can be used to set the domain of the issue. For example, by default (if not set), it will use &quot;spook&quot;. This causes Spook to be shown in the logo/image of the issue. If you set it to &quot;homeassistant&quot;, the Home Assistant logo will be used, or use &quot;hue&quot;, &quot;zwave_js&quot;, &quot;mqtt&quot;, etc. to use the logo of that integration.</summary>
    [JsonPropertyName("domain")]
    public string? Domain { get; init; }

    ///<summary>The severity of the issue. This will be used to determine the priority of the issue. If not set, &quot;warning&quot; will be used</summary>
    [JsonPropertyName("severity")]
    public object? Severity { get; init; }

    ///<summary>If the issue should be persistent, which means it will survive restarts of Home Assistant. By default, issues are not persistent.</summary>
    [JsonPropertyName("persistent")]
    public bool? Persistent { get; init; }
}

public partial record RepairsRemoveParameters
{
    ///<summary>The issue ID to remove.</summary>
    [JsonPropertyName("issue_id")]
    public string? IssueId { get; init; }
}

public partial class RetryServices
{
    private readonly IHaContext _haContext;
    public RetryServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Retry an action on failure.</summary>
    public void Action(RetryActionParameters data)
    {
        _haContext.CallService("retry", "action", null, data);
    }

    ///<summary>Retry an action on failure.</summary>
    ///<param name="action">The action to retry on failure. eg: homeassistant.turn_on</param>
    ///<param name="retries">Maximum amount of attempts (default is 7). eg: 5</param>
    ///<param name="backoff">Special template with square brackets instead of curly brackets for the amount of seconds to wait between attempts. Default is &apos;[[ 2 ** attempt ]]&apos;. eg: [[ 10 * 2 ** attempt ]]</param>
    ///<param name="expectedState">The expected state of the entities after the action. eg: on</param>
    ///<param name="validation">Special template with square brackets instead of curly brackets for validating success. eg: [[ state_attr(entity_id, &apos;brightness&apos;) == 70 ]]</param>
    ///<param name="stateDelay">Delay period (seconds) before initial expected state and validation (default is 0). eg: 2</param>
    ///<param name="stateGrace">Grace period (seconds) before final expected state and validation (default is 0.2). eg: 3</param>
    ///<param name="onError">Sequence of actions to perform if all retries fail.</param>
    ///<param name="ignoreTarget">When set to true, the action does not try to resolve, expand and isolate the entities. The original target parameters are passed to the inner action as provided.</param>
    ///<param name="repair">Control issuing repair tickets on failure.</param>
    ///<param name="retryId">A new action cancels a previous action with the same ID (the default is the entity ID).</param>
    public void Action(string action, long? retries = null, string? backoff = null, IEnumerable<object>? expectedState = null, string? validation = null, long? stateDelay = null, long? stateGrace = null, object? onError = null, bool? ignoreTarget = null, bool? repair = null, string? retryId = null)
    {
        _haContext.CallService("retry", "action", null, new RetryActionParameters { Action = action, Retries = retries, Backoff = backoff, ExpectedState = expectedState, Validation = validation, StateDelay = stateDelay, StateGrace = stateGrace, OnError = onError, IgnoreTarget = ignoreTarget, Repair = repair, RetryId = retryId });
    }

    ///<summary>Perform a sequence of actions with retries on action failures.</summary>
    public void Actions(RetryActionsParameters data)
    {
        _haContext.CallService("retry", "actions", null, data);
    }

    ///<summary>Perform a sequence of actions with retries on action failures.</summary>
    ///<param name="sequence">Sequence of actions.</param>
    ///<param name="retries">Maximum amount of attempts (default is 7). eg: 5</param>
    ///<param name="backoff">Special template with square brackets instead of curly brackets for the amount of seconds to wait between attempts. Default is &apos;[[ 2 ** attempt ]]&apos;. eg: [[ 10 * 2 ** attempt ]]</param>
    ///<param name="expectedState">The expected state of the entities after any action. eg: on</param>
    ///<param name="validation">Special template with square brackets instead of curly brackets for validating success. eg: [[ state_attr(entity_id, &apos;brightness&apos;) == 70 ]]</param>
    ///<param name="stateDelay">Delay period (seconds) before initial expected state and validation (default is 0). eg: 2</param>
    ///<param name="stateGrace">Grace period (seconds) before final expected state and validation (default is 0.2). eg: 3</param>
    ///<param name="ignoreTarget">When set to true, the action does not try to resolve, expand and isolate the entities. The original target parameters are passed to the inner action as provided.</param>
    ///<param name="onError">Sequence of actions to perform if all retries fail.</param>
    ///<param name="repair">Control issuing repair tickets on failure.</param>
    ///<param name="retryId">A new action cancels a previous action with the same ID (the default is the entity ID).</param>
    public void Actions(object sequence, long? retries = null, string? backoff = null, IEnumerable<object>? expectedState = null, string? validation = null, long? stateDelay = null, long? stateGrace = null, bool? ignoreTarget = null, object? onError = null, bool? repair = null, string? retryId = null)
    {
        _haContext.CallService("retry", "actions", null, new RetryActionsParameters { Sequence = sequence, Retries = retries, Backoff = backoff, ExpectedState = expectedState, Validation = validation, StateDelay = stateDelay, StateGrace = stateGrace, IgnoreTarget = ignoreTarget, OnError = onError, Repair = repair, RetryId = retryId });
    }
}

public partial record RetryActionParameters
{
    ///<summary>The action to retry on failure. eg: homeassistant.turn_on</summary>
    [JsonPropertyName("action")]
    public string? Action { get; init; }

    ///<summary>Maximum amount of attempts (default is 7). eg: 5</summary>
    [JsonPropertyName("retries")]
    public long? Retries { get; init; }

    ///<summary>Special template with square brackets instead of curly brackets for the amount of seconds to wait between attempts. Default is &apos;[[ 2 ** attempt ]]&apos;. eg: [[ 10 * 2 ** attempt ]]</summary>
    [JsonPropertyName("backoff")]
    public string? Backoff { get; init; }

    ///<summary>The expected state of the entities after the action. eg: on</summary>
    [JsonPropertyName("expected_state")]
    public IEnumerable<object>? ExpectedState { get; init; }

    ///<summary>Special template with square brackets instead of curly brackets for validating success. eg: [[ state_attr(entity_id, &apos;brightness&apos;) == 70 ]]</summary>
    [JsonPropertyName("validation")]
    public string? Validation { get; init; }

    ///<summary>Delay period (seconds) before initial expected state and validation (default is 0). eg: 2</summary>
    [JsonPropertyName("state_delay")]
    public long? StateDelay { get; init; }

    ///<summary>Grace period (seconds) before final expected state and validation (default is 0.2). eg: 3</summary>
    [JsonPropertyName("state_grace")]
    public long? StateGrace { get; init; }

    ///<summary>Sequence of actions to perform if all retries fail.</summary>
    [JsonPropertyName("on_error")]
    public object? OnError { get; init; }

    ///<summary>When set to true, the action does not try to resolve, expand and isolate the entities. The original target parameters are passed to the inner action as provided.</summary>
    [JsonPropertyName("ignore_target")]
    public bool? IgnoreTarget { get; init; }

    ///<summary>Control issuing repair tickets on failure.</summary>
    [JsonPropertyName("repair")]
    public bool? Repair { get; init; }

    ///<summary>A new action cancels a previous action with the same ID (the default is the entity ID).</summary>
    [JsonPropertyName("retry_id")]
    public string? RetryId { get; init; }
}

public partial record RetryActionsParameters
{
    ///<summary>Sequence of actions.</summary>
    [JsonPropertyName("sequence")]
    public object? Sequence { get; init; }

    ///<summary>Maximum amount of attempts (default is 7). eg: 5</summary>
    [JsonPropertyName("retries")]
    public long? Retries { get; init; }

    ///<summary>Special template with square brackets instead of curly brackets for the amount of seconds to wait between attempts. Default is &apos;[[ 2 ** attempt ]]&apos;. eg: [[ 10 * 2 ** attempt ]]</summary>
    [JsonPropertyName("backoff")]
    public string? Backoff { get; init; }

    ///<summary>The expected state of the entities after any action. eg: on</summary>
    [JsonPropertyName("expected_state")]
    public IEnumerable<object>? ExpectedState { get; init; }

    ///<summary>Special template with square brackets instead of curly brackets for validating success. eg: [[ state_attr(entity_id, &apos;brightness&apos;) == 70 ]]</summary>
    [JsonPropertyName("validation")]
    public string? Validation { get; init; }

    ///<summary>Delay period (seconds) before initial expected state and validation (default is 0). eg: 2</summary>
    [JsonPropertyName("state_delay")]
    public long? StateDelay { get; init; }

    ///<summary>Grace period (seconds) before final expected state and validation (default is 0.2). eg: 3</summary>
    [JsonPropertyName("state_grace")]
    public long? StateGrace { get; init; }

    ///<summary>When set to true, the action does not try to resolve, expand and isolate the entities. The original target parameters are passed to the inner action as provided.</summary>
    [JsonPropertyName("ignore_target")]
    public bool? IgnoreTarget { get; init; }

    ///<summary>Sequence of actions to perform if all retries fail.</summary>
    [JsonPropertyName("on_error")]
    public object? OnError { get; init; }

    ///<summary>Control issuing repair tickets on failure.</summary>
    [JsonPropertyName("repair")]
    public bool? Repair { get; init; }

    ///<summary>A new action cancels a previous action with the same ID (the default is the entity ID).</summary>
    [JsonPropertyName("retry_id")]
    public string? RetryId { get; init; }
}

public partial class SceneServices
{
    private readonly IHaContext _haContext;
    public SceneServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Activates a scene with configuration.</summary>
    public void Apply(SceneApplyParameters data)
    {
        _haContext.CallService("scene", "apply", null, data);
    }

    ///<summary>Activates a scene with configuration.</summary>
    ///<param name="entities">List of entities and their target state. eg: light.kitchen: &quot;on&quot; light.ceiling:   state: &quot;on&quot;   brightness: 80 </param>
    ///<param name="transition">Time it takes the devices to transition into the states defined in the scene.</param>
    public void Apply(object entities, long? transition = null)
    {
        _haContext.CallService("scene", "apply", null, new SceneApplyParameters { Entities = entities, Transition = transition });
    }

    ///<summary>Creates a new scene.</summary>
    public void Create(SceneCreateParameters data)
    {
        _haContext.CallService("scene", "create", null, data);
    }

    ///<summary>Creates a new scene.</summary>
    ///<param name="sceneId">The entity ID of the new scene. eg: all_lights</param>
    ///<param name="entities">List of entities and their target state. If your entities are already in the target state right now, use &apos;Entities snapshot&apos; instead. eg: light.tv_back_light: &quot;on&quot; light.ceiling:   state: &quot;on&quot;   brightness: 200 </param>
    ///<param name="snapshotEntities">List of entities to be included in the snapshot. By taking a snapshot, you record the current state of those entities. If you do not want to use the current state of all your entities for this scene, you can combine &apos;Entities snapshot&apos; with &apos;Entity states&apos;. eg: - light.ceiling - light.kitchen </param>
    public void Create(string sceneId, object? entities = null, IEnumerable<string>? snapshotEntities = null)
    {
        _haContext.CallService("scene", "create", null, new SceneCreateParameters { SceneId = sceneId, Entities = entities, SnapshotEntities = snapshotEntities });
    }

    ///<summary>Deletes a dynamically created scene.</summary>
    ///<param name="target">The target for this service call</param>
    public void Delete(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("scene", "delete", target, data);
    }

    ///<summary>Reloads the scenes from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("scene", "reload", null, data);
    }

    ///<summary>Activates a scene.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, SceneTurnOnParameters data)
    {
        _haContext.CallService("scene", "turn_on", target, data);
    }

    ///<summary>Activates a scene.</summary>
    ///<param name="transition">Time it takes the devices to transition into the states defined in the scene.</param>
    public void TurnOn(ServiceTarget target, long? transition = null)
    {
        _haContext.CallService("scene", "turn_on", target, new SceneTurnOnParameters { Transition = transition });
    }
}

public partial record SceneApplyParameters
{
    ///<summary>List of entities and their target state. eg: light.kitchen: &quot;on&quot; light.ceiling:   state: &quot;on&quot;   brightness: 80 </summary>
    [JsonPropertyName("entities")]
    public object? Entities { get; init; }

    ///<summary>Time it takes the devices to transition into the states defined in the scene.</summary>
    [JsonPropertyName("transition")]
    public long? Transition { get; init; }
}

public partial record SceneCreateParameters
{
    ///<summary>The entity ID of the new scene. eg: all_lights</summary>
    [JsonPropertyName("scene_id")]
    public string? SceneId { get; init; }

    ///<summary>List of entities and their target state. If your entities are already in the target state right now, use &apos;Entities snapshot&apos; instead. eg: light.tv_back_light: &quot;on&quot; light.ceiling:   state: &quot;on&quot;   brightness: 200 </summary>
    [JsonPropertyName("entities")]
    public object? Entities { get; init; }

    ///<summary>List of entities to be included in the snapshot. By taking a snapshot, you record the current state of those entities. If you do not want to use the current state of all your entities for this scene, you can combine &apos;Entities snapshot&apos; with &apos;Entity states&apos;. eg: - light.ceiling - light.kitchen </summary>
    [JsonPropertyName("snapshot_entities")]
    public IEnumerable<string>? SnapshotEntities { get; init; }
}

public partial record SceneTurnOnParameters
{
    ///<summary>Time it takes the devices to transition into the states defined in the scene.</summary>
    [JsonPropertyName("transition")]
    public long? Transition { get; init; }
}

public partial class ScheduleServices
{
    private readonly IHaContext _haContext;
    public ScheduleServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Retrieves the configured time ranges of one or multiple schedules.</summary>
    ///<param name="target">The target for this service call</param>
    public void GetSchedule(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("schedule", "get_schedule", target, data);
    }

    ///<summary>Retrieves the configured time ranges of one or multiple schedules.</summary>
    ///<param name="target">The target for this service call</param>
    public Task<JsonElement?> GetScheduleAsync(ServiceTarget target, object? data = null)
    {
        return _haContext.CallServiceWithResponseAsync("schedule", "get_schedule", target, data);
    }

    ///<summary>Reloads schedules from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("schedule", "reload", null, data);
    }
}

public partial class ScriptServices
{
    private readonly IHaContext _haContext;
    public ScriptServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads all the available scripts.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("script", "reload", null, data);
    }

    ///<summary>Starts a script if it isn&apos;t running, stops it otherwise.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("script", "toggle", target, data);
    }

    ///<summary>Stops a running script.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("script", "turn_off", target, data);
    }

    ///<summary>Runs the sequence of actions defined in a script.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("script", "turn_on", target, data);
    }
}

public partial class SelectServices
{
    private readonly IHaContext _haContext;
    public SelectServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Select an random option for a select entity.</summary>
    ///<param name="target">The target for this service call</param>
    public void Random(ServiceTarget target, SelectRandomParameters data)
    {
        _haContext.CallService("select", "random", target, data);
    }

    ///<summary>Select an random option for a select entity.</summary>
    ///<param name="options">Limits the options to select from. If not provided, all options will be considered.</param>
    public void Random(ServiceTarget target, object? options = null)
    {
        _haContext.CallService("select", "random", target, new SelectRandomParameters { Options = options });
    }

    ///<summary>Selects the first option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectFirst(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("select", "select_first", target, data);
    }

    ///<summary>Selects the last option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectLast(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("select", "select_last", target, data);
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectNext(ServiceTarget target, SelectSelectNextParameters data)
    {
        _haContext.CallService("select", "select_next", target, data);
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="cycle">If the option should cycle from the last to the first.</param>
    public void SelectNext(ServiceTarget target, bool? cycle = null)
    {
        _haContext.CallService("select", "select_next", target, new SelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectOption(ServiceTarget target, SelectSelectOptionParameters data)
    {
        _haContext.CallService("select", "select_option", target, data);
    }

    ///<summary>Selects an option.</summary>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public void SelectOption(ServiceTarget target, object option)
    {
        _haContext.CallService("select", "select_option", target, new SelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectPrevious(ServiceTarget target, SelectSelectPreviousParameters data)
    {
        _haContext.CallService("select", "select_previous", target, data);
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="cycle">If the option should cycle from the first to the last.</param>
    public void SelectPrevious(ServiceTarget target, bool? cycle = null)
    {
        _haContext.CallService("select", "select_previous", target, new SelectSelectPreviousParameters { Cycle = cycle });
    }
}

public partial record SelectRandomParameters
{
    ///<summary>Limits the options to select from. If not provided, all options will be considered.</summary>
    [JsonPropertyName("options")]
    public object? Options { get; init; }
}

public partial record SelectSelectNextParameters
{
    ///<summary>If the option should cycle from the last to the first.</summary>
    [JsonPropertyName("cycle")]
    public bool? Cycle { get; init; }
}

public partial record SelectSelectOptionParameters
{
    ///<summary>Option to be selected. eg: &quot;Item A&quot;</summary>
    [JsonPropertyName("option")]
    public object? Option { get; init; }
}

public partial record SelectSelectPreviousParameters
{
    ///<summary>If the option should cycle from the first to the last.</summary>
    [JsonPropertyName("cycle")]
    public bool? Cycle { get; init; }
}

public partial class SirenServices
{
    private readonly IHaContext _haContext;
    public SirenServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Toggles the siren on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("siren", "toggle", target, data);
    }

    ///<summary>Turns the siren off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("siren", "turn_off", target, data);
    }

    ///<summary>Turns the siren on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, SirenTurnOnParameters data)
    {
        _haContext.CallService("siren", "turn_on", target, data);
    }

    ///<summary>Turns the siren on.</summary>
    ///<param name="tone">The tone to emit. When `available_tones` property is a map, either the key or the value can be used. Must be supported by the integration. eg: fire</param>
    ///<param name="volumeLevel">The volume. 0 is inaudible, 1 is the maximum volume. Must be supported by the integration. eg: 0.5</param>
    ///<param name="duration">Number of seconds the sound is played. Must be supported by the integration. eg: 15</param>
    public void TurnOn(ServiceTarget target, string? tone = null, double? volumeLevel = null, string? duration = null)
    {
        _haContext.CallService("siren", "turn_on", target, new SirenTurnOnParameters { Tone = tone, VolumeLevel = volumeLevel, Duration = duration });
    }
}

public partial record SirenTurnOnParameters
{
    ///<summary>The tone to emit. When `available_tones` property is a map, either the key or the value can be used. Must be supported by the integration. eg: fire</summary>
    [JsonPropertyName("tone")]
    public string? Tone { get; init; }

    ///<summary>The volume. 0 is inaudible, 1 is the maximum volume. Must be supported by the integration. eg: 0.5</summary>
    [JsonPropertyName("volume_level")]
    public double? VolumeLevel { get; init; }

    ///<summary>Number of seconds the sound is played. Must be supported by the integration. eg: 15</summary>
    [JsonPropertyName("duration")]
    public string? Duration { get; init; }
}

public partial class SpookServices
{
    private readonly IHaContext _haContext;
    public SpookServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Calling this action spooks Home Assistant. Performing this action will always fail.</summary>
    public void Boo(object? data = null)
    {
        _haContext.CallService("spook", "boo", null, data);
    }

    ///<summary>Performing this action will randomly fail.</summary>
    public void RandomFail(object? data = null)
    {
        _haContext.CallService("spook", "random_fail", null, data);
    }
}

public partial class SpotcastServices
{
    private readonly IHaContext _haContext;
    public SpotcastServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Add a list of tracks to the active playback in Spotify</summary>
    public void AddToQueue(SpotcastAddToQueueParameters data)
    {
        _haContext.CallService("spotcast", "add_to_queue", null, data);
    }

    ///<summary>Add a list of tracks to the active playback in Spotify</summary>
    ///<param name="spotifyUris">A list of track to add to the active playback</param>
    ///<param name="account">The ID of the Spotify account to use. Takes the default account otherwise.</param>
    public void AddToQueue(object spotifyUris, object? account = null)
    {
        _haContext.CallService("spotcast", "add_to_queue", null, new SpotcastAddToQueueParameters { SpotifyUris = spotifyUris, Account = account });
    }

    ///<summary>Add a list of media to your Spotify Library</summary>
    public void LikeMedia(SpotcastLikeMediaParameters data)
    {
        _haContext.CallService("spotcast", "like_media", null, data);
    }

    ///<summary>Add a list of media to your Spotify Library</summary>
    ///<param name="spotifyUris">A list of media to add to the Spotify Library</param>
    ///<param name="account">The ID of the Spotify account to use. Takes the default account otherwise.</param>
    public void LikeMedia(object spotifyUris, object? account = null)
    {
        _haContext.CallService("spotcast", "like_media", null, new SpotcastLikeMediaParameters { SpotifyUris = spotifyUris, Account = account });
    }

    ///<summary>Plays a random playlist from a Browse Category</summary>
    public void PlayCategory(SpotcastPlayCategoryParameters data)
    {
        _haContext.CallService("spotcast", "play_category", null, data);
    }

    ///<summary>Plays a random playlist from a Browse Category</summary>
    ///<param name="mediaPlayer">A Single Media Player compatible with Spotcast</param>
    ///<param name="category">A Category name or ID. A fuzzy match is applied on the name, but an ID must be an exact match. eg: Made For You</param>
    ///<param name="account">The id of the Spotify account to use. Takes the default account otherwise.</param>
    ///<param name="data">Additional modifiers when starting media playback</param>
    public void PlayCategory(string category, object? mediaPlayer = null, object? account = null, object? data = null)
    {
        _haContext.CallService("spotcast", "play_category", null, new SpotcastPlayCategoryParameters { MediaPlayer = mediaPlayer, Category = category, Account = account, Data = data });
    }

    ///<summary>Starts playback from a custom list of tracks URIs</summary>
    public void PlayCustomContext(SpotcastPlayCustomContextParameters data)
    {
        _haContext.CallService("spotcast", "play_custom_context", null, data);
    }

    ///<summary>Starts playback from a custom list of tracks URIs</summary>
    ///<param name="mediaPlayer">A Single Media Player compatible with Spotcast</param>
    ///<param name="tracks">A list of Spotify URIs eg: spotify:track:55mJleti2WfWEFNFcBduhc</param>
    ///<param name="account">The id of the Spotify account to use. Takes the default account otherwise.</param>
    ///<param name="data">Additional modifiers when starting media playback</param>
    public void PlayCustomContext(object tracks, object? mediaPlayer = null, object? account = null, object? data = null)
    {
        _haContext.CallService("spotcast", "play_custom_context", null, new SpotcastPlayCustomContextParameters { MediaPlayer = mediaPlayer, Tracks = tracks, Account = account, Data = data });
    }

    ///<summary>Play Spotify DJ playlist</summary>
    public void PlayDj(SpotcastPlayDjParameters data)
    {
        _haContext.CallService("spotcast", "play_dj", null, data);
    }

    ///<summary>Play Spotify DJ playlist</summary>
    ///<param name="mediaPlayer">A Single Media Player compatible with Spotcast</param>
    ///<param name="account">The id of the Spotify account to use. Takes the default account otherwise.</param>
    ///<param name="data">Additional modifiers when starting media playback</param>
    public void PlayDj(object? mediaPlayer = null, object? account = null, object? data = null)
    {
        _haContext.CallService("spotcast", "play_dj", null, new SpotcastPlayDjParameters { MediaPlayer = mediaPlayer, Account = account, Data = data });
    }

    ///<summary>Start playback from a search result</summary>
    public void PlayFromSearch(SpotcastPlayFromSearchParameters data)
    {
        _haContext.CallService("spotcast", "play_from_search", null, data);
    }

    ///<summary>Start playback from a search result</summary>
    ///<param name="mediaPlayer">A Single Media Player compatible with Spotcast</param>
    ///<param name="searchTerm">The term to search in Spotify Catalog eg: Joy as an Act of Resistance.</param>
    ///<param name="itemTypes">The type of item to return from the search result eg: album</param>
    ///<param name="tags">Tags to add to the search query filters eg: hipster</param>
    ///<param name="filters">Filters to apply to the search query.</param>
    ///<param name="account">The id of the Spotify account to use. Takes the default account otherwise.</param>
    ///<param name="data">Additional modifiers when starting media playback</param>
    public void PlayFromSearch(string searchTerm, IEnumerable<object> itemTypes, object? mediaPlayer = null, IEnumerable<object>? tags = null, object? filters = null, object? account = null, object? data = null)
    {
        _haContext.CallService("spotcast", "play_from_search", null, new SpotcastPlayFromSearchParameters { MediaPlayer = mediaPlayer, SearchTerm = searchTerm, ItemTypes = itemTypes, Tags = tags, Filters = filters, Account = account, Data = data });
    }

    ///<summary>Play User&apos;s Liked Songs</summary>
    public void PlayLikedSongs(SpotcastPlayLikedSongsParameters data)
    {
        _haContext.CallService("spotcast", "play_liked_songs", null, data);
    }

    ///<summary>Play User&apos;s Liked Songs</summary>
    ///<param name="mediaPlayer">A Single Media Player compatible with Spotcast</param>
    ///<param name="account">The id of the Spotify account to use. Takes the default account otherwise.</param>
    ///<param name="data">Additional modifiers when starting media playback</param>
    public void PlayLikedSongs(object? mediaPlayer = null, object? account = null, object? data = null)
    {
        _haContext.CallService("spotcast", "play_liked_songs", null, new SpotcastPlayLikedSongsParameters { MediaPlayer = mediaPlayer, Account = account, Data = data });
    }

    ///<summary>Play Spotify media</summary>
    public void PlayMedia(SpotcastPlayMediaParameters data)
    {
        _haContext.CallService("spotcast", "play_media", null, data);
    }

    ///<summary>Play Spotify media</summary>
    ///<param name="mediaPlayer">A Single Media Player compatible with Spotcast</param>
    ///<param name="spotifyUri">Supported Spotify URI or URL eg: spotify:album:5l5m1hnH4punS1GQXgEi3T</param>
    ///<param name="account">The id of the Spotify account to use. Takes the default account otherwise.</param>
    ///<param name="data">Additional modifiers when starting media playback</param>
    public void PlayMedia(string spotifyUri, object? mediaPlayer = null, object? account = null, object? data = null)
    {
        _haContext.CallService("spotcast", "play_media", null, new SpotcastPlayMediaParameters { MediaPlayer = mediaPlayer, SpotifyUri = spotifyUri, Account = account, Data = data });
    }

    ///<summary>Play User&apos;s Saved Podcast Episodes</summary>
    public void PlaySavedEpisodes(SpotcastPlaySavedEpisodesParameters data)
    {
        _haContext.CallService("spotcast", "play_saved_episodes", null, data);
    }

    ///<summary>Play User&apos;s Saved Podcast Episodes</summary>
    ///<param name="mediaPlayer">A Single Media Player compatible with Spotcast</param>
    ///<param name="account">The id of the Spotify account to use. Takes the default account otherwise.</param>
    ///<param name="data">Additional modifiers when starting media playback</param>
    public void PlaySavedEpisodes(object? mediaPlayer = null, object? account = null, object? data = null)
    {
        _haContext.CallService("spotcast", "play_saved_episodes", null, new SpotcastPlaySavedEpisodesParameters { MediaPlayer = mediaPlayer, Account = account, Data = data });
    }

    ///<summary>Transfers the Spotify playback to the targeted device</summary>
    public void TransferPlayback(SpotcastTransferPlaybackParameters data)
    {
        _haContext.CallService("spotcast", "transfer_playback", null, data);
    }

    ///<summary>Transfers the Spotify playback to the targeted device</summary>
    ///<param name="mediaPlayer">A Single Media Player compatible with Spotcast</param>
    ///<param name="account">The id of the Spotify account to use. Takes the default account otherwise.</param>
    ///<param name="data">Additional modifiers when starting media playback</param>
    public void TransferPlayback(object mediaPlayer, object? account = null, object? data = null)
    {
        _haContext.CallService("spotcast", "transfer_playback", null, new SpotcastTransferPlaybackParameters { MediaPlayer = mediaPlayer, Account = account, Data = data });
    }
}

public partial record SpotcastAddToQueueParameters
{
    ///<summary>A list of track to add to the active playback</summary>
    [JsonPropertyName("spotify_uris")]
    public object? SpotifyUris { get; init; }

    ///<summary>The ID of the Spotify account to use. Takes the default account otherwise.</summary>
    [JsonPropertyName("account")]
    public object? Account { get; init; }
}

public partial record SpotcastLikeMediaParameters
{
    ///<summary>A list of media to add to the Spotify Library</summary>
    [JsonPropertyName("spotify_uris")]
    public object? SpotifyUris { get; init; }

    ///<summary>The ID of the Spotify account to use. Takes the default account otherwise.</summary>
    [JsonPropertyName("account")]
    public object? Account { get; init; }
}

public partial record SpotcastPlayCategoryParameters
{
    ///<summary>A Single Media Player compatible with Spotcast</summary>
    [JsonPropertyName("media_player")]
    public object? MediaPlayer { get; init; }

    ///<summary>A Category name or ID. A fuzzy match is applied on the name, but an ID must be an exact match. eg: Made For You</summary>
    [JsonPropertyName("category")]
    public string? Category { get; init; }

    ///<summary>The id of the Spotify account to use. Takes the default account otherwise.</summary>
    [JsonPropertyName("account")]
    public object? Account { get; init; }

    ///<summary>Additional modifiers when starting media playback</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record SpotcastPlayCustomContextParameters
{
    ///<summary>A Single Media Player compatible with Spotcast</summary>
    [JsonPropertyName("media_player")]
    public object? MediaPlayer { get; init; }

    ///<summary>A list of Spotify URIs eg: spotify:track:55mJleti2WfWEFNFcBduhc</summary>
    [JsonPropertyName("tracks")]
    public object? Tracks { get; init; }

    ///<summary>The id of the Spotify account to use. Takes the default account otherwise.</summary>
    [JsonPropertyName("account")]
    public object? Account { get; init; }

    ///<summary>Additional modifiers when starting media playback</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record SpotcastPlayDjParameters
{
    ///<summary>A Single Media Player compatible with Spotcast</summary>
    [JsonPropertyName("media_player")]
    public object? MediaPlayer { get; init; }

    ///<summary>The id of the Spotify account to use. Takes the default account otherwise.</summary>
    [JsonPropertyName("account")]
    public object? Account { get; init; }

    ///<summary>Additional modifiers when starting media playback</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record SpotcastPlayFromSearchParameters
{
    ///<summary>A Single Media Player compatible with Spotcast</summary>
    [JsonPropertyName("media_player")]
    public object? MediaPlayer { get; init; }

    ///<summary>The term to search in Spotify Catalog eg: Joy as an Act of Resistance.</summary>
    [JsonPropertyName("search_term")]
    public string? SearchTerm { get; init; }

    ///<summary>The type of item to return from the search result eg: album</summary>
    [JsonPropertyName("item_types")]
    public IEnumerable<object>? ItemTypes { get; init; }

    ///<summary>Tags to add to the search query filters eg: hipster</summary>
    [JsonPropertyName("tags")]
    public IEnumerable<object>? Tags { get; init; }

    ///<summary>Filters to apply to the search query.</summary>
    [JsonPropertyName("filters")]
    public object? Filters { get; init; }

    ///<summary>The id of the Spotify account to use. Takes the default account otherwise.</summary>
    [JsonPropertyName("account")]
    public object? Account { get; init; }

    ///<summary>Additional modifiers when starting media playback</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record SpotcastPlayLikedSongsParameters
{
    ///<summary>A Single Media Player compatible with Spotcast</summary>
    [JsonPropertyName("media_player")]
    public object? MediaPlayer { get; init; }

    ///<summary>The id of the Spotify account to use. Takes the default account otherwise.</summary>
    [JsonPropertyName("account")]
    public object? Account { get; init; }

    ///<summary>Additional modifiers when starting media playback</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record SpotcastPlayMediaParameters
{
    ///<summary>A Single Media Player compatible with Spotcast</summary>
    [JsonPropertyName("media_player")]
    public object? MediaPlayer { get; init; }

    ///<summary>Supported Spotify URI or URL eg: spotify:album:5l5m1hnH4punS1GQXgEi3T</summary>
    [JsonPropertyName("spotify_uri")]
    public string? SpotifyUri { get; init; }

    ///<summary>The id of the Spotify account to use. Takes the default account otherwise.</summary>
    [JsonPropertyName("account")]
    public object? Account { get; init; }

    ///<summary>Additional modifiers when starting media playback</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record SpotcastPlaySavedEpisodesParameters
{
    ///<summary>A Single Media Player compatible with Spotcast</summary>
    [JsonPropertyName("media_player")]
    public object? MediaPlayer { get; init; }

    ///<summary>The id of the Spotify account to use. Takes the default account otherwise.</summary>
    [JsonPropertyName("account")]
    public object? Account { get; init; }

    ///<summary>Additional modifiers when starting media playback</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record SpotcastTransferPlaybackParameters
{
    ///<summary>A Single Media Player compatible with Spotcast</summary>
    [JsonPropertyName("media_player")]
    public object? MediaPlayer { get; init; }

    ///<summary>The id of the Spotify account to use. Takes the default account otherwise.</summary>
    [JsonPropertyName("account")]
    public object? Account { get; init; }

    ///<summary>Additional modifiers when starting media playback</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial class SwitchServices
{
    private readonly IHaContext _haContext;
    public SwitchServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Toggles a switch on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("switch", "toggle", target, data);
    }

    ///<summary>Turns a switch off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("switch", "turn_off", target, data);
    }

    ///<summary>Turns a switch on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("switch", "turn_on", target, data);
    }
}

public partial class SynologyDsmServices
{
    private readonly IHaContext _haContext;
    public SynologyDsmServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reboots the NAS. This action is deprecated and will be removed in future release. Please use the corresponding button entity.</summary>
    public void Reboot(SynologyDsmRebootParameters data)
    {
        _haContext.CallService("synology_dsm", "reboot", null, data);
    }

    ///<summary>Reboots the NAS. This action is deprecated and will be removed in future release. Please use the corresponding button entity.</summary>
    ///<param name="serial">Serial of the NAS to reboot; required when multiple NAS are configured. eg: 1NDVC86409</param>
    public void Reboot(string? serial = null)
    {
        _haContext.CallService("synology_dsm", "reboot", null, new SynologyDsmRebootParameters { Serial = serial });
    }

    ///<summary>Shutdowns the NAS. This action is deprecated and will be removed in future release. Please use the corresponding button entity.</summary>
    public void Shutdown(SynologyDsmShutdownParameters data)
    {
        _haContext.CallService("synology_dsm", "shutdown", null, data);
    }

    ///<summary>Shutdowns the NAS. This action is deprecated and will be removed in future release. Please use the corresponding button entity.</summary>
    ///<param name="serial">Serial of the NAS to shutdown; required when multiple NAS are configured. eg: 1NDVC86409</param>
    public void Shutdown(string? serial = null)
    {
        _haContext.CallService("synology_dsm", "shutdown", null, new SynologyDsmShutdownParameters { Serial = serial });
    }
}

public partial record SynologyDsmRebootParameters
{
    ///<summary>Serial of the NAS to reboot; required when multiple NAS are configured. eg: 1NDVC86409</summary>
    [JsonPropertyName("serial")]
    public string? Serial { get; init; }
}

public partial record SynologyDsmShutdownParameters
{
    ///<summary>Serial of the NAS to shutdown; required when multiple NAS are configured. eg: 1NDVC86409</summary>
    [JsonPropertyName("serial")]
    public string? Serial { get; init; }
}

public partial class SystemLogServices
{
    private readonly IHaContext _haContext;
    public SystemLogServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Deletes all log entries.</summary>
    public void Clear(object? data = null)
    {
        _haContext.CallService("system_log", "clear", null, data);
    }

    ///<summary>Write log entry.</summary>
    public void Write(SystemLogWriteParameters data)
    {
        _haContext.CallService("system_log", "write", null, data);
    }

    ///<summary>Write log entry.</summary>
    ///<param name="message">Message to log. eg: Something went wrong</param>
    ///<param name="level">Log level.</param>
    ///<param name="logger">Logger name under which to log the message. Defaults to `system_log.external`. eg: mycomponent.myplatform</param>
    public void Write(string message, object? level = null, string? logger = null)
    {
        _haContext.CallService("system_log", "write", null, new SystemLogWriteParameters { Message = message, Level = level, Logger = logger });
    }
}

public partial record SystemLogWriteParameters
{
    ///<summary>Message to log. eg: Something went wrong</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Log level.</summary>
    [JsonPropertyName("level")]
    public object? Level { get; init; }

    ///<summary>Logger name under which to log the message. Defaults to `system_log.external`. eg: mycomponent.myplatform</summary>
    [JsonPropertyName("logger")]
    public string? Logger { get; init; }
}

public partial class TeamtrackerServices
{
    private readonly IHaContext _haContext;
    public TeamtrackerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the teamtracker sensor based on the input parameters, calls the ESPN API, and populates the sensor attributes.</summary>
    ///<param name="target">The target for this service call</param>
    public void CallApi(ServiceTarget target, TeamtrackerCallApiParameters data)
    {
        _haContext.CallService("teamtracker", "call_api", target, data);
    }

    ///<summary>Sets the teamtracker sensor based on the input parameters, calls the ESPN API, and populates the sensor attributes.</summary>
    ///<param name="sportPath">Sport path eg: football</param>
    ///<param name="leaguePath">League path eg: nfl</param>
    ///<param name="teamId">Team ID eg: CLE</param>
    ///<param name="conferenceId">Conference ID (only for NCAA) eg: 5</param>
    public void CallApi(ServiceTarget target, string sportPath, string leaguePath, string teamId, string? conferenceId = null)
    {
        _haContext.CallService("teamtracker", "call_api", target, new TeamtrackerCallApiParameters { SportPath = sportPath, LeaguePath = leaguePath, TeamId = teamId, ConferenceId = conferenceId });
    }
}

public partial record TeamtrackerCallApiParameters
{
    ///<summary>Sport path eg: football</summary>
    [JsonPropertyName("sport_path")]
    public string? SportPath { get; init; }

    ///<summary>League path eg: nfl</summary>
    [JsonPropertyName("league_path")]
    public string? LeaguePath { get; init; }

    ///<summary>Team ID eg: CLE</summary>
    [JsonPropertyName("team_id")]
    public string? TeamId { get; init; }

    ///<summary>Conference ID (only for NCAA) eg: 5</summary>
    [JsonPropertyName("conference_id")]
    public string? ConferenceId { get; init; }
}

public partial class TemplateServices
{
    private readonly IHaContext _haContext;
    public TemplateServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads template entities from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("template", "reload", null, data);
    }
}

public partial class TextServices
{
    private readonly IHaContext _haContext;
    public TextServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, TextSetValueParameters data)
    {
        _haContext.CallService("text", "set_value", target, data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="value">Enter your text. eg: Hello world!</param>
    public void SetValue(ServiceTarget target, string value)
    {
        _haContext.CallService("text", "set_value", target, new TextSetValueParameters { Value = value });
    }
}

public partial record TextSetValueParameters
{
    ///<summary>Enter your text. eg: Hello world!</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial class TimeServices
{
    private readonly IHaContext _haContext;
    public TimeServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the time.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, TimeSetValueParameters data)
    {
        _haContext.CallService("time", "set_value", target, data);
    }

    ///<summary>Sets the time.</summary>
    ///<param name="time">The time to set. eg: 22:15</param>
    public void SetValue(ServiceTarget target, TimeOnly time)
    {
        _haContext.CallService("time", "set_value", target, new TimeSetValueParameters { Time = time });
    }
}

public partial record TimeSetValueParameters
{
    ///<summary>The time to set. eg: 22:15</summary>
    [JsonPropertyName("time")]
    public TimeOnly? Time { get; init; }
}

public partial class TimerServices
{
    private readonly IHaContext _haContext;
    public TimerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Resets a timer&apos;s duration to the last known initial value without firing the timer finished event.</summary>
    ///<param name="target">The target for this service call</param>
    public void Cancel(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("timer", "cancel", target, data);
    }

    ///<summary>Changes a timer by adding or subtracting a given duration.</summary>
    ///<param name="target">The target for this service call</param>
    public void Change(ServiceTarget target, TimerChangeParameters data)
    {
        _haContext.CallService("timer", "change", target, data);
    }

    ///<summary>Changes a timer by adding or subtracting a given duration.</summary>
    ///<param name="duration">Duration to add to or subtract from the running timer. eg: 00:01:00, 60 or -60</param>
    public void Change(ServiceTarget target, string duration)
    {
        _haContext.CallService("timer", "change", target, new TimerChangeParameters { Duration = duration });
    }

    ///<summary>Finishes a running timer earlier than scheduled.</summary>
    ///<param name="target">The target for this service call</param>
    public void Finish(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("timer", "finish", target, data);
    }

    ///<summary>Pauses a running timer, retaining the remaining duration for later continuation.</summary>
    ///<param name="target">The target for this service call</param>
    public void Pause(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("timer", "pause", target, data);
    }

    ///<summary>Reloads timers from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("timer", "reload", null, data);
    }

    ///<summary>Set duration for an existing timer.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetDuration(ServiceTarget target, TimerSetDurationParameters data)
    {
        _haContext.CallService("timer", "set_duration", target, data);
    }

    ///<summary>Set duration for an existing timer.</summary>
    ///<param name="duration">New duration for the timer, as a timedelta string. eg: 00:01:00, 60</param>
    public void SetDuration(ServiceTarget target, string duration)
    {
        _haContext.CallService("timer", "set_duration", target, new TimerSetDurationParameters { Duration = duration });
    }

    ///<summary>Starts a timer or restarts it with a provided duration.</summary>
    ///<param name="target">The target for this service call</param>
    public void Start(ServiceTarget target, TimerStartParameters data)
    {
        _haContext.CallService("timer", "start", target, data);
    }

    ///<summary>Starts a timer or restarts it with a provided duration.</summary>
    ///<param name="duration">Custom duration to restart the timer with. eg: 00:01:00 or 60</param>
    public void Start(ServiceTarget target, string? duration = null)
    {
        _haContext.CallService("timer", "start", target, new TimerStartParameters { Duration = duration });
    }
}

public partial record TimerChangeParameters
{
    ///<summary>Duration to add to or subtract from the running timer. eg: 00:01:00, 60 or -60</summary>
    [JsonPropertyName("duration")]
    public string? Duration { get; init; }
}

public partial record TimerSetDurationParameters
{
    ///<summary>New duration for the timer, as a timedelta string. eg: 00:01:00, 60</summary>
    [JsonPropertyName("duration")]
    public string? Duration { get; init; }
}

public partial record TimerStartParameters
{
    ///<summary>Custom duration to restart the timer with. eg: 00:01:00 or 60</summary>
    [JsonPropertyName("duration")]
    public string? Duration { get; init; }
}

public partial class TodoServices
{
    private readonly IHaContext _haContext;
    public TodoServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Adds a new to-do list item.</summary>
    ///<param name="target">The target for this service call</param>
    public void AddItem(ServiceTarget target, TodoAddItemParameters data)
    {
        _haContext.CallService("todo", "add_item", target, data);
    }

    ///<summary>Adds a new to-do list item.</summary>
    ///<param name="item">The name that represents the to-do item. eg: Submit income tax return</param>
    ///<param name="dueDate">The date the to-do item is expected to be completed. eg: 2023-11-17</param>
    ///<param name="dueDatetime">The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</param>
    ///<param name="description">A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</param>
    public void AddItem(ServiceTarget target, string item, DateOnly? dueDate = null, DateTime? dueDatetime = null, string? description = null)
    {
        _haContext.CallService("todo", "add_item", target, new TodoAddItemParameters { Item = item, DueDate = dueDate, DueDatetime = dueDatetime, Description = description });
    }

    ///<summary>Gets items on a to-do list.</summary>
    ///<param name="target">The target for this service call</param>
    public void GetItems(ServiceTarget target, TodoGetItemsParameters data)
    {
        _haContext.CallService("todo", "get_items", target, data);
    }

    ///<summary>Gets items on a to-do list.</summary>
    ///<param name="status">Only return to-do items with the specified statuses. Returns not completed actions by default. eg: needs_action</param>
    public void GetItems(ServiceTarget target, IEnumerable<object>? status = null)
    {
        _haContext.CallService("todo", "get_items", target, new TodoGetItemsParameters { Status = status });
    }

    ///<summary>Gets items on a to-do list.</summary>
    ///<param name="target">The target for this service call</param>
    public Task<JsonElement?> GetItemsAsync(ServiceTarget target, TodoGetItemsParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("todo", "get_items", target, data);
    }

    ///<summary>Gets items on a to-do list.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="status">Only return to-do items with the specified statuses. Returns not completed actions by default. eg: needs_action</param>
    public Task<JsonElement?> GetItemsAsync(ServiceTarget target, IEnumerable<object>? status = null)
    {
        return _haContext.CallServiceWithResponseAsync("todo", "get_items", target, new TodoGetItemsParameters { Status = status });
    }

    ///<summary>Removes all to-do list items that have been completed.</summary>
    ///<param name="target">The target for this service call</param>
    public void RemoveCompletedItems(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("todo", "remove_completed_items", target, data);
    }

    ///<summary>Removes an existing to-do list item by its name or UID.</summary>
    ///<param name="target">The target for this service call</param>
    public void RemoveItem(ServiceTarget target, TodoRemoveItemParameters data)
    {
        _haContext.CallService("todo", "remove_item", target, data);
    }

    ///<summary>Removes an existing to-do list item by its name or UID.</summary>
    ///<param name="item">The name/summary of the to-do item. If you have items with duplicate names, you can reference specific ones using their UID instead. eg: Submit income tax return</param>
    public void RemoveItem(ServiceTarget target, string item)
    {
        _haContext.CallService("todo", "remove_item", target, new TodoRemoveItemParameters { Item = item });
    }

    ///<summary>Updates an existing to-do list item based on its name or UID.</summary>
    ///<param name="target">The target for this service call</param>
    public void UpdateItem(ServiceTarget target, TodoUpdateItemParameters data)
    {
        _haContext.CallService("todo", "update_item", target, data);
    }

    ///<summary>Updates an existing to-do list item based on its name or UID.</summary>
    ///<param name="item">The name/summary of the to-do item. If you have items with duplicate names, you can reference specific ones using their UID instead. eg: Submit income tax return</param>
    ///<param name="rename">The new name for the to-do item eg: Something else</param>
    ///<param name="status">A status or confirmation of the to-do item. eg: needs_action</param>
    ///<param name="dueDate">The date the to-do item is expected to be completed. eg: 2023-11-17</param>
    ///<param name="dueDatetime">The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</param>
    ///<param name="description">A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</param>
    public void UpdateItem(ServiceTarget target, string item, string? rename = null, object? status = null, DateOnly? dueDate = null, DateTime? dueDatetime = null, string? description = null)
    {
        _haContext.CallService("todo", "update_item", target, new TodoUpdateItemParameters { Item = item, Rename = rename, Status = status, DueDate = dueDate, DueDatetime = dueDatetime, Description = description });
    }
}

public partial record TodoAddItemParameters
{
    ///<summary>The name that represents the to-do item. eg: Submit income tax return</summary>
    [JsonPropertyName("item")]
    public string? Item { get; init; }

    ///<summary>The date the to-do item is expected to be completed. eg: 2023-11-17</summary>
    [JsonPropertyName("due_date")]
    public DateOnly? DueDate { get; init; }

    ///<summary>The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</summary>
    [JsonPropertyName("due_datetime")]
    public DateTime? DueDatetime { get; init; }

    ///<summary>A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</summary>
    [JsonPropertyName("description")]
    public string? Description { get; init; }
}

public partial record TodoGetItemsParameters
{
    ///<summary>Only return to-do items with the specified statuses. Returns not completed actions by default. eg: needs_action</summary>
    [JsonPropertyName("status")]
    public IEnumerable<object>? Status { get; init; }
}

public partial record TodoRemoveItemParameters
{
    ///<summary>The name/summary of the to-do item. If you have items with duplicate names, you can reference specific ones using their UID instead. eg: Submit income tax return</summary>
    [JsonPropertyName("item")]
    public string? Item { get; init; }
}

public partial record TodoUpdateItemParameters
{
    ///<summary>The name/summary of the to-do item. If you have items with duplicate names, you can reference specific ones using their UID instead. eg: Submit income tax return</summary>
    [JsonPropertyName("item")]
    public string? Item { get; init; }

    ///<summary>The new name for the to-do item eg: Something else</summary>
    [JsonPropertyName("rename")]
    public string? Rename { get; init; }

    ///<summary>A status or confirmation of the to-do item. eg: needs_action</summary>
    [JsonPropertyName("status")]
    public object? Status { get; init; }

    ///<summary>The date the to-do item is expected to be completed. eg: 2023-11-17</summary>
    [JsonPropertyName("due_date")]
    public DateOnly? DueDate { get; init; }

    ///<summary>The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</summary>
    [JsonPropertyName("due_datetime")]
    public DateTime? DueDatetime { get; init; }

    ///<summary>A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</summary>
    [JsonPropertyName("description")]
    public string? Description { get; init; }
}

public partial class TtsServices
{
    private readonly IHaContext _haContext;
    public TtsServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Removes all cached text-to-speech files and purges the memory.</summary>
    public void ClearCache(object? data = null)
    {
        _haContext.CallService("tts", "clear_cache", null, data);
    }

    ///<summary>Say something using text-to-speech on a media player with cloud.</summary>
    public void CloudSay(TtsCloudSayParameters data)
    {
        _haContext.CallService("tts", "cloud_say", null, data);
    }

    ///<summary>Say something using text-to-speech on a media player with cloud.</summary>
    ///<param name="entityId"></param>
    ///<param name="message"> eg: My name is hanna</param>
    ///<param name="cache"></param>
    ///<param name="language"> eg: ru</param>
    ///<param name="options"> eg: platform specific</param>
    public void CloudSay(string entityId, string message, bool? cache = null, string? language = null, object? options = null)
    {
        _haContext.CallService("tts", "cloud_say", null, new TtsCloudSayParameters { EntityId = entityId, Message = message, Cache = cache, Language = language, Options = options });
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void Speak(ServiceTarget target, TtsSpeakParameters data)
    {
        _haContext.CallService("tts", "speak", target, data);
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    ///<param name="mediaPlayerEntityId">Media players to play the message.</param>
    ///<param name="message">The text you want to convert into speech so that you can listen to it on your device. eg: My name is hanna</param>
    ///<param name="cache">Stores this message locally so that when the text is requested again, the output can be produced more quickly.</param>
    ///<param name="language">Language to use for speech generation. eg: ru</param>
    ///<param name="options">A dictionary containing integration-specific options. eg: platform specific</param>
    public void Speak(ServiceTarget target, string mediaPlayerEntityId, string message, bool? cache = null, string? language = null, object? options = null)
    {
        _haContext.CallService("tts", "speak", target, new TtsSpeakParameters { MediaPlayerEntityId = mediaPlayerEntityId, Message = message, Cache = cache, Language = language, Options = options });
    }
}

public partial record TtsCloudSayParameters
{
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary> eg: My name is hanna</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    [JsonPropertyName("cache")]
    public bool? Cache { get; init; }

    ///<summary> eg: ru</summary>
    [JsonPropertyName("language")]
    public string? Language { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("options")]
    public object? Options { get; init; }
}

public partial record TtsSpeakParameters
{
    ///<summary>Media players to play the message.</summary>
    [JsonPropertyName("media_player_entity_id")]
    public string? MediaPlayerEntityId { get; init; }

    ///<summary>The text you want to convert into speech so that you can listen to it on your device. eg: My name is hanna</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Stores this message locally so that when the text is requested again, the output can be produced more quickly.</summary>
    [JsonPropertyName("cache")]
    public bool? Cache { get; init; }

    ///<summary>Language to use for speech generation. eg: ru</summary>
    [JsonPropertyName("language")]
    public string? Language { get; init; }

    ///<summary>A dictionary containing integration-specific options. eg: platform specific</summary>
    [JsonPropertyName("options")]
    public object? Options { get; init; }
}

public partial class UpdateServices
{
    private readonly IHaContext _haContext;
    public UpdateServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Removes the skipped version marker from an update.</summary>
    ///<param name="target">The target for this service call</param>
    public void ClearSkipped(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("update", "clear_skipped", target, data);
    }

    ///<summary>Installs an update for a device or service.</summary>
    ///<param name="target">The target for this service call</param>
    public void Install(ServiceTarget target, UpdateInstallParameters data)
    {
        _haContext.CallService("update", "install", target, data);
    }

    ///<summary>Installs an update for a device or service.</summary>
    ///<param name="version">The version to install. If omitted, the latest version will be installed. eg: 1.0.0</param>
    ///<param name="backup">If supported by the integration, this creates a backup before starting the update.</param>
    public void Install(ServiceTarget target, string? version = null, bool? backup = null)
    {
        _haContext.CallService("update", "install", target, new UpdateInstallParameters { Version = version, Backup = backup });
    }

    ///<summary>Marks currently available update as skipped.</summary>
    ///<param name="target">The target for this service call</param>
    public void Skip(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("update", "skip", target, data);
    }
}

public partial record UpdateInstallParameters
{
    ///<summary>The version to install. If omitted, the latest version will be installed. eg: 1.0.0</summary>
    [JsonPropertyName("version")]
    public string? Version { get; init; }

    ///<summary>If supported by the integration, this creates a backup before starting the update.</summary>
    [JsonPropertyName("backup")]
    public bool? Backup { get; init; }
}

public partial class UtilityMeterServices
{
    private readonly IHaContext _haContext;
    public UtilityMeterServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Resets all counters of a utility meter.</summary>
    ///<param name="target">The target for this service call</param>
    public void Reset(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("utility_meter", "reset", target, data);
    }
}

public partial class VacuumServices
{
    private readonly IHaContext _haContext;
    public VacuumServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Tells the vacuum cleaner to do a spot clean-up.</summary>
    ///<param name="target">The target for this service call</param>
    public void CleanSpot(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("vacuum", "clean_spot", target, data);
    }

    ///<summary>Locates the vacuum cleaner robot.</summary>
    ///<param name="target">The target for this service call</param>
    public void Locate(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("vacuum", "locate", target, data);
    }

    ///<summary>Pauses the cleaning task.</summary>
    ///<param name="target">The target for this service call</param>
    public void Pause(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("vacuum", "pause", target, data);
    }

    ///<summary>Tells the vacuum cleaner to return to its dock.</summary>
    ///<param name="target">The target for this service call</param>
    public void ReturnToBase(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("vacuum", "return_to_base", target, data);
    }

    ///<summary>Sends a command to the vacuum cleaner.</summary>
    ///<param name="target">The target for this service call</param>
    public void SendCommand(ServiceTarget target, VacuumSendCommandParameters data)
    {
        _haContext.CallService("vacuum", "send_command", target, data);
    }

    ///<summary>Sends a command to the vacuum cleaner.</summary>
    ///<param name="command">Command to execute. The commands are integration-specific. eg: set_dnd_timer</param>
    ///<param name="params">Parameters for the command. The parameters are integration-specific. eg: { &quot;key&quot;: &quot;value&quot; }</param>
    public void SendCommand(ServiceTarget target, string command, object? @params = null)
    {
        _haContext.CallService("vacuum", "send_command", target, new VacuumSendCommandParameters { Command = command, Params = @params });
    }

    ///<summary>Sets the fan speed of the vacuum cleaner.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetFanSpeed(ServiceTarget target, VacuumSetFanSpeedParameters data)
    {
        _haContext.CallService("vacuum", "set_fan_speed", target, data);
    }

    ///<summary>Sets the fan speed of the vacuum cleaner.</summary>
    ///<param name="fanSpeed">Fan speed. The value depends on the integration. Some integrations have speed steps, like &apos;medium&apos;. Some use a percentage, between 0 and 100. eg: low</param>
    public void SetFanSpeed(ServiceTarget target, string fanSpeed)
    {
        _haContext.CallService("vacuum", "set_fan_speed", target, new VacuumSetFanSpeedParameters { FanSpeed = fanSpeed });
    }

    ///<summary>Starts or resumes the cleaning task.</summary>
    ///<param name="target">The target for this service call</param>
    public void Start(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("vacuum", "start", target, data);
    }

    ///<summary>Stops the current cleaning task.</summary>
    ///<param name="target">The target for this service call</param>
    public void Stop(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("vacuum", "stop", target, data);
    }
}

public partial record VacuumSendCommandParameters
{
    ///<summary>Command to execute. The commands are integration-specific. eg: set_dnd_timer</summary>
    [JsonPropertyName("command")]
    public string? Command { get; init; }

    ///<summary>Parameters for the command. The parameters are integration-specific. eg: { &quot;key&quot;: &quot;value&quot; }</summary>
    [JsonPropertyName("params")]
    public object? Params { get; init; }
}

public partial record VacuumSetFanSpeedParameters
{
    ///<summary>Fan speed. The value depends on the integration. Some integrations have speed steps, like &apos;medium&apos;. Some use a percentage, between 0 and 100. eg: low</summary>
    [JsonPropertyName("fan_speed")]
    public string? FanSpeed { get; init; }
}

public partial class ValveServices
{
    private readonly IHaContext _haContext;
    public ValveServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Closes a valve.</summary>
    ///<param name="target">The target for this service call</param>
    public void CloseValve(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("valve", "close_valve", target, data);
    }

    ///<summary>Opens a valve.</summary>
    ///<param name="target">The target for this service call</param>
    public void OpenValve(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("valve", "open_valve", target, data);
    }

    ///<summary>Moves a valve to a specific position.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValvePosition(ServiceTarget target, ValveSetValvePositionParameters data)
    {
        _haContext.CallService("valve", "set_valve_position", target, data);
    }

    ///<summary>Moves a valve to a specific position.</summary>
    ///<param name="position">Target position.</param>
    public void SetValvePosition(ServiceTarget target, long position)
    {
        _haContext.CallService("valve", "set_valve_position", target, new ValveSetValvePositionParameters { Position = position });
    }

    ///<summary>Stops the valve movement.</summary>
    ///<param name="target">The target for this service call</param>
    public void StopValve(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("valve", "stop_valve", target, data);
    }

    ///<summary>Toggles a valve open/closed.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("valve", "toggle", target, data);
    }
}

public partial record ValveSetValvePositionParameters
{
    ///<summary>Target position.</summary>
    [JsonPropertyName("position")]
    public long? Position { get; init; }
}

public partial class WakeOnLanServices
{
    private readonly IHaContext _haContext;
    public WakeOnLanServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sends a &apos;magic packet&apos; to wake up a device with &apos;Wake-On-LAN&apos; capabilities.</summary>
    public void SendMagicPacket(WakeOnLanSendMagicPacketParameters data)
    {
        _haContext.CallService("wake_on_lan", "send_magic_packet", null, data);
    }

    ///<summary>Sends a &apos;magic packet&apos; to wake up a device with &apos;Wake-On-LAN&apos; capabilities.</summary>
    ///<param name="mac">MAC address of the device to wake up. eg: aa:bb:cc:dd:ee:ff</param>
    ///<param name="broadcastAddress">The IP address of the host to send the magic packet to. Defaults to `255.255.255.255` and is normally not changed. eg: 192.168.255.255</param>
    ///<param name="broadcastPort">The port to send the magic packet to. Defaults to `9` and is normally not changed.</param>
    public void SendMagicPacket(string mac, string? broadcastAddress = null, long? broadcastPort = null)
    {
        _haContext.CallService("wake_on_lan", "send_magic_packet", null, new WakeOnLanSendMagicPacketParameters { Mac = mac, BroadcastAddress = broadcastAddress, BroadcastPort = broadcastPort });
    }
}

public partial record WakeOnLanSendMagicPacketParameters
{
    ///<summary>MAC address of the device to wake up. eg: aa:bb:cc:dd:ee:ff</summary>
    [JsonPropertyName("mac")]
    public string? Mac { get; init; }

    ///<summary>The IP address of the host to send the magic packet to. Defaults to `255.255.255.255` and is normally not changed. eg: 192.168.255.255</summary>
    [JsonPropertyName("broadcast_address")]
    public string? BroadcastAddress { get; init; }

    ///<summary>The port to send the magic packet to. Defaults to `9` and is normally not changed.</summary>
    [JsonPropertyName("broadcast_port")]
    public long? BroadcastPort { get; init; }
}

public partial class WatchmanServices
{
    private readonly IHaContext _haContext;
    public WatchmanServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Run the Watchman report</summary>
    public void Report(WatchmanReportParameters data)
    {
        _haContext.CallService("watchman", "report", null, data);
    }

    ///<summary>Run the Watchman report</summary>
    ///<param name="parseConfig">Parse configuration files before generating the report. Usually, this is done automatically by Watchman, so this flag is typically not required. eg: True</param>
    ///<param name="advancedOptions"></param>
    public void Report(bool? parseConfig = null, object? advancedOptions = null)
    {
        _haContext.CallService("watchman", "report", null, new WatchmanReportParameters { ParseConfig = parseConfig, AdvancedOptions = advancedOptions });
    }
}

public partial record WatchmanReportParameters
{
    ///<summary>Parse configuration files before generating the report. Usually, this is done automatically by Watchman, so this flag is typically not required. eg: True</summary>
    [JsonPropertyName("parse_config")]
    public bool? ParseConfig { get; init; }

    [JsonPropertyName("advanced_options")]
    public object? AdvancedOptions { get; init; }
}

public partial class WaterHeaterServices
{
    private readonly IHaContext _haContext;
    public WaterHeaterServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Turns away mode on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetAwayMode(ServiceTarget target, WaterHeaterSetAwayModeParameters data)
    {
        _haContext.CallService("water_heater", "set_away_mode", target, data);
    }

    ///<summary>Turns away mode on/off.</summary>
    ///<param name="awayMode">New value of away mode.</param>
    public void SetAwayMode(ServiceTarget target, bool awayMode)
    {
        _haContext.CallService("water_heater", "set_away_mode", target, new WaterHeaterSetAwayModeParameters { AwayMode = awayMode });
    }

    ///<summary>Sets the operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetOperationMode(ServiceTarget target, WaterHeaterSetOperationModeParameters data)
    {
        _haContext.CallService("water_heater", "set_operation_mode", target, data);
    }

    ///<summary>Sets the operation mode.</summary>
    ///<param name="operationMode">New value of the operation mode. For a list of possible modes, refer to the integration documentation. eg: eco</param>
    public void SetOperationMode(ServiceTarget target, string operationMode)
    {
        _haContext.CallService("water_heater", "set_operation_mode", target, new WaterHeaterSetOperationModeParameters { OperationMode = operationMode });
    }

    ///<summary>Sets the target temperature.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetTemperature(ServiceTarget target, WaterHeaterSetTemperatureParameters data)
    {
        _haContext.CallService("water_heater", "set_temperature", target, data);
    }

    ///<summary>Sets the target temperature.</summary>
    ///<param name="temperature">New target temperature for the water heater.</param>
    ///<param name="operationMode">New value of the operation mode. For a list of possible modes, refer to the integration documentation. eg: eco</param>
    public void SetTemperature(ServiceTarget target, double temperature, string? operationMode = null)
    {
        _haContext.CallService("water_heater", "set_temperature", target, new WaterHeaterSetTemperatureParameters { Temperature = temperature, OperationMode = operationMode });
    }

    ///<summary>Turns water heater off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("water_heater", "turn_off", target, data);
    }

    ///<summary>Turns water heater on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("water_heater", "turn_on", target, data);
    }
}

public partial record WaterHeaterSetAwayModeParameters
{
    ///<summary>New value of away mode.</summary>
    [JsonPropertyName("away_mode")]
    public bool? AwayMode { get; init; }
}

public partial record WaterHeaterSetOperationModeParameters
{
    ///<summary>New value of the operation mode. For a list of possible modes, refer to the integration documentation. eg: eco</summary>
    [JsonPropertyName("operation_mode")]
    public string? OperationMode { get; init; }
}

public partial record WaterHeaterSetTemperatureParameters
{
    ///<summary>New target temperature for the water heater.</summary>
    [JsonPropertyName("temperature")]
    public double? Temperature { get; init; }

    ///<summary>New value of the operation mode. For a list of possible modes, refer to the integration documentation. eg: eco</summary>
    [JsonPropertyName("operation_mode")]
    public string? OperationMode { get; init; }
}

public partial class WeatherServices
{
    private readonly IHaContext _haContext;
    public WeatherServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Retrieves the forecast from selected weather services.</summary>
    ///<param name="target">The target for this service call</param>
    public void GetForecasts(ServiceTarget target, WeatherGetForecastsParameters data)
    {
        _haContext.CallService("weather", "get_forecasts", target, data);
    }

    ///<summary>Retrieves the forecast from selected weather services.</summary>
    ///<param name="type">The scope of the weather forecast.</param>
    public void GetForecasts(ServiceTarget target, object @type)
    {
        _haContext.CallService("weather", "get_forecasts", target, new WeatherGetForecastsParameters { Type = @type });
    }

    ///<summary>Retrieves the forecast from selected weather services.</summary>
    ///<param name="target">The target for this service call</param>
    public Task<JsonElement?> GetForecastsAsync(ServiceTarget target, WeatherGetForecastsParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("weather", "get_forecasts", target, data);
    }

    ///<summary>Retrieves the forecast from selected weather services.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="type">The scope of the weather forecast.</param>
    public Task<JsonElement?> GetForecastsAsync(ServiceTarget target, object @type)
    {
        return _haContext.CallServiceWithResponseAsync("weather", "get_forecasts", target, new WeatherGetForecastsParameters { Type = @type });
    }
}

public partial record WeatherGetForecastsParameters
{
    ///<summary>The scope of the weather forecast.</summary>
    [JsonPropertyName("type")]
    public object? Type { get; init; }
}

public partial class ZhaServices
{
    private readonly IHaContext _haContext;
    public ZhaServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Clears a user code from a lock.</summary>
    ///<param name="target">The target for this service call</param>
    public void ClearLockUserCode(ServiceTarget target, ZhaClearLockUserCodeParameters data)
    {
        _haContext.CallService("zha", "clear_lock_user_code", target, data);
    }

    ///<summary>Clears a user code from a lock.</summary>
    ///<param name="codeSlot">Code slot to clear code from. eg: 1</param>
    public void ClearLockUserCode(ServiceTarget target, string codeSlot)
    {
        _haContext.CallService("zha", "clear_lock_user_code", target, new ZhaClearLockUserCodeParameters { CodeSlot = codeSlot });
    }

    ///<summary>Disables a user code on a lock.</summary>
    ///<param name="target">The target for this service call</param>
    public void DisableLockUserCode(ServiceTarget target, ZhaDisableLockUserCodeParameters data)
    {
        _haContext.CallService("zha", "disable_lock_user_code", target, data);
    }

    ///<summary>Disables a user code on a lock.</summary>
    ///<param name="codeSlot">Code slot to disable. eg: 1</param>
    public void DisableLockUserCode(ServiceTarget target, string codeSlot)
    {
        _haContext.CallService("zha", "disable_lock_user_code", target, new ZhaDisableLockUserCodeParameters { CodeSlot = codeSlot });
    }

    ///<summary>Enables a user code on a lock.</summary>
    ///<param name="target">The target for this service call</param>
    public void EnableLockUserCode(ServiceTarget target, ZhaEnableLockUserCodeParameters data)
    {
        _haContext.CallService("zha", "enable_lock_user_code", target, data);
    }

    ///<summary>Enables a user code on a lock.</summary>
    ///<param name="codeSlot">Code slot to enable. eg: 1</param>
    public void EnableLockUserCode(ServiceTarget target, string codeSlot)
    {
        _haContext.CallService("zha", "enable_lock_user_code", target, new ZhaEnableLockUserCodeParameters { CodeSlot = codeSlot });
    }

    ///<summary>Issues a command on the specified cluster on the specified entity.</summary>
    public void IssueZigbeeClusterCommand(ZhaIssueZigbeeClusterCommandParameters data)
    {
        _haContext.CallService("zha", "issue_zigbee_cluster_command", null, data);
    }

    ///<summary>Issues a command on the specified cluster on the specified entity.</summary>
    ///<param name="ieee">IEEE address for the device. eg: 00:0d:6f:00:05:7d:2d:34</param>
    ///<param name="endpointId">Endpoint ID for the cluster.</param>
    ///<param name="clusterId">ZCL cluster to retrieve attributes for.</param>
    ///<param name="clusterType">Type of the cluster.</param>
    ///<param name="command">ID of the command to execute.</param>
    ///<param name="commandType">Type of the command to execute.</param>
    ///<param name="args">Arguments to pass to the command. eg: [arg1, arg2, argN]</param>
    ///<param name="params">Parameters to pass to the command.</param>
    ///<param name="manufacturer">Manufacturer code. Use a value of &quot;-1&quot; to force no code to be set. eg: 252</param>
    public void IssueZigbeeClusterCommand(string ieee, long endpointId, long clusterId, long command, object commandType, object? clusterType = null, object? args = null, object? @params = null, string? manufacturer = null)
    {
        _haContext.CallService("zha", "issue_zigbee_cluster_command", null, new ZhaIssueZigbeeClusterCommandParameters { Ieee = ieee, EndpointId = endpointId, ClusterId = clusterId, ClusterType = clusterType, Command = command, CommandType = commandType, Args = args, Params = @params, Manufacturer = manufacturer });
    }

    ///<summary>Issues a command on the specified cluster on the specified group.</summary>
    public void IssueZigbeeGroupCommand(ZhaIssueZigbeeGroupCommandParameters data)
    {
        _haContext.CallService("zha", "issue_zigbee_group_command", null, data);
    }

    ///<summary>Issues a command on the specified cluster on the specified group.</summary>
    ///<param name="group">Hexadecimal address of the group. eg: 546</param>
    ///<param name="clusterId">ZCL cluster to send command to.</param>
    ///<param name="clusterType">Type of the cluster.</param>
    ///<param name="command">ID of the command to execute.</param>
    ///<param name="args">Arguments to pass to the command. eg: [arg1, arg2, argN]</param>
    ///<param name="manufacturer">Manufacturer code. Use a value of &quot;-1&quot; to force no code to be set. eg: 252</param>
    public void IssueZigbeeGroupCommand(string @group, long clusterId, long command, object? clusterType = null, object? args = null, string? manufacturer = null)
    {
        _haContext.CallService("zha", "issue_zigbee_group_command", null, new ZhaIssueZigbeeGroupCommandParameters { Group = @group, ClusterId = clusterId, ClusterType = clusterType, Command = command, Args = args, Manufacturer = manufacturer });
    }

    ///<summary>Allows nodes to join the Zigbee network.</summary>
    public void Permit(ZhaPermitParameters data)
    {
        _haContext.CallService("zha", "permit", null, data);
    }

    ///<summary>Allows nodes to join the Zigbee network.</summary>
    ///<param name="duration">Time to permit joins.</param>
    ///<param name="ieee">IEEE address of the node permitting new joins. eg: 00:0d:6f:00:05:7d:2d:34</param>
    ///<param name="sourceIeee">IEEE address of the joining device (must be combined with the &apos;Install code&apos; field). eg: 00:0a:bf:00:01:10:23:35</param>
    ///<param name="installCode">Install code of the joining device (must be combined with the &apos;Source IEEE&apos; field). eg: 1234-5678-1234-5678-AABB-CCDD-AABB-CCDD-EEFF</param>
    ///<param name="qrCode">Provides both the IEEE address and the install code of the joining device (different between vendors). eg: Z:000D6FFFFED4163B$I:52797BF4A5084DAA8E1712B61741CA024051</param>
    public void Permit(long? duration = null, string? ieee = null, string? sourceIeee = null, string? installCode = null, string? qrCode = null)
    {
        _haContext.CallService("zha", "permit", null, new ZhaPermitParameters { Duration = duration, Ieee = ieee, SourceIeee = sourceIeee, InstallCode = installCode, QrCode = qrCode });
    }

    ///<summary>Removes a node from the Zigbee network.</summary>
    public void Remove(ZhaRemoveParameters data)
    {
        _haContext.CallService("zha", "remove", null, data);
    }

    ///<summary>Removes a node from the Zigbee network.</summary>
    ///<param name="ieee">IEEE address of the node to remove. eg: 00:0d:6f:00:05:7d:2d:34</param>
    public void Remove(string ieee)
    {
        _haContext.CallService("zha", "remove", null, new ZhaRemoveParameters { Ieee = ieee });
    }

    ///<summary>Sets a user code on a lock.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetLockUserCode(ServiceTarget target, ZhaSetLockUserCodeParameters data)
    {
        _haContext.CallService("zha", "set_lock_user_code", target, data);
    }

    ///<summary>Sets a user code on a lock.</summary>
    ///<param name="codeSlot">Code slot to set the code in. eg: 1</param>
    ///<param name="userCode">Code to set. eg: 1234</param>
    public void SetLockUserCode(ServiceTarget target, string codeSlot, string userCode)
    {
        _haContext.CallService("zha", "set_lock_user_code", target, new ZhaSetLockUserCodeParameters { CodeSlot = codeSlot, UserCode = userCode });
    }

    ///<summary>Sets an attribute value for the specified cluster on the specified entity.</summary>
    public void SetZigbeeClusterAttribute(ZhaSetZigbeeClusterAttributeParameters data)
    {
        _haContext.CallService("zha", "set_zigbee_cluster_attribute", null, data);
    }

    ///<summary>Sets an attribute value for the specified cluster on the specified entity.</summary>
    ///<param name="ieee">IEEE address for the device. eg: 00:0d:6f:00:05:7d:2d:34</param>
    ///<param name="endpointId">Endpoint ID for the cluster.</param>
    ///<param name="clusterId">ZCL cluster to retrieve attributes for.</param>
    ///<param name="clusterType">Type of the cluster.</param>
    ///<param name="attribute">ID of the attribute to set. eg: 0</param>
    ///<param name="value">Value to write to the attribute. eg: 1</param>
    ///<param name="manufacturer">Manufacturer code. Use a value of &quot;-1&quot; to force no code to be set. eg: 252</param>
    public void SetZigbeeClusterAttribute(string ieee, long endpointId, long clusterId, long attribute, string value, object? clusterType = null, string? manufacturer = null)
    {
        _haContext.CallService("zha", "set_zigbee_cluster_attribute", null, new ZhaSetZigbeeClusterAttributeParameters { Ieee = ieee, EndpointId = endpointId, ClusterId = clusterId, ClusterType = clusterType, Attribute = attribute, Value = value, Manufacturer = manufacturer });
    }

    ///<summary>This action uses the WD capabilities to emit a quick audible/visible pulse called a &quot;squawk&quot;. The squawk command has no effect if the WD is currently active (warning in progress).</summary>
    public void WarningDeviceSquawk(ZhaWarningDeviceSquawkParameters data)
    {
        _haContext.CallService("zha", "warning_device_squawk", null, data);
    }

    ///<summary>This action uses the WD capabilities to emit a quick audible/visible pulse called a &quot;squawk&quot;. The squawk command has no effect if the WD is currently active (warning in progress).</summary>
    ///<param name="ieee">IEEE address for the device. eg: 00:0d:6f:00:05:7d:2d:34</param>
    ///<param name="mode">The Squawk Mode field is used as a 4-bit enumeration, and can have one of the values shown in Table 8-24 of the ZCL spec - Squawk Mode Field. The exact operation of each mode (how the WD “squawks”) is implementation specific.</param>
    ///<param name="strobe">The strobe field is used as a Boolean, and determines if the visual indication is also required in addition to the audible squawk, as shown in Table 8-25 of the ZCL spec - Strobe Bit.</param>
    ///<param name="level">The squawk level field is used as a 2-bit enumeration, and determines the intensity of audible squawk sound as shown in Table 8-26 of the ZCL spec - Squawk Level Field Values.</param>
    public void WarningDeviceSquawk(string ieee, long? mode = null, long? strobe = null, long? level = null)
    {
        _haContext.CallService("zha", "warning_device_squawk", null, new ZhaWarningDeviceSquawkParameters { Ieee = ieee, Mode = mode, Strobe = strobe, Level = level });
    }

    ///<summary>This action starts the operation of the warning device. The warning device alerts the surrounding area by audible (siren) and visual (strobe) signals.</summary>
    public void WarningDeviceWarn(ZhaWarningDeviceWarnParameters data)
    {
        _haContext.CallService("zha", "warning_device_warn", null, data);
    }

    ///<summary>This action starts the operation of the warning device. The warning device alerts the surrounding area by audible (siren) and visual (strobe) signals.</summary>
    ///<param name="ieee">IEEE address for the device. eg: 00:0d:6f:00:05:7d:2d:34</param>
    ///<param name="mode">The Warning Mode field is used as a 4-bit enumeration, can have one of the values 0-6 defined below in table 8-20 of the ZCL spec. The exact behavior of the warning device in each mode is according to the relevant security standards.</param>
    ///<param name="strobe">The Strobe field is used as a 2-bit enumeration, and determines if the visual indication is required in addition to the audible siren, as indicated in Table 8-21 of the ZCL spec. &quot;0&quot; means no strobe, &quot;1&quot; means strobe. If the strobe field is “1” and the Warning Mode is “0” (“Stop”), then only the strobe is activated.</param>
    ///<param name="level">The Siren Level field is used as a 2-bit enumeration, and indicates the intensity of audible squawk sound as shown in Table 8-22 of the ZCL spec.</param>
    ///<param name="duration">Requested duration of warning, in seconds (16 bit). If both Strobe and Warning Mode are &quot;0&quot; this field is ignored.</param>
    ///<param name="dutyCycle">Indicates the length of the flash cycle. This allows you to vary the flash duration for different alarm types (e.g., fire, police, burglar). The valid range is 0-100 in increments of 10. All other values must be rounded to the nearest valid value. Strobe calculates a duty cycle over a duration of one second. The ON state must precede the OFF state. For example, if the Strobe Duty Cycle field specifies “40,”, then the strobe flashes ON for 4/10ths of a second and then turns OFF for 6/10ths of a second.</param>
    ///<param name="intensity">Indicates the intensity of the strobe as shown in Table 8-23 of the ZCL spec. This attribute is designed to vary the output of the strobe (i.e., brightness) and not its frequency, which is detailed in section 8.4.2.3.1.6 of the ZCL spec.</param>
    public void WarningDeviceWarn(string ieee, long? mode = null, long? strobe = null, long? level = null, long? duration = null, long? dutyCycle = null, long? intensity = null)
    {
        _haContext.CallService("zha", "warning_device_warn", null, new ZhaWarningDeviceWarnParameters { Ieee = ieee, Mode = mode, Strobe = strobe, Level = level, Duration = duration, DutyCycle = dutyCycle, Intensity = intensity });
    }
}

public partial record ZhaClearLockUserCodeParameters
{
    ///<summary>Code slot to clear code from. eg: 1</summary>
    [JsonPropertyName("code_slot")]
    public string? CodeSlot { get; init; }
}

public partial record ZhaDisableLockUserCodeParameters
{
    ///<summary>Code slot to disable. eg: 1</summary>
    [JsonPropertyName("code_slot")]
    public string? CodeSlot { get; init; }
}

public partial record ZhaEnableLockUserCodeParameters
{
    ///<summary>Code slot to enable. eg: 1</summary>
    [JsonPropertyName("code_slot")]
    public string? CodeSlot { get; init; }
}

public partial record ZhaIssueZigbeeClusterCommandParameters
{
    ///<summary>IEEE address for the device. eg: 00:0d:6f:00:05:7d:2d:34</summary>
    [JsonPropertyName("ieee")]
    public string? Ieee { get; init; }

    ///<summary>Endpoint ID for the cluster.</summary>
    [JsonPropertyName("endpoint_id")]
    public long? EndpointId { get; init; }

    ///<summary>ZCL cluster to retrieve attributes for.</summary>
    [JsonPropertyName("cluster_id")]
    public long? ClusterId { get; init; }

    ///<summary>Type of the cluster.</summary>
    [JsonPropertyName("cluster_type")]
    public object? ClusterType { get; init; }

    ///<summary>ID of the command to execute.</summary>
    [JsonPropertyName("command")]
    public long? Command { get; init; }

    ///<summary>Type of the command to execute.</summary>
    [JsonPropertyName("command_type")]
    public object? CommandType { get; init; }

    ///<summary>Arguments to pass to the command. eg: [arg1, arg2, argN]</summary>
    [JsonPropertyName("args")]
    public object? Args { get; init; }

    ///<summary>Parameters to pass to the command.</summary>
    [JsonPropertyName("params")]
    public object? Params { get; init; }

    ///<summary>Manufacturer code. Use a value of &quot;-1&quot; to force no code to be set. eg: 252</summary>
    [JsonPropertyName("manufacturer")]
    public string? Manufacturer { get; init; }
}

public partial record ZhaIssueZigbeeGroupCommandParameters
{
    ///<summary>Hexadecimal address of the group. eg: 546</summary>
    [JsonPropertyName("group")]
    public string? Group { get; init; }

    ///<summary>ZCL cluster to send command to.</summary>
    [JsonPropertyName("cluster_id")]
    public long? ClusterId { get; init; }

    ///<summary>Type of the cluster.</summary>
    [JsonPropertyName("cluster_type")]
    public object? ClusterType { get; init; }

    ///<summary>ID of the command to execute.</summary>
    [JsonPropertyName("command")]
    public long? Command { get; init; }

    ///<summary>Arguments to pass to the command. eg: [arg1, arg2, argN]</summary>
    [JsonPropertyName("args")]
    public object? Args { get; init; }

    ///<summary>Manufacturer code. Use a value of &quot;-1&quot; to force no code to be set. eg: 252</summary>
    [JsonPropertyName("manufacturer")]
    public string? Manufacturer { get; init; }
}

public partial record ZhaPermitParameters
{
    ///<summary>Time to permit joins.</summary>
    [JsonPropertyName("duration")]
    public long? Duration { get; init; }

    ///<summary>IEEE address of the node permitting new joins. eg: 00:0d:6f:00:05:7d:2d:34</summary>
    [JsonPropertyName("ieee")]
    public string? Ieee { get; init; }

    ///<summary>IEEE address of the joining device (must be combined with the &apos;Install code&apos; field). eg: 00:0a:bf:00:01:10:23:35</summary>
    [JsonPropertyName("source_ieee")]
    public string? SourceIeee { get; init; }

    ///<summary>Install code of the joining device (must be combined with the &apos;Source IEEE&apos; field). eg: 1234-5678-1234-5678-AABB-CCDD-AABB-CCDD-EEFF</summary>
    [JsonPropertyName("install_code")]
    public string? InstallCode { get; init; }

    ///<summary>Provides both the IEEE address and the install code of the joining device (different between vendors). eg: Z:000D6FFFFED4163B$I:52797BF4A5084DAA8E1712B61741CA024051</summary>
    [JsonPropertyName("qr_code")]
    public string? QrCode { get; init; }
}

public partial record ZhaRemoveParameters
{
    ///<summary>IEEE address of the node to remove. eg: 00:0d:6f:00:05:7d:2d:34</summary>
    [JsonPropertyName("ieee")]
    public string? Ieee { get; init; }
}

public partial record ZhaSetLockUserCodeParameters
{
    ///<summary>Code slot to set the code in. eg: 1</summary>
    [JsonPropertyName("code_slot")]
    public string? CodeSlot { get; init; }

    ///<summary>Code to set. eg: 1234</summary>
    [JsonPropertyName("user_code")]
    public string? UserCode { get; init; }
}

public partial record ZhaSetZigbeeClusterAttributeParameters
{
    ///<summary>IEEE address for the device. eg: 00:0d:6f:00:05:7d:2d:34</summary>
    [JsonPropertyName("ieee")]
    public string? Ieee { get; init; }

    ///<summary>Endpoint ID for the cluster.</summary>
    [JsonPropertyName("endpoint_id")]
    public long? EndpointId { get; init; }

    ///<summary>ZCL cluster to retrieve attributes for.</summary>
    [JsonPropertyName("cluster_id")]
    public long? ClusterId { get; init; }

    ///<summary>Type of the cluster.</summary>
    [JsonPropertyName("cluster_type")]
    public object? ClusterType { get; init; }

    ///<summary>ID of the attribute to set. eg: 0</summary>
    [JsonPropertyName("attribute")]
    public long? Attribute { get; init; }

    ///<summary>Value to write to the attribute. eg: 1</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }

    ///<summary>Manufacturer code. Use a value of &quot;-1&quot; to force no code to be set. eg: 252</summary>
    [JsonPropertyName("manufacturer")]
    public string? Manufacturer { get; init; }
}

public partial record ZhaWarningDeviceSquawkParameters
{
    ///<summary>IEEE address for the device. eg: 00:0d:6f:00:05:7d:2d:34</summary>
    [JsonPropertyName("ieee")]
    public string? Ieee { get; init; }

    ///<summary>The Squawk Mode field is used as a 4-bit enumeration, and can have one of the values shown in Table 8-24 of the ZCL spec - Squawk Mode Field. The exact operation of each mode (how the WD “squawks”) is implementation specific.</summary>
    [JsonPropertyName("mode")]
    public long? Mode { get; init; }

    ///<summary>The strobe field is used as a Boolean, and determines if the visual indication is also required in addition to the audible squawk, as shown in Table 8-25 of the ZCL spec - Strobe Bit.</summary>
    [JsonPropertyName("strobe")]
    public long? Strobe { get; init; }

    ///<summary>The squawk level field is used as a 2-bit enumeration, and determines the intensity of audible squawk sound as shown in Table 8-26 of the ZCL spec - Squawk Level Field Values.</summary>
    [JsonPropertyName("level")]
    public long? Level { get; init; }
}

public partial record ZhaWarningDeviceWarnParameters
{
    ///<summary>IEEE address for the device. eg: 00:0d:6f:00:05:7d:2d:34</summary>
    [JsonPropertyName("ieee")]
    public string? Ieee { get; init; }

    ///<summary>The Warning Mode field is used as a 4-bit enumeration, can have one of the values 0-6 defined below in table 8-20 of the ZCL spec. The exact behavior of the warning device in each mode is according to the relevant security standards.</summary>
    [JsonPropertyName("mode")]
    public long? Mode { get; init; }

    ///<summary>The Strobe field is used as a 2-bit enumeration, and determines if the visual indication is required in addition to the audible siren, as indicated in Table 8-21 of the ZCL spec. &quot;0&quot; means no strobe, &quot;1&quot; means strobe. If the strobe field is “1” and the Warning Mode is “0” (“Stop”), then only the strobe is activated.</summary>
    [JsonPropertyName("strobe")]
    public long? Strobe { get; init; }

    ///<summary>The Siren Level field is used as a 2-bit enumeration, and indicates the intensity of audible squawk sound as shown in Table 8-22 of the ZCL spec.</summary>
    [JsonPropertyName("level")]
    public long? Level { get; init; }

    ///<summary>Requested duration of warning, in seconds (16 bit). If both Strobe and Warning Mode are &quot;0&quot; this field is ignored.</summary>
    [JsonPropertyName("duration")]
    public long? Duration { get; init; }

    ///<summary>Indicates the length of the flash cycle. This allows you to vary the flash duration for different alarm types (e.g., fire, police, burglar). The valid range is 0-100 in increments of 10. All other values must be rounded to the nearest valid value. Strobe calculates a duty cycle over a duration of one second. The ON state must precede the OFF state. For example, if the Strobe Duty Cycle field specifies “40,”, then the strobe flashes ON for 4/10ths of a second and then turns OFF for 6/10ths of a second.</summary>
    [JsonPropertyName("duty_cycle")]
    public long? DutyCycle { get; init; }

    ///<summary>Indicates the intensity of the strobe as shown in Table 8-23 of the ZCL spec. This attribute is designed to vary the output of the strobe (i.e., brightness) and not its frequency, which is detailed in section 8.4.2.3.1.6 of the ZCL spec.</summary>
    [JsonPropertyName("intensity")]
    public long? Intensity { get; init; }
}

public partial class ZoneServices
{
    private readonly IHaContext _haContext;
    public ZoneServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Create a new zone in Home Assistant on the fly.</summary>
    public void Create(ZoneCreateParameters data)
    {
        _haContext.CallService("zone", "create", null, data);
    }

    ///<summary>Create a new zone in Home Assistant on the fly.</summary>
    ///<param name="name">Name of the zone</param>
    ///<param name="icon">Icon to use for the zone</param>
    ///<param name="latitude">Latitude of the zone</param>
    ///<param name="longitude">Longitude of the zone</param>
    ///<param name="radius">Radius of the zone</param>
    public void Create(string name, double latitude, double longitude, object? icon = null, long? radius = null)
    {
        _haContext.CallService("zone", "create", null, new ZoneCreateParameters { Name = name, Icon = icon, Latitude = latitude, Longitude = longitude, Radius = radius });
    }

    ///<summary>Delete a zone. This works only with zones created and managed via the UI. Zones created and managed in YAML cannot be managed by Spook.</summary>
    public void Delete(ZoneDeleteParameters data)
    {
        _haContext.CallService("zone", "delete", null, data);
    }

    ///<summary>Delete a zone. This works only with zones created and managed via the UI. Zones created and managed in YAML cannot be managed by Spook.</summary>
    ///<param name="entityId">The ID of the entity (or entities) to remove.</param>
    public void Delete(IEnumerable<string> entityId)
    {
        _haContext.CallService("zone", "delete", null, new ZoneDeleteParameters { EntityId = entityId });
    }

    ///<summary>Reloads zones from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("zone", "reload", null, data);
    }

    ///<summary>Update properties of a zone on the fly.</summary>
    public void Update(ZoneUpdateParameters data)
    {
        _haContext.CallService("zone", "update", null, data);
    }

    ///<summary>Update properties of a zone on the fly.</summary>
    ///<param name="entityId">The ID of the entity (or entities) to update.</param>
    ///<param name="name">Name of the zone</param>
    ///<param name="icon">Icon to use for the zone</param>
    ///<param name="latitude">Latitude of the zone</param>
    ///<param name="longitude">Longitude of the zone</param>
    ///<param name="radius">Radius of the zone</param>
    public void Update(string entityId, string? name = null, object? icon = null, double? latitude = null, double? longitude = null, double? radius = null)
    {
        _haContext.CallService("zone", "update", null, new ZoneUpdateParameters { EntityId = entityId, Name = name, Icon = icon, Latitude = latitude, Longitude = longitude, Radius = radius });
    }
}

public partial record ZoneCreateParameters
{
    ///<summary>Name of the zone</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Icon to use for the zone</summary>
    [JsonPropertyName("icon")]
    public object? Icon { get; init; }

    ///<summary>Latitude of the zone</summary>
    [JsonPropertyName("latitude")]
    public double? Latitude { get; init; }

    ///<summary>Longitude of the zone</summary>
    [JsonPropertyName("longitude")]
    public double? Longitude { get; init; }

    ///<summary>Radius of the zone</summary>
    [JsonPropertyName("radius")]
    public long? Radius { get; init; }
}

public partial record ZoneDeleteParameters
{
    ///<summary>The ID of the entity (or entities) to remove.</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }
}

public partial record ZoneUpdateParameters
{
    ///<summary>The ID of the entity (or entities) to update.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>Name of the zone</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Icon to use for the zone</summary>
    [JsonPropertyName("icon")]
    public object? Icon { get; init; }

    ///<summary>Latitude of the zone</summary>
    [JsonPropertyName("latitude")]
    public double? Latitude { get; init; }

    ///<summary>Longitude of the zone</summary>
    [JsonPropertyName("longitude")]
    public double? Longitude { get; init; }

    ///<summary>Radius of the zone</summary>
    [JsonPropertyName("radius")]
    public double? Radius { get; init; }
}

public static class AutomationEntityExtensionMethods
{
    ///<summary>Toggles (enable / disable) an automation.</summary>
    public static void Toggle(this IAutomationEntityCore target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles (enable / disable) an automation.</summary>
    public static void Toggle(this IEnumerable<IAutomationEntityCore> target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Triggers the actions of an automation.</summary>
    public static void Trigger(this IAutomationEntityCore target, AutomationTriggerParameters data)
    {
        target.CallService("trigger", data);
    }

    ///<summary>Triggers the actions of an automation.</summary>
    public static void Trigger(this IEnumerable<IAutomationEntityCore> target, AutomationTriggerParameters data)
    {
        target.CallService("trigger", data);
    }

    ///<summary>Triggers the actions of an automation.</summary>
    ///<param name="target">The IAutomationEntityCore to call this service for</param>
    ///<param name="skipCondition">Defines whether or not the conditions will be skipped.</param>
    public static void Trigger(this IAutomationEntityCore target, bool? skipCondition = null)
    {
        target.CallService("trigger", new AutomationTriggerParameters { SkipCondition = skipCondition });
    }

    ///<summary>Triggers the actions of an automation.</summary>
    ///<param name="target">The IEnumerable&lt;IAutomationEntityCore&gt; to call this service for</param>
    ///<param name="skipCondition">Defines whether or not the conditions will be skipped.</param>
    public static void Trigger(this IEnumerable<IAutomationEntityCore> target, bool? skipCondition = null)
    {
        target.CallService("trigger", new AutomationTriggerParameters { SkipCondition = skipCondition });
    }

    ///<summary>Disables an automation.</summary>
    public static void TurnOff(this IAutomationEntityCore target, AutomationTurnOffParameters data)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Disables an automation.</summary>
    public static void TurnOff(this IEnumerable<IAutomationEntityCore> target, AutomationTurnOffParameters data)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Disables an automation.</summary>
    ///<param name="target">The IAutomationEntityCore to call this service for</param>
    ///<param name="stopActions">Stops currently running actions.</param>
    public static void TurnOff(this IAutomationEntityCore target, bool? stopActions = null)
    {
        target.CallService("turn_off", new AutomationTurnOffParameters { StopActions = stopActions });
    }

    ///<summary>Disables an automation.</summary>
    ///<param name="target">The IEnumerable&lt;IAutomationEntityCore&gt; to call this service for</param>
    ///<param name="stopActions">Stops currently running actions.</param>
    public static void TurnOff(this IEnumerable<IAutomationEntityCore> target, bool? stopActions = null)
    {
        target.CallService("turn_off", new AutomationTurnOffParameters { StopActions = stopActions });
    }

    ///<summary>Enables an automation.</summary>
    public static void TurnOn(this IAutomationEntityCore target, object? data = null)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Enables an automation.</summary>
    public static void TurnOn(this IEnumerable<IAutomationEntityCore> target, object? data = null)
    {
        target.CallService("turn_on", data);
    }
}

public static class ButtonEntityExtensionMethods
{
    ///<summary>Presses a button entity.</summary>
    public static void Press(this IButtonEntityCore target, object? data = null)
    {
        target.CallService("press", data);
    }

    ///<summary>Presses a button entity.</summary>
    public static void Press(this IEnumerable<IButtonEntityCore> target, object? data = null)
    {
        target.CallService("press", data);
    }
}

public static class CalendarEntityExtensionMethods
{
    ///<summary>Adds a new calendar event.</summary>
    public static void CreateEvent(this ICalendarEntityCore target, CalendarCreateEventParameters data)
    {
        target.CallService("create_event", data);
    }

    ///<summary>Adds a new calendar event.</summary>
    public static void CreateEvent(this IEnumerable<ICalendarEntityCore> target, CalendarCreateEventParameters data)
    {
        target.CallService("create_event", data);
    }

    ///<summary>Adds a new calendar event.</summary>
    ///<param name="target">The ICalendarEntityCore to call this service for</param>
    ///<param name="summary">Defines the short summary or subject for the event. eg: Department Party</param>
    ///<param name="description">A more complete description of the event than the one provided by the summary. eg: Meeting to provide technical review for &apos;Phoenix&apos; design.</param>
    ///<param name="startDateTime">The date and time the event should start. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">The date and time the event should end. eg: 2022-03-22 22:00:00</param>
    ///<param name="startDate">The date the all-day event should start. eg: 2022-03-22</param>
    ///<param name="endDate">The date the all-day event should end (exclusive). eg: 2022-03-23</param>
    ///<param name="in">Days or weeks that you want to create the event in. eg: {&quot;days&quot;: 2} or {&quot;weeks&quot;: 2}</param>
    ///<param name="location">The location of the event. eg: Conference Room - F123, Bldg. 002</param>
    public static void CreateEvent(this ICalendarEntityCore target, string summary, string? description = null, DateTime? startDateTime = null, DateTime? endDateTime = null, DateOnly? startDate = null, DateOnly? endDate = null, object? @in = null, string? location = null)
    {
        target.CallService("create_event", new CalendarCreateEventParameters { Summary = summary, Description = description, StartDateTime = startDateTime, EndDateTime = endDateTime, StartDate = startDate, EndDate = endDate, In = @in, Location = location });
    }

    ///<summary>Adds a new calendar event.</summary>
    ///<param name="target">The IEnumerable&lt;ICalendarEntityCore&gt; to call this service for</param>
    ///<param name="summary">Defines the short summary or subject for the event. eg: Department Party</param>
    ///<param name="description">A more complete description of the event than the one provided by the summary. eg: Meeting to provide technical review for &apos;Phoenix&apos; design.</param>
    ///<param name="startDateTime">The date and time the event should start. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">The date and time the event should end. eg: 2022-03-22 22:00:00</param>
    ///<param name="startDate">The date the all-day event should start. eg: 2022-03-22</param>
    ///<param name="endDate">The date the all-day event should end (exclusive). eg: 2022-03-23</param>
    ///<param name="in">Days or weeks that you want to create the event in. eg: {&quot;days&quot;: 2} or {&quot;weeks&quot;: 2}</param>
    ///<param name="location">The location of the event. eg: Conference Room - F123, Bldg. 002</param>
    public static void CreateEvent(this IEnumerable<ICalendarEntityCore> target, string summary, string? description = null, DateTime? startDateTime = null, DateTime? endDateTime = null, DateOnly? startDate = null, DateOnly? endDate = null, object? @in = null, string? location = null)
    {
        target.CallService("create_event", new CalendarCreateEventParameters { Summary = summary, Description = description, StartDateTime = startDateTime, EndDateTime = endDateTime, StartDate = startDate, EndDate = endDate, In = @in, Location = location });
    }

    ///<summary>Retrieves events on a calendar within a time range.</summary>
    public static Task<JsonElement?> GetEventsAsync(this ICalendarEntityCore target, CalendarGetEventsParameters data)
    {
        return target.CallServiceWithResponseAsync("get_events", data);
    }

    ///<summary>Retrieves events on a calendar within a time range.</summary>
    ///<param name="target">The ICalendarEntityCore to call this service for</param>
    ///<param name="startDateTime">Returns active events after this time (exclusive). When not set, defaults to now. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">Returns active events before this time (exclusive). Cannot be used with Duration. eg: 2022-03-22 22:00:00</param>
    ///<param name="duration">Returns active events from Start time for the specified duration.</param>
    public static Task<JsonElement?> GetEventsAsync(this ICalendarEntityCore target, DateTime? startDateTime = null, DateTime? endDateTime = null, object? duration = null)
    {
        return target.CallServiceWithResponseAsync("get_events", new CalendarGetEventsParameters { StartDateTime = startDateTime, EndDateTime = endDateTime, Duration = duration });
    }

    ///<summary>Retrieves events on a calendar within a time range.</summary>
    public static void GetEvents(this ICalendarEntityCore target, CalendarGetEventsParameters data)
    {
        target.CallService("get_events", data);
    }

    ///<summary>Retrieves events on a calendar within a time range.</summary>
    public static void GetEvents(this IEnumerable<ICalendarEntityCore> target, CalendarGetEventsParameters data)
    {
        target.CallService("get_events", data);
    }

    ///<summary>Retrieves events on a calendar within a time range.</summary>
    ///<param name="target">The ICalendarEntityCore to call this service for</param>
    ///<param name="startDateTime">Returns active events after this time (exclusive). When not set, defaults to now. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">Returns active events before this time (exclusive). Cannot be used with Duration. eg: 2022-03-22 22:00:00</param>
    ///<param name="duration">Returns active events from Start time for the specified duration.</param>
    public static void GetEvents(this ICalendarEntityCore target, DateTime? startDateTime = null, DateTime? endDateTime = null, object? duration = null)
    {
        target.CallService("get_events", new CalendarGetEventsParameters { StartDateTime = startDateTime, EndDateTime = endDateTime, Duration = duration });
    }

    ///<summary>Retrieves events on a calendar within a time range.</summary>
    ///<param name="target">The IEnumerable&lt;ICalendarEntityCore&gt; to call this service for</param>
    ///<param name="startDateTime">Returns active events after this time (exclusive). When not set, defaults to now. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">Returns active events before this time (exclusive). Cannot be used with Duration. eg: 2022-03-22 22:00:00</param>
    ///<param name="duration">Returns active events from Start time for the specified duration.</param>
    public static void GetEvents(this IEnumerable<ICalendarEntityCore> target, DateTime? startDateTime = null, DateTime? endDateTime = null, object? duration = null)
    {
        target.CallService("get_events", new CalendarGetEventsParameters { StartDateTime = startDateTime, EndDateTime = endDateTime, Duration = duration });
    }
}

public static class CameraEntityExtensionMethods
{
    ///<summary>Disables the motion detection.</summary>
    public static void DisableMotionDetection(this ICameraEntityCore target, object? data = null)
    {
        target.CallService("disable_motion_detection", data);
    }

    ///<summary>Disables the motion detection.</summary>
    public static void DisableMotionDetection(this IEnumerable<ICameraEntityCore> target, object? data = null)
    {
        target.CallService("disable_motion_detection", data);
    }

    ///<summary>Enables the motion detection.</summary>
    public static void EnableMotionDetection(this ICameraEntityCore target, object? data = null)
    {
        target.CallService("enable_motion_detection", data);
    }

    ///<summary>Enables the motion detection.</summary>
    public static void EnableMotionDetection(this IEnumerable<ICameraEntityCore> target, object? data = null)
    {
        target.CallService("enable_motion_detection", data);
    }

    ///<summary>Plays the camera stream on a supported media player.</summary>
    public static void PlayStream(this ICameraEntityCore target, CameraPlayStreamParameters data)
    {
        target.CallService("play_stream", data);
    }

    ///<summary>Plays the camera stream on a supported media player.</summary>
    public static void PlayStream(this IEnumerable<ICameraEntityCore> target, CameraPlayStreamParameters data)
    {
        target.CallService("play_stream", data);
    }

    ///<summary>Plays the camera stream on a supported media player.</summary>
    ///<param name="target">The ICameraEntityCore to call this service for</param>
    ///<param name="mediaPlayer">Media players to stream to.</param>
    ///<param name="format">Stream format supported by the media player.</param>
    public static void PlayStream(this ICameraEntityCore target, string mediaPlayer, object? format = null)
    {
        target.CallService("play_stream", new CameraPlayStreamParameters { MediaPlayer = mediaPlayer, Format = format });
    }

    ///<summary>Plays the camera stream on a supported media player.</summary>
    ///<param name="target">The IEnumerable&lt;ICameraEntityCore&gt; to call this service for</param>
    ///<param name="mediaPlayer">Media players to stream to.</param>
    ///<param name="format">Stream format supported by the media player.</param>
    public static void PlayStream(this IEnumerable<ICameraEntityCore> target, string mediaPlayer, object? format = null)
    {
        target.CallService("play_stream", new CameraPlayStreamParameters { MediaPlayer = mediaPlayer, Format = format });
    }

    ///<summary>Creates a recording of a live camera feed.</summary>
    public static void Record(this ICameraEntityCore target, CameraRecordParameters data)
    {
        target.CallService("record", data);
    }

    ///<summary>Creates a recording of a live camera feed.</summary>
    public static void Record(this IEnumerable<ICameraEntityCore> target, CameraRecordParameters data)
    {
        target.CallService("record", data);
    }

    ///<summary>Creates a recording of a live camera feed.</summary>
    ///<param name="target">The ICameraEntityCore to call this service for</param>
    ///<param name="filename">Full path to filename. Must be mp4. eg: /tmp/snapshot_{{ entity_id.name }}.mp4</param>
    ///<param name="duration">Planned duration of the recording. The actual duration may vary.</param>
    ///<param name="lookback">Planned lookback period to include in the recording (in addition to the duration). Only available if there is currently an active HLS stream. The actual length of the lookback period may vary.</param>
    public static void Record(this ICameraEntityCore target, string filename, long? duration = null, long? lookback = null)
    {
        target.CallService("record", new CameraRecordParameters { Filename = filename, Duration = duration, Lookback = lookback });
    }

    ///<summary>Creates a recording of a live camera feed.</summary>
    ///<param name="target">The IEnumerable&lt;ICameraEntityCore&gt; to call this service for</param>
    ///<param name="filename">Full path to filename. Must be mp4. eg: /tmp/snapshot_{{ entity_id.name }}.mp4</param>
    ///<param name="duration">Planned duration of the recording. The actual duration may vary.</param>
    ///<param name="lookback">Planned lookback period to include in the recording (in addition to the duration). Only available if there is currently an active HLS stream. The actual length of the lookback period may vary.</param>
    public static void Record(this IEnumerable<ICameraEntityCore> target, string filename, long? duration = null, long? lookback = null)
    {
        target.CallService("record", new CameraRecordParameters { Filename = filename, Duration = duration, Lookback = lookback });
    }

    ///<summary>Takes a snapshot from a camera.</summary>
    public static void Snapshot(this ICameraEntityCore target, CameraSnapshotParameters data)
    {
        target.CallService("snapshot", data);
    }

    ///<summary>Takes a snapshot from a camera.</summary>
    public static void Snapshot(this IEnumerable<ICameraEntityCore> target, CameraSnapshotParameters data)
    {
        target.CallService("snapshot", data);
    }

    ///<summary>Takes a snapshot from a camera.</summary>
    ///<param name="target">The ICameraEntityCore to call this service for</param>
    ///<param name="filename">Full path to filename. eg: /tmp/snapshot_{{ entity_id.name }}.jpg</param>
    public static void Snapshot(this ICameraEntityCore target, string filename)
    {
        target.CallService("snapshot", new CameraSnapshotParameters { Filename = filename });
    }

    ///<summary>Takes a snapshot from a camera.</summary>
    ///<param name="target">The IEnumerable&lt;ICameraEntityCore&gt; to call this service for</param>
    ///<param name="filename">Full path to filename. eg: /tmp/snapshot_{{ entity_id.name }}.jpg</param>
    public static void Snapshot(this IEnumerable<ICameraEntityCore> target, string filename)
    {
        target.CallService("snapshot", new CameraSnapshotParameters { Filename = filename });
    }

    ///<summary>Turns off the camera.</summary>
    public static void TurnOff(this ICameraEntityCore target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns off the camera.</summary>
    public static void TurnOff(this IEnumerable<ICameraEntityCore> target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns on the camera.</summary>
    public static void TurnOn(this ICameraEntityCore target, object? data = null)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turns on the camera.</summary>
    public static void TurnOn(this IEnumerable<ICameraEntityCore> target, object? data = null)
    {
        target.CallService("turn_on", data);
    }
}

public static class CounterEntityExtensionMethods
{
    ///<summary>Decrements a counter by its step size.</summary>
    public static void Decrement(this CounterEntity target, object? data = null)
    {
        target.CallService("decrement", data);
    }

    ///<summary>Decrements a counter by its step size.</summary>
    public static void Decrement(this IEnumerable<CounterEntity> target, object? data = null)
    {
        target.CallService("decrement", data);
    }

    ///<summary>Increments a counter by its step size.</summary>
    public static void Increment(this CounterEntity target, object? data = null)
    {
        target.CallService("increment", data);
    }

    ///<summary>Increments a counter by its step size.</summary>
    public static void Increment(this IEnumerable<CounterEntity> target, object? data = null)
    {
        target.CallService("increment", data);
    }

    ///<summary>Resets a counter to its initial value.</summary>
    public static void Reset(this CounterEntity target, object? data = null)
    {
        target.CallService("reset", data);
    }

    ///<summary>Resets a counter to its initial value.</summary>
    public static void Reset(this IEnumerable<CounterEntity> target, object? data = null)
    {
        target.CallService("reset", data);
    }

    ///<summary>Sets the counter to a specific value.</summary>
    public static void SetValue(this CounterEntity target, CounterSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the counter to a specific value.</summary>
    public static void SetValue(this IEnumerable<CounterEntity> target, CounterSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the counter to a specific value.</summary>
    ///<param name="target">The CounterEntity to call this service for</param>
    ///<param name="value">The new counter value the entity should be set to.</param>
    public static void SetValue(this CounterEntity target, long value)
    {
        target.CallService("set_value", new CounterSetValueParameters { Value = value });
    }

    ///<summary>Sets the counter to a specific value.</summary>
    ///<param name="target">The IEnumerable&lt;CounterEntity&gt; to call this service for</param>
    ///<param name="value">The new counter value the entity should be set to.</param>
    public static void SetValue(this IEnumerable<CounterEntity> target, long value)
    {
        target.CallService("set_value", new CounterSetValueParameters { Value = value });
    }
}

public static class CoverEntityExtensionMethods
{
    ///<summary>Closes a cover.</summary>
    public static void CloseCover(this ICoverEntityCore target, object? data = null)
    {
        target.CallService("close_cover", data);
    }

    ///<summary>Closes a cover.</summary>
    public static void CloseCover(this IEnumerable<ICoverEntityCore> target, object? data = null)
    {
        target.CallService("close_cover", data);
    }

    ///<summary>Tilts a cover to close.</summary>
    public static void CloseCoverTilt(this ICoverEntityCore target, object? data = null)
    {
        target.CallService("close_cover_tilt", data);
    }

    ///<summary>Tilts a cover to close.</summary>
    public static void CloseCoverTilt(this IEnumerable<ICoverEntityCore> target, object? data = null)
    {
        target.CallService("close_cover_tilt", data);
    }

    ///<summary>Opens a cover.</summary>
    public static void OpenCover(this ICoverEntityCore target, object? data = null)
    {
        target.CallService("open_cover", data);
    }

    ///<summary>Opens a cover.</summary>
    public static void OpenCover(this IEnumerable<ICoverEntityCore> target, object? data = null)
    {
        target.CallService("open_cover", data);
    }

    ///<summary>Tilts a cover open.</summary>
    public static void OpenCoverTilt(this ICoverEntityCore target, object? data = null)
    {
        target.CallService("open_cover_tilt", data);
    }

    ///<summary>Tilts a cover open.</summary>
    public static void OpenCoverTilt(this IEnumerable<ICoverEntityCore> target, object? data = null)
    {
        target.CallService("open_cover_tilt", data);
    }

    ///<summary>Moves a cover to a specific position.</summary>
    public static void SetCoverPosition(this ICoverEntityCore target, CoverSetCoverPositionParameters data)
    {
        target.CallService("set_cover_position", data);
    }

    ///<summary>Moves a cover to a specific position.</summary>
    public static void SetCoverPosition(this IEnumerable<ICoverEntityCore> target, CoverSetCoverPositionParameters data)
    {
        target.CallService("set_cover_position", data);
    }

    ///<summary>Moves a cover to a specific position.</summary>
    ///<param name="target">The ICoverEntityCore to call this service for</param>
    ///<param name="position">Target position.</param>
    public static void SetCoverPosition(this ICoverEntityCore target, long position)
    {
        target.CallService("set_cover_position", new CoverSetCoverPositionParameters { Position = position });
    }

    ///<summary>Moves a cover to a specific position.</summary>
    ///<param name="target">The IEnumerable&lt;ICoverEntityCore&gt; to call this service for</param>
    ///<param name="position">Target position.</param>
    public static void SetCoverPosition(this IEnumerable<ICoverEntityCore> target, long position)
    {
        target.CallService("set_cover_position", new CoverSetCoverPositionParameters { Position = position });
    }

    ///<summary>Moves a cover tilt to a specific position.</summary>
    public static void SetCoverTiltPosition(this ICoverEntityCore target, CoverSetCoverTiltPositionParameters data)
    {
        target.CallService("set_cover_tilt_position", data);
    }

    ///<summary>Moves a cover tilt to a specific position.</summary>
    public static void SetCoverTiltPosition(this IEnumerable<ICoverEntityCore> target, CoverSetCoverTiltPositionParameters data)
    {
        target.CallService("set_cover_tilt_position", data);
    }

    ///<summary>Moves a cover tilt to a specific position.</summary>
    ///<param name="target">The ICoverEntityCore to call this service for</param>
    ///<param name="tiltPosition">Target tilt positition.</param>
    public static void SetCoverTiltPosition(this ICoverEntityCore target, long tiltPosition)
    {
        target.CallService("set_cover_tilt_position", new CoverSetCoverTiltPositionParameters { TiltPosition = tiltPosition });
    }

    ///<summary>Moves a cover tilt to a specific position.</summary>
    ///<param name="target">The IEnumerable&lt;ICoverEntityCore&gt; to call this service for</param>
    ///<param name="tiltPosition">Target tilt positition.</param>
    public static void SetCoverTiltPosition(this IEnumerable<ICoverEntityCore> target, long tiltPosition)
    {
        target.CallService("set_cover_tilt_position", new CoverSetCoverTiltPositionParameters { TiltPosition = tiltPosition });
    }

    ///<summary>Stops the cover movement.</summary>
    public static void StopCover(this ICoverEntityCore target, object? data = null)
    {
        target.CallService("stop_cover", data);
    }

    ///<summary>Stops the cover movement.</summary>
    public static void StopCover(this IEnumerable<ICoverEntityCore> target, object? data = null)
    {
        target.CallService("stop_cover", data);
    }

    ///<summary>Stops a tilting cover movement.</summary>
    public static void StopCoverTilt(this ICoverEntityCore target, object? data = null)
    {
        target.CallService("stop_cover_tilt", data);
    }

    ///<summary>Stops a tilting cover movement.</summary>
    public static void StopCoverTilt(this IEnumerable<ICoverEntityCore> target, object? data = null)
    {
        target.CallService("stop_cover_tilt", data);
    }

    ///<summary>Toggles a cover open/closed.</summary>
    public static void Toggle(this ICoverEntityCore target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles a cover open/closed.</summary>
    public static void Toggle(this IEnumerable<ICoverEntityCore> target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles a cover tilt open/closed.</summary>
    public static void ToggleCoverTilt(this ICoverEntityCore target, object? data = null)
    {
        target.CallService("toggle_cover_tilt", data);
    }

    ///<summary>Toggles a cover tilt open/closed.</summary>
    public static void ToggleCoverTilt(this IEnumerable<ICoverEntityCore> target, object? data = null)
    {
        target.CallService("toggle_cover_tilt", data);
    }
}

public static class GoogleHomeEntityExtensionMethods
{
    ///<summary>Reboot a Google Home device.</summary>
    public static void RebootDevice(this ISensorEntityCore target, object? data = null)
    {
        target.CallService("reboot_device", data);
    }

    ///<summary>Reboot a Google Home device.</summary>
    public static void RebootDevice(this IEnumerable<ISensorEntityCore> target, object? data = null)
    {
        target.CallService("reboot_device", data);
    }
}

public static class HueEntityExtensionMethods
{
    ///<summary>Activates a Hue scene with more control over the options.</summary>
    public static void ActivateScene(this ISceneEntityCore target, HueActivateSceneParameters data)
    {
        target.CallService("activate_scene", data);
    }

    ///<summary>Activates a Hue scene with more control over the options.</summary>
    public static void ActivateScene(this IEnumerable<ISceneEntityCore> target, HueActivateSceneParameters data)
    {
        target.CallService("activate_scene", data);
    }

    ///<summary>Activates a Hue scene with more control over the options.</summary>
    ///<param name="target">The ISceneEntityCore to call this service for</param>
    ///<param name="transition">Transition duration it takes to bring devices to the state defined in the scene.</param>
    ///<param name="dynamic">Enable dynamic mode of the scene.</param>
    ///<param name="speed">Speed of dynamic palette for this scene.</param>
    ///<param name="brightness">Set brightness for the scene.</param>
    public static void ActivateScene(this ISceneEntityCore target, long? transition = null, bool? dynamic = null, long? speed = null, long? brightness = null)
    {
        target.CallService("activate_scene", new HueActivateSceneParameters { Transition = transition, Dynamic = dynamic, Speed = speed, Brightness = brightness });
    }

    ///<summary>Activates a Hue scene with more control over the options.</summary>
    ///<param name="target">The IEnumerable&lt;ISceneEntityCore&gt; to call this service for</param>
    ///<param name="transition">Transition duration it takes to bring devices to the state defined in the scene.</param>
    ///<param name="dynamic">Enable dynamic mode of the scene.</param>
    ///<param name="speed">Speed of dynamic palette for this scene.</param>
    ///<param name="brightness">Set brightness for the scene.</param>
    public static void ActivateScene(this IEnumerable<ISceneEntityCore> target, long? transition = null, bool? dynamic = null, long? speed = null, long? brightness = null)
    {
        target.CallService("activate_scene", new HueActivateSceneParameters { Transition = transition, Dynamic = dynamic, Speed = speed, Brightness = brightness });
    }
}

public static class ImageEntityExtensionMethods
{
    ///<summary>Takes a snapshot from an image.</summary>
    public static void Snapshot(this ImageEntity target, ImageSnapshotParameters data)
    {
        target.CallService("snapshot", data);
    }

    ///<summary>Takes a snapshot from an image.</summary>
    public static void Snapshot(this IEnumerable<ImageEntity> target, ImageSnapshotParameters data)
    {
        target.CallService("snapshot", data);
    }

    ///<summary>Takes a snapshot from an image.</summary>
    ///<param name="target">The ImageEntity to call this service for</param>
    ///<param name="filename">Template of a filename. Variable available is `entity_id`. eg: /tmp/image_snapshot.jpg</param>
    public static void Snapshot(this ImageEntity target, string filename)
    {
        target.CallService("snapshot", new ImageSnapshotParameters { Filename = filename });
    }

    ///<summary>Takes a snapshot from an image.</summary>
    ///<param name="target">The IEnumerable&lt;ImageEntity&gt; to call this service for</param>
    ///<param name="filename">Template of a filename. Variable available is `entity_id`. eg: /tmp/image_snapshot.jpg</param>
    public static void Snapshot(this IEnumerable<ImageEntity> target, string filename)
    {
        target.CallService("snapshot", new ImageSnapshotParameters { Filename = filename });
    }
}

public static class InputBooleanEntityExtensionMethods
{
    ///<summary>Toggles the helper on/off.</summary>
    public static void Toggle(this IInputBooleanEntityCore target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles the helper on/off.</summary>
    public static void Toggle(this IEnumerable<IInputBooleanEntityCore> target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Turns off the helper.</summary>
    public static void TurnOff(this IInputBooleanEntityCore target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns off the helper.</summary>
    public static void TurnOff(this IEnumerable<IInputBooleanEntityCore> target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns on the helper.</summary>
    public static void TurnOn(this IInputBooleanEntityCore target, object? data = null)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turns on the helper.</summary>
    public static void TurnOn(this IEnumerable<IInputBooleanEntityCore> target, object? data = null)
    {
        target.CallService("turn_on", data);
    }
}

public static class InputButtonEntityExtensionMethods
{
    ///<summary>Mimics the physical button press on the device.</summary>
    public static void Press(this IInputButtonEntityCore target, object? data = null)
    {
        target.CallService("press", data);
    }

    ///<summary>Mimics the physical button press on the device.</summary>
    public static void Press(this IEnumerable<IInputButtonEntityCore> target, object? data = null)
    {
        target.CallService("press", data);
    }
}

public static class InputDatetimeEntityExtensionMethods
{
    ///<summary>Sets the date and/or time.</summary>
    public static void SetDatetime(this IInputDatetimeEntityCore target, InputDatetimeSetDatetimeParameters data)
    {
        target.CallService("set_datetime", data);
    }

    ///<summary>Sets the date and/or time.</summary>
    public static void SetDatetime(this IEnumerable<IInputDatetimeEntityCore> target, InputDatetimeSetDatetimeParameters data)
    {
        target.CallService("set_datetime", data);
    }

    ///<summary>Sets the date and/or time.</summary>
    ///<param name="target">The IInputDatetimeEntityCore to call this service for</param>
    ///<param name="date">The target date. eg: &quot;2019-04-20&quot;</param>
    ///<param name="time">The target time. eg: &quot;05:04:20&quot;</param>
    ///<param name="datetime">The target date &amp; time. eg: &quot;2019-04-20 05:04:20&quot;</param>
    ///<param name="timestamp">The target date &amp; time, expressed by a UNIX timestamp.</param>
    public static void SetDatetime(this IInputDatetimeEntityCore target, string? date = null, TimeOnly? time = null, string? datetime = null, long? timestamp = null)
    {
        target.CallService("set_datetime", new InputDatetimeSetDatetimeParameters { Date = date, Time = time, Datetime = datetime, Timestamp = timestamp });
    }

    ///<summary>Sets the date and/or time.</summary>
    ///<param name="target">The IEnumerable&lt;IInputDatetimeEntityCore&gt; to call this service for</param>
    ///<param name="date">The target date. eg: &quot;2019-04-20&quot;</param>
    ///<param name="time">The target time. eg: &quot;05:04:20&quot;</param>
    ///<param name="datetime">The target date &amp; time. eg: &quot;2019-04-20 05:04:20&quot;</param>
    ///<param name="timestamp">The target date &amp; time, expressed by a UNIX timestamp.</param>
    public static void SetDatetime(this IEnumerable<IInputDatetimeEntityCore> target, string? date = null, TimeOnly? time = null, string? datetime = null, long? timestamp = null)
    {
        target.CallService("set_datetime", new InputDatetimeSetDatetimeParameters { Date = date, Time = time, Datetime = datetime, Timestamp = timestamp });
    }
}

public static class InputNumberEntityExtensionMethods
{
    ///<summary>Decrease an input number entity value by a certain amount.</summary>
    public static void Decrement(this IInputNumberEntityCore target, InputNumberDecrementParameters data)
    {
        target.CallService("decrement", data);
    }

    ///<summary>Decrease an input number entity value by a certain amount.</summary>
    public static void Decrement(this IEnumerable<IInputNumberEntityCore> target, InputNumberDecrementParameters data)
    {
        target.CallService("decrement", data);
    }

    ///<summary>Decrease an input number entity value by a certain amount.</summary>
    ///<param name="target">The IInputNumberEntityCore to call this service for</param>
    ///<param name="amount">The amount to decrease the input number with. If not provided, the step of the number entity will be used.</param>
    public static void Decrement(this IInputNumberEntityCore target, long? amount = null)
    {
        target.CallService("decrement", new InputNumberDecrementParameters { Amount = amount });
    }

    ///<summary>Decrease an input number entity value by a certain amount.</summary>
    ///<param name="target">The IEnumerable&lt;IInputNumberEntityCore&gt; to call this service for</param>
    ///<param name="amount">The amount to decrease the input number with. If not provided, the step of the number entity will be used.</param>
    public static void Decrement(this IEnumerable<IInputNumberEntityCore> target, long? amount = null)
    {
        target.CallService("decrement", new InputNumberDecrementParameters { Amount = amount });
    }

    ///<summary>Increase an input number entity value by a certain amount.</summary>
    public static void Increment(this IInputNumberEntityCore target, InputNumberIncrementParameters data)
    {
        target.CallService("increment", data);
    }

    ///<summary>Increase an input number entity value by a certain amount.</summary>
    public static void Increment(this IEnumerable<IInputNumberEntityCore> target, InputNumberIncrementParameters data)
    {
        target.CallService("increment", data);
    }

    ///<summary>Increase an input number entity value by a certain amount.</summary>
    ///<param name="target">The IInputNumberEntityCore to call this service for</param>
    ///<param name="amount">The amount to increase the input number with. If not provided, the step of the number entity will be used.</param>
    public static void Increment(this IInputNumberEntityCore target, long? amount = null)
    {
        target.CallService("increment", new InputNumberIncrementParameters { Amount = amount });
    }

    ///<summary>Increase an input number entity value by a certain amount.</summary>
    ///<param name="target">The IEnumerable&lt;IInputNumberEntityCore&gt; to call this service for</param>
    ///<param name="amount">The amount to increase the input number with. If not provided, the step of the number entity will be used.</param>
    public static void Increment(this IEnumerable<IInputNumberEntityCore> target, long? amount = null)
    {
        target.CallService("increment", new InputNumberIncrementParameters { Amount = amount });
    }

    ///<summary>Set an input number entity to its maximum value.</summary>
    public static void Max(this IInputNumberEntityCore target, object? data = null)
    {
        target.CallService("max", data);
    }

    ///<summary>Set an input number entity to its maximum value.</summary>
    public static void Max(this IEnumerable<IInputNumberEntityCore> target, object? data = null)
    {
        target.CallService("max", data);
    }

    ///<summary>Set an input number entity to its minimum value.</summary>
    public static void Min(this IInputNumberEntityCore target, object? data = null)
    {
        target.CallService("min", data);
    }

    ///<summary>Set an input number entity to its minimum value.</summary>
    public static void Min(this IEnumerable<IInputNumberEntityCore> target, object? data = null)
    {
        target.CallService("min", data);
    }

    ///<summary>Sets the value.</summary>
    public static void SetValue(this IInputNumberEntityCore target, InputNumberSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    public static void SetValue(this IEnumerable<IInputNumberEntityCore> target, InputNumberSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The IInputNumberEntityCore to call this service for</param>
    ///<param name="value">The target value.</param>
    public static void SetValue(this IInputNumberEntityCore target, double value)
    {
        target.CallService("set_value", new InputNumberSetValueParameters { Value = value });
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The IEnumerable&lt;IInputNumberEntityCore&gt; to call this service for</param>
    ///<param name="value">The target value.</param>
    public static void SetValue(this IEnumerable<IInputNumberEntityCore> target, double value)
    {
        target.CallService("set_value", new InputNumberSetValueParameters { Value = value });
    }
}

public static class InputSelectEntityExtensionMethods
{
    ///<summary>Select an random option for an input_select entity.</summary>
    public static void Random(this IInputSelectEntityCore target, InputSelectRandomParameters data)
    {
        target.CallService("random", data);
    }

    ///<summary>Select an random option for an input_select entity.</summary>
    public static void Random(this IEnumerable<IInputSelectEntityCore> target, InputSelectRandomParameters data)
    {
        target.CallService("random", data);
    }

    ///<summary>Select an random option for an input_select entity.</summary>
    ///<param name="target">The IInputSelectEntityCore to call this service for</param>
    ///<param name="options">Limits the options to select from. If not provided, all options will be considered.</param>
    public static void Random(this IInputSelectEntityCore target, object? options = null)
    {
        target.CallService("random", new InputSelectRandomParameters { Options = options });
    }

    ///<summary>Select an random option for an input_select entity.</summary>
    ///<param name="target">The IEnumerable&lt;IInputSelectEntityCore&gt; to call this service for</param>
    ///<param name="options">Limits the options to select from. If not provided, all options will be considered.</param>
    public static void Random(this IEnumerable<IInputSelectEntityCore> target, object? options = null)
    {
        target.CallService("random", new InputSelectRandomParameters { Options = options });
    }

    ///<summary>Selects the first option.</summary>
    public static void SelectFirst(this IInputSelectEntityCore target, object? data = null)
    {
        target.CallService("select_first", data);
    }

    ///<summary>Selects the first option.</summary>
    public static void SelectFirst(this IEnumerable<IInputSelectEntityCore> target, object? data = null)
    {
        target.CallService("select_first", data);
    }

    ///<summary>Selects the last option.</summary>
    public static void SelectLast(this IInputSelectEntityCore target, object? data = null)
    {
        target.CallService("select_last", data);
    }

    ///<summary>Selects the last option.</summary>
    public static void SelectLast(this IEnumerable<IInputSelectEntityCore> target, object? data = null)
    {
        target.CallService("select_last", data);
    }

    ///<summary>Selects the next option.</summary>
    public static void SelectNext(this IInputSelectEntityCore target, InputSelectSelectNextParameters data)
    {
        target.CallService("select_next", data);
    }

    ///<summary>Selects the next option.</summary>
    public static void SelectNext(this IEnumerable<IInputSelectEntityCore> target, InputSelectSelectNextParameters data)
    {
        target.CallService("select_next", data);
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="target">The IInputSelectEntityCore to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public static void SelectNext(this IInputSelectEntityCore target, bool? cycle = null)
    {
        target.CallService("select_next", new InputSelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="target">The IEnumerable&lt;IInputSelectEntityCore&gt; to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public static void SelectNext(this IEnumerable<IInputSelectEntityCore> target, bool? cycle = null)
    {
        target.CallService("select_next", new InputSelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects an option.</summary>
    public static void SelectOption(this IInputSelectEntityCore target, InputSelectSelectOptionParameters data)
    {
        target.CallService("select_option", data);
    }

    ///<summary>Selects an option.</summary>
    public static void SelectOption(this IEnumerable<IInputSelectEntityCore> target, InputSelectSelectOptionParameters data)
    {
        target.CallService("select_option", data);
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The IInputSelectEntityCore to call this service for</param>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public static void SelectOption(this IInputSelectEntityCore target, object option)
    {
        target.CallService("select_option", new InputSelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The IEnumerable&lt;IInputSelectEntityCore&gt; to call this service for</param>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public static void SelectOption(this IEnumerable<IInputSelectEntityCore> target, object option)
    {
        target.CallService("select_option", new InputSelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects the previous option.</summary>
    public static void SelectPrevious(this IInputSelectEntityCore target, InputSelectSelectPreviousParameters data)
    {
        target.CallService("select_previous", data);
    }

    ///<summary>Selects the previous option.</summary>
    public static void SelectPrevious(this IEnumerable<IInputSelectEntityCore> target, InputSelectSelectPreviousParameters data)
    {
        target.CallService("select_previous", data);
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The IInputSelectEntityCore to call this service for</param>
    ///<param name="cycle">If the option should cycle from the first to the last option on the list.</param>
    public static void SelectPrevious(this IInputSelectEntityCore target, bool? cycle = null)
    {
        target.CallService("select_previous", new InputSelectSelectPreviousParameters { Cycle = cycle });
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The IEnumerable&lt;IInputSelectEntityCore&gt; to call this service for</param>
    ///<param name="cycle">If the option should cycle from the first to the last option on the list.</param>
    public static void SelectPrevious(this IEnumerable<IInputSelectEntityCore> target, bool? cycle = null)
    {
        target.CallService("select_previous", new InputSelectSelectPreviousParameters { Cycle = cycle });
    }

    ///<summary>Sets the options.</summary>
    public static void SetOptions(this IInputSelectEntityCore target, InputSelectSetOptionsParameters data)
    {
        target.CallService("set_options", data);
    }

    ///<summary>Sets the options.</summary>
    public static void SetOptions(this IEnumerable<IInputSelectEntityCore> target, InputSelectSetOptionsParameters data)
    {
        target.CallService("set_options", data);
    }

    ///<summary>Sets the options.</summary>
    ///<param name="target">The IInputSelectEntityCore to call this service for</param>
    ///<param name="options">List of options. eg: [&quot;Item A&quot;, &quot;Item B&quot;, &quot;Item C&quot;]</param>
    public static void SetOptions(this IInputSelectEntityCore target, IEnumerable<string> options)
    {
        target.CallService("set_options", new InputSelectSetOptionsParameters { Options = options });
    }

    ///<summary>Sets the options.</summary>
    ///<param name="target">The IEnumerable&lt;IInputSelectEntityCore&gt; to call this service for</param>
    ///<param name="options">List of options. eg: [&quot;Item A&quot;, &quot;Item B&quot;, &quot;Item C&quot;]</param>
    public static void SetOptions(this IEnumerable<IInputSelectEntityCore> target, IEnumerable<string> options)
    {
        target.CallService("set_options", new InputSelectSetOptionsParameters { Options = options });
    }

    ///<summary>Shuffles the list of selectable options for an `input_select` entity. This is not persistent and will be undone once reloaded or Home Assistant restarts.</summary>
    public static void Shuffle(this IInputSelectEntityCore target, object? data = null)
    {
        target.CallService("shuffle", data);
    }

    ///<summary>Shuffles the list of selectable options for an `input_select` entity. This is not persistent and will be undone once reloaded or Home Assistant restarts.</summary>
    public static void Shuffle(this IEnumerable<IInputSelectEntityCore> target, object? data = null)
    {
        target.CallService("shuffle", data);
    }

    ///<summary>Sorts the list of selectable options for an `input_select` entity. This is not persistent and will be undone once reloaded or Home Assistant restarts.</summary>
    public static void Sort(this IInputSelectEntityCore target, object? data = null)
    {
        target.CallService("sort", data);
    }

    ///<summary>Sorts the list of selectable options for an `input_select` entity. This is not persistent and will be undone once reloaded or Home Assistant restarts.</summary>
    public static void Sort(this IEnumerable<IInputSelectEntityCore> target, object? data = null)
    {
        target.CallService("sort", data);
    }
}

public static class InputTextEntityExtensionMethods
{
    ///<summary>Sets the value.</summary>
    public static void SetValue(this IInputTextEntityCore target, InputTextSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    public static void SetValue(this IEnumerable<IInputTextEntityCore> target, InputTextSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The IInputTextEntityCore to call this service for</param>
    ///<param name="value">The target value. eg: This is an example text</param>
    public static void SetValue(this IInputTextEntityCore target, string value)
    {
        target.CallService("set_value", new InputTextSetValueParameters { Value = value });
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The IEnumerable&lt;IInputTextEntityCore&gt; to call this service for</param>
    ///<param name="value">The target value. eg: This is an example text</param>
    public static void SetValue(this IEnumerable<IInputTextEntityCore> target, string value)
    {
        target.CallService("set_value", new InputTextSetValueParameters { Value = value });
    }
}

public static class LightEntityExtensionMethods
{
    ///<summary>Toggles one or more lights, from on to off, or off to on, based on their current state.</summary>
    public static void Toggle(this ILightEntityCore target, LightToggleParameters data)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles one or more lights, from on to off, or off to on, based on their current state.</summary>
    public static void Toggle(this IEnumerable<ILightEntityCore> target, LightToggleParameters data)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles one or more lights, from on to off, or off to on, based on their current state.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="colorTempKelvin">Color temperature in Kelvin.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="effect">Light effect.</param>
    ///<param name="rgbwColor"> eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor"> eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName"></param>
    ///<param name="hsColor"> eg: [300, 70]</param>
    ///<param name="xyColor"> eg: [0.52, 0.43]</param>
    ///<param name="colorTemp"></param>
    ///<param name="brightness"></param>
    ///<param name="white"></param>
    ///<param name="profile"> eg: relax</param>
    ///<param name="flash"></param>
    public static void Toggle(this ILightEntityCore target, long? transition = null, IReadOnlyCollection<int>? rgbColor = null, object? colorTempKelvin = null, long? brightnessPct = null, string? effect = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, long? brightness = null, object? white = null, string? profile = null, object? flash = null)
    {
        target.CallService("toggle", new LightToggleParameters { Transition = transition, RgbColor = rgbColor, ColorTempKelvin = colorTempKelvin, BrightnessPct = brightnessPct, Effect = effect, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Brightness = brightness, White = white, Profile = profile, Flash = flash });
    }

    ///<summary>Toggles one or more lights, from on to off, or off to on, based on their current state.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="colorTempKelvin">Color temperature in Kelvin.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="effect">Light effect.</param>
    ///<param name="rgbwColor"> eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor"> eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName"></param>
    ///<param name="hsColor"> eg: [300, 70]</param>
    ///<param name="xyColor"> eg: [0.52, 0.43]</param>
    ///<param name="colorTemp"></param>
    ///<param name="brightness"></param>
    ///<param name="white"></param>
    ///<param name="profile"> eg: relax</param>
    ///<param name="flash"></param>
    public static void Toggle(this IEnumerable<ILightEntityCore> target, long? transition = null, IReadOnlyCollection<int>? rgbColor = null, object? colorTempKelvin = null, long? brightnessPct = null, string? effect = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, long? brightness = null, object? white = null, string? profile = null, object? flash = null)
    {
        target.CallService("toggle", new LightToggleParameters { Transition = transition, RgbColor = rgbColor, ColorTempKelvin = colorTempKelvin, BrightnessPct = brightnessPct, Effect = effect, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Brightness = brightness, White = white, Profile = profile, Flash = flash });
    }

    ///<summary>Turns off one or more lights.</summary>
    public static void TurnOff(this ILightEntityCore target, LightTurnOffParameters data)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns off one or more lights.</summary>
    public static void TurnOff(this IEnumerable<ILightEntityCore> target, LightTurnOffParameters data)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns off one or more lights.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="flash"></param>
    public static void TurnOff(this ILightEntityCore target, long? transition = null, object? flash = null)
    {
        target.CallService("turn_off", new LightTurnOffParameters { Transition = transition, Flash = flash });
    }

    ///<summary>Turns off one or more lights.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="flash"></param>
    public static void TurnOff(this IEnumerable<ILightEntityCore> target, long? transition = null, object? flash = null)
    {
        target.CallService("turn_off", new LightTurnOffParameters { Transition = transition, Flash = flash });
    }

    ///<summary>Turns on one or more lights and adjusts their properties, even when they are turned on already.</summary>
    public static void TurnOn(this ILightEntityCore target, LightTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turns on one or more lights and adjusts their properties, even when they are turned on already.</summary>
    public static void TurnOn(this IEnumerable<ILightEntityCore> target, LightTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turns on one or more lights and adjusts their properties, even when they are turned on already.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="colorTempKelvin">Color temperature in Kelvin.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="brightnessStepPct">Change brightness by a percentage.</param>
    ///<param name="effect">Light effect.</param>
    ///<param name="rgbwColor"> eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor"> eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName"></param>
    ///<param name="hsColor"> eg: [300, 70]</param>
    ///<param name="xyColor"> eg: [0.52, 0.43]</param>
    ///<param name="colorTemp"></param>
    ///<param name="brightness"></param>
    ///<param name="brightnessStep"></param>
    ///<param name="white"></param>
    ///<param name="profile"> eg: relax</param>
    ///<param name="flash"></param>
    public static void TurnOn(this ILightEntityCore target, long? transition = null, IReadOnlyCollection<int>? rgbColor = null, object? colorTempKelvin = null, long? brightnessPct = null, long? brightnessStepPct = null, string? effect = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, long? brightness = null, long? brightnessStep = null, object? white = null, string? profile = null, object? flash = null)
    {
        target.CallService("turn_on", new LightTurnOnParameters { Transition = transition, RgbColor = rgbColor, ColorTempKelvin = colorTempKelvin, BrightnessPct = brightnessPct, BrightnessStepPct = brightnessStepPct, Effect = effect, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Brightness = brightness, BrightnessStep = brightnessStep, White = white, Profile = profile, Flash = flash });
    }

    ///<summary>Turns on one or more lights and adjusts their properties, even when they are turned on already.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="colorTempKelvin">Color temperature in Kelvin.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="brightnessStepPct">Change brightness by a percentage.</param>
    ///<param name="effect">Light effect.</param>
    ///<param name="rgbwColor"> eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor"> eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName"></param>
    ///<param name="hsColor"> eg: [300, 70]</param>
    ///<param name="xyColor"> eg: [0.52, 0.43]</param>
    ///<param name="colorTemp"></param>
    ///<param name="brightness"></param>
    ///<param name="brightnessStep"></param>
    ///<param name="white"></param>
    ///<param name="profile"> eg: relax</param>
    ///<param name="flash"></param>
    public static void TurnOn(this IEnumerable<ILightEntityCore> target, long? transition = null, IReadOnlyCollection<int>? rgbColor = null, object? colorTempKelvin = null, long? brightnessPct = null, long? brightnessStepPct = null, string? effect = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, long? brightness = null, long? brightnessStep = null, object? white = null, string? profile = null, object? flash = null)
    {
        target.CallService("turn_on", new LightTurnOnParameters { Transition = transition, RgbColor = rgbColor, ColorTempKelvin = colorTempKelvin, BrightnessPct = brightnessPct, BrightnessStepPct = brightnessStepPct, Effect = effect, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Brightness = brightness, BrightnessStep = brightnessStep, White = white, Profile = profile, Flash = flash });
    }
}

public static class MediaPlayerEntityExtensionMethods
{
    ///<summary>Browses the available media.</summary>
    public static Task<JsonElement?> BrowseMediaAsync(this IMediaPlayerEntityCore target, MediaPlayerBrowseMediaParameters data)
    {
        return target.CallServiceWithResponseAsync("browse_media", data);
    }

    ///<summary>Browses the available media.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="mediaContentType">The type of the content to browse, such as image, music, TV show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="mediaContentId">The ID of the content to browse. Integration dependent. eg: A:ALBUMARTIST/Beatles</param>
    public static Task<JsonElement?> BrowseMediaAsync(this IMediaPlayerEntityCore target, string? mediaContentType = null, string? mediaContentId = null)
    {
        return target.CallServiceWithResponseAsync("browse_media", new MediaPlayerBrowseMediaParameters { MediaContentType = mediaContentType, MediaContentId = mediaContentId });
    }

    ///<summary>Browses the available media.</summary>
    public static void BrowseMedia(this IMediaPlayerEntityCore target, MediaPlayerBrowseMediaParameters data)
    {
        target.CallService("browse_media", data);
    }

    ///<summary>Browses the available media.</summary>
    public static void BrowseMedia(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerBrowseMediaParameters data)
    {
        target.CallService("browse_media", data);
    }

    ///<summary>Browses the available media.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="mediaContentType">The type of the content to browse, such as image, music, TV show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="mediaContentId">The ID of the content to browse. Integration dependent. eg: A:ALBUMARTIST/Beatles</param>
    public static void BrowseMedia(this IMediaPlayerEntityCore target, string? mediaContentType = null, string? mediaContentId = null)
    {
        target.CallService("browse_media", new MediaPlayerBrowseMediaParameters { MediaContentType = mediaContentType, MediaContentId = mediaContentId });
    }

    ///<summary>Browses the available media.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="mediaContentType">The type of the content to browse, such as image, music, TV show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="mediaContentId">The ID of the content to browse. Integration dependent. eg: A:ALBUMARTIST/Beatles</param>
    public static void BrowseMedia(this IEnumerable<IMediaPlayerEntityCore> target, string? mediaContentType = null, string? mediaContentId = null)
    {
        target.CallService("browse_media", new MediaPlayerBrowseMediaParameters { MediaContentType = mediaContentType, MediaContentId = mediaContentId });
    }

    ///<summary>Removes all items from the playlist.</summary>
    public static void ClearPlaylist(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("clear_playlist", data);
    }

    ///<summary>Removes all items from the playlist.</summary>
    public static void ClearPlaylist(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("clear_playlist", data);
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    public static void Join(this IMediaPlayerEntityCore target, MediaPlayerJoinParameters data)
    {
        target.CallService("join", data);
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    public static void Join(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerJoinParameters data)
    {
        target.CallService("join", data);
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="groupMembers">The players which will be synced with the playback specified in &apos;Targets&apos;. eg: - media_player.multiroom_player2 - media_player.multiroom_player3 </param>
    public static void Join(this IMediaPlayerEntityCore target, IEnumerable<string> groupMembers)
    {
        target.CallService("join", new MediaPlayerJoinParameters { GroupMembers = groupMembers });
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="groupMembers">The players which will be synced with the playback specified in &apos;Targets&apos;. eg: - media_player.multiroom_player2 - media_player.multiroom_player3 </param>
    public static void Join(this IEnumerable<IMediaPlayerEntityCore> target, IEnumerable<string> groupMembers)
    {
        target.CallService("join", new MediaPlayerJoinParameters { GroupMembers = groupMembers });
    }

    ///<summary>Selects the next track.</summary>
    public static void MediaNextTrack(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("media_next_track", data);
    }

    ///<summary>Selects the next track.</summary>
    public static void MediaNextTrack(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("media_next_track", data);
    }

    ///<summary>Pauses.</summary>
    public static void MediaPause(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("media_pause", data);
    }

    ///<summary>Pauses.</summary>
    public static void MediaPause(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("media_pause", data);
    }

    ///<summary>Starts playing.</summary>
    public static void MediaPlay(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("media_play", data);
    }

    ///<summary>Starts playing.</summary>
    public static void MediaPlay(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("media_play", data);
    }

    ///<summary>Toggles play/pause.</summary>
    public static void MediaPlayPause(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("media_play_pause", data);
    }

    ///<summary>Toggles play/pause.</summary>
    public static void MediaPlayPause(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("media_play_pause", data);
    }

    ///<summary>Selects the previous track.</summary>
    public static void MediaPreviousTrack(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("media_previous_track", data);
    }

    ///<summary>Selects the previous track.</summary>
    public static void MediaPreviousTrack(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("media_previous_track", data);
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    public static void MediaSeek(this IMediaPlayerEntityCore target, MediaPlayerMediaSeekParameters data)
    {
        target.CallService("media_seek", data);
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    public static void MediaSeek(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerMediaSeekParameters data)
    {
        target.CallService("media_seek", data);
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="seekPosition">Target position in the currently playing media. The format is platform dependent.</param>
    public static void MediaSeek(this IMediaPlayerEntityCore target, double seekPosition)
    {
        target.CallService("media_seek", new MediaPlayerMediaSeekParameters { SeekPosition = seekPosition });
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="seekPosition">Target position in the currently playing media. The format is platform dependent.</param>
    public static void MediaSeek(this IEnumerable<IMediaPlayerEntityCore> target, double seekPosition)
    {
        target.CallService("media_seek", new MediaPlayerMediaSeekParameters { SeekPosition = seekPosition });
    }

    ///<summary>Stops playing.</summary>
    public static void MediaStop(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("media_stop", data);
    }

    ///<summary>Stops playing.</summary>
    public static void MediaStop(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("media_stop", data);
    }

    ///<summary>Starts playing specified media.</summary>
    public static void PlayMedia(this IMediaPlayerEntityCore target, MediaPlayerPlayMediaParameters data)
    {
        target.CallService("play_media", data);
    }

    ///<summary>Starts playing specified media.</summary>
    public static void PlayMedia(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerPlayMediaParameters data)
    {
        target.CallService("play_media", data);
    }

    ///<summary>Starts playing specified media.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="media">The media selected to play. eg: {&quot;media_content_id&quot;: &quot;https://home-assistant.io/images/cast/splash.png&quot;, &quot;media_content_type&quot;: &quot;music&quot;}</param>
    ///<param name="enqueue">If the content should be played now or be added to the queue.</param>
    ///<param name="announce">If the media should be played as an announcement. eg: true</param>
    public static void PlayMedia(this IMediaPlayerEntityCore target, object media, object? enqueue = null, bool? announce = null)
    {
        target.CallService("play_media", new MediaPlayerPlayMediaParameters { Media = media, Enqueue = enqueue, Announce = announce });
    }

    ///<summary>Starts playing specified media.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="media">The media selected to play. eg: {&quot;media_content_id&quot;: &quot;https://home-assistant.io/images/cast/splash.png&quot;, &quot;media_content_type&quot;: &quot;music&quot;}</param>
    ///<param name="enqueue">If the content should be played now or be added to the queue.</param>
    ///<param name="announce">If the media should be played as an announcement. eg: true</param>
    public static void PlayMedia(this IEnumerable<IMediaPlayerEntityCore> target, object media, object? enqueue = null, bool? announce = null)
    {
        target.CallService("play_media", new MediaPlayerPlayMediaParameters { Media = media, Enqueue = enqueue, Announce = announce });
    }

    ///<summary>Sets the repeat mode.</summary>
    public static void RepeatSet(this IMediaPlayerEntityCore target, MediaPlayerRepeatSetParameters data)
    {
        target.CallService("repeat_set", data);
    }

    ///<summary>Sets the repeat mode.</summary>
    public static void RepeatSet(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerRepeatSetParameters data)
    {
        target.CallService("repeat_set", data);
    }

    ///<summary>Sets the repeat mode.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="repeat">Whether the media (one or all) should be played in a loop or not.</param>
    public static void RepeatSet(this IMediaPlayerEntityCore target, object repeat)
    {
        target.CallService("repeat_set", new MediaPlayerRepeatSetParameters { Repeat = repeat });
    }

    ///<summary>Sets the repeat mode.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="repeat">Whether the media (one or all) should be played in a loop or not.</param>
    public static void RepeatSet(this IEnumerable<IMediaPlayerEntityCore> target, object repeat)
    {
        target.CallService("repeat_set", new MediaPlayerRepeatSetParameters { Repeat = repeat });
    }

    ///<summary>Searches the available media.</summary>
    public static Task<JsonElement?> SearchMediaAsync(this IMediaPlayerEntityCore target, MediaPlayerSearchMediaParameters data)
    {
        return target.CallServiceWithResponseAsync("search_media", data);
    }

    ///<summary>Searches the available media.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="searchQuery">The term to search for. eg: Beatles</param>
    ///<param name="mediaContentType">The type of the content to browse, such as image, music, TV show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="mediaContentId">The ID of the content to browse. Integration dependent. eg: A:ALBUMARTIST/Beatles</param>
    ///<param name="mediaFilterClasses">List of media classes to filter the search results by. eg: [&quot;album&quot;,&quot;artist&quot;]</param>
    public static Task<JsonElement?> SearchMediaAsync(this IMediaPlayerEntityCore target, string searchQuery, string? mediaContentType = null, string? mediaContentId = null, IEnumerable<string>? mediaFilterClasses = null)
    {
        return target.CallServiceWithResponseAsync("search_media", new MediaPlayerSearchMediaParameters { SearchQuery = searchQuery, MediaContentType = mediaContentType, MediaContentId = mediaContentId, MediaFilterClasses = mediaFilterClasses });
    }

    ///<summary>Searches the available media.</summary>
    public static void SearchMedia(this IMediaPlayerEntityCore target, MediaPlayerSearchMediaParameters data)
    {
        target.CallService("search_media", data);
    }

    ///<summary>Searches the available media.</summary>
    public static void SearchMedia(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerSearchMediaParameters data)
    {
        target.CallService("search_media", data);
    }

    ///<summary>Searches the available media.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="searchQuery">The term to search for. eg: Beatles</param>
    ///<param name="mediaContentType">The type of the content to browse, such as image, music, TV show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="mediaContentId">The ID of the content to browse. Integration dependent. eg: A:ALBUMARTIST/Beatles</param>
    ///<param name="mediaFilterClasses">List of media classes to filter the search results by. eg: [&quot;album&quot;,&quot;artist&quot;]</param>
    public static void SearchMedia(this IMediaPlayerEntityCore target, string searchQuery, string? mediaContentType = null, string? mediaContentId = null, IEnumerable<string>? mediaFilterClasses = null)
    {
        target.CallService("search_media", new MediaPlayerSearchMediaParameters { SearchQuery = searchQuery, MediaContentType = mediaContentType, MediaContentId = mediaContentId, MediaFilterClasses = mediaFilterClasses });
    }

    ///<summary>Searches the available media.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="searchQuery">The term to search for. eg: Beatles</param>
    ///<param name="mediaContentType">The type of the content to browse, such as image, music, TV show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="mediaContentId">The ID of the content to browse. Integration dependent. eg: A:ALBUMARTIST/Beatles</param>
    ///<param name="mediaFilterClasses">List of media classes to filter the search results by. eg: [&quot;album&quot;,&quot;artist&quot;]</param>
    public static void SearchMedia(this IEnumerable<IMediaPlayerEntityCore> target, string searchQuery, string? mediaContentType = null, string? mediaContentId = null, IEnumerable<string>? mediaFilterClasses = null)
    {
        target.CallService("search_media", new MediaPlayerSearchMediaParameters { SearchQuery = searchQuery, MediaContentType = mediaContentType, MediaContentId = mediaContentId, MediaFilterClasses = mediaFilterClasses });
    }

    ///<summary>Selects a specific sound mode.</summary>
    public static void SelectSoundMode(this IMediaPlayerEntityCore target, MediaPlayerSelectSoundModeParameters data)
    {
        target.CallService("select_sound_mode", data);
    }

    ///<summary>Selects a specific sound mode.</summary>
    public static void SelectSoundMode(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerSelectSoundModeParameters data)
    {
        target.CallService("select_sound_mode", data);
    }

    ///<summary>Selects a specific sound mode.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="soundMode">Name of the sound mode to switch to. eg: Music</param>
    public static void SelectSoundMode(this IMediaPlayerEntityCore target, string? soundMode = null)
    {
        target.CallService("select_sound_mode", new MediaPlayerSelectSoundModeParameters { SoundMode = soundMode });
    }

    ///<summary>Selects a specific sound mode.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="soundMode">Name of the sound mode to switch to. eg: Music</param>
    public static void SelectSoundMode(this IEnumerable<IMediaPlayerEntityCore> target, string? soundMode = null)
    {
        target.CallService("select_sound_mode", new MediaPlayerSelectSoundModeParameters { SoundMode = soundMode });
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    public static void SelectSource(this IMediaPlayerEntityCore target, MediaPlayerSelectSourceParameters data)
    {
        target.CallService("select_source", data);
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    public static void SelectSource(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerSelectSourceParameters data)
    {
        target.CallService("select_source", data);
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="source">Name of the source to switch to. Platform dependent. eg: video1</param>
    public static void SelectSource(this IMediaPlayerEntityCore target, string source)
    {
        target.CallService("select_source", new MediaPlayerSelectSourceParameters { Source = source });
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="source">Name of the source to switch to. Platform dependent. eg: video1</param>
    public static void SelectSource(this IEnumerable<IMediaPlayerEntityCore> target, string source)
    {
        target.CallService("select_source", new MediaPlayerSelectSourceParameters { Source = source });
    }

    ///<summary>Enables or disables the shuffle mode.</summary>
    public static void ShuffleSet(this IMediaPlayerEntityCore target, MediaPlayerShuffleSetParameters data)
    {
        target.CallService("shuffle_set", data);
    }

    ///<summary>Enables or disables the shuffle mode.</summary>
    public static void ShuffleSet(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerShuffleSetParameters data)
    {
        target.CallService("shuffle_set", data);
    }

    ///<summary>Enables or disables the shuffle mode.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="shuffle">Whether the media should be played in randomized order or not.</param>
    public static void ShuffleSet(this IMediaPlayerEntityCore target, bool shuffle)
    {
        target.CallService("shuffle_set", new MediaPlayerShuffleSetParameters { Shuffle = shuffle });
    }

    ///<summary>Enables or disables the shuffle mode.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="shuffle">Whether the media should be played in randomized order or not.</param>
    public static void ShuffleSet(this IEnumerable<IMediaPlayerEntityCore> target, bool shuffle)
    {
        target.CallService("shuffle_set", new MediaPlayerShuffleSetParameters { Shuffle = shuffle });
    }

    ///<summary>Toggles a media player on/off.</summary>
    public static void Toggle(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles a media player on/off.</summary>
    public static void Toggle(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Turns off the power of the media player.</summary>
    public static void TurnOff(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns off the power of the media player.</summary>
    public static void TurnOff(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns on the power of the media player.</summary>
    public static void TurnOn(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turns on the power of the media player.</summary>
    public static void TurnOn(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Removes the player from a group. Only works on platforms which support player groups.</summary>
    public static void Unjoin(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("unjoin", data);
    }

    ///<summary>Removes the player from a group. Only works on platforms which support player groups.</summary>
    public static void Unjoin(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("unjoin", data);
    }

    ///<summary>Turns down the volume.</summary>
    public static void VolumeDown(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("volume_down", data);
    }

    ///<summary>Turns down the volume.</summary>
    public static void VolumeDown(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("volume_down", data);
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    public static void VolumeMute(this IMediaPlayerEntityCore target, MediaPlayerVolumeMuteParameters data)
    {
        target.CallService("volume_mute", data);
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    public static void VolumeMute(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerVolumeMuteParameters data)
    {
        target.CallService("volume_mute", data);
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="isVolumeMuted">Defines whether or not it is muted.</param>
    public static void VolumeMute(this IMediaPlayerEntityCore target, bool isVolumeMuted)
    {
        target.CallService("volume_mute", new MediaPlayerVolumeMuteParameters { IsVolumeMuted = isVolumeMuted });
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="isVolumeMuted">Defines whether or not it is muted.</param>
    public static void VolumeMute(this IEnumerable<IMediaPlayerEntityCore> target, bool isVolumeMuted)
    {
        target.CallService("volume_mute", new MediaPlayerVolumeMuteParameters { IsVolumeMuted = isVolumeMuted });
    }

    ///<summary>Sets the volume level.</summary>
    public static void VolumeSet(this IMediaPlayerEntityCore target, MediaPlayerVolumeSetParameters data)
    {
        target.CallService("volume_set", data);
    }

    ///<summary>Sets the volume level.</summary>
    public static void VolumeSet(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerVolumeSetParameters data)
    {
        target.CallService("volume_set", data);
    }

    ///<summary>Sets the volume level.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="volumeLevel">The volume. 0 is inaudible, 1 is the maximum volume.</param>
    public static void VolumeSet(this IMediaPlayerEntityCore target, double volumeLevel)
    {
        target.CallService("volume_set", new MediaPlayerVolumeSetParameters { VolumeLevel = volumeLevel });
    }

    ///<summary>Sets the volume level.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="volumeLevel">The volume. 0 is inaudible, 1 is the maximum volume.</param>
    public static void VolumeSet(this IEnumerable<IMediaPlayerEntityCore> target, double volumeLevel)
    {
        target.CallService("volume_set", new MediaPlayerVolumeSetParameters { VolumeLevel = volumeLevel });
    }

    ///<summary>Turns up the volume.</summary>
    public static void VolumeUp(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("volume_up", data);
    }

    ///<summary>Turns up the volume.</summary>
    public static void VolumeUp(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("volume_up", data);
    }
}

public static class MotionBlindsEntityExtensionMethods
{
    ///<summary>Sets the absolute position of the cover.</summary>
    public static void SetAbsolutePosition(this ICoverEntityCore target, MotionBlindsSetAbsolutePositionParameters data)
    {
        target.CallService("set_absolute_position", data);
    }

    ///<summary>Sets the absolute position of the cover.</summary>
    public static void SetAbsolutePosition(this IEnumerable<ICoverEntityCore> target, MotionBlindsSetAbsolutePositionParameters data)
    {
        target.CallService("set_absolute_position", data);
    }

    ///<summary>Sets the absolute position of the cover.</summary>
    ///<param name="target">The ICoverEntityCore to call this service for</param>
    ///<param name="absolutePosition">Absolute position to move to.</param>
    ///<param name="tiltPosition">Tilt position to move to.</param>
    ///<param name="width">Specify the width that is covered, only for TDBU Combined entities.</param>
    public static void SetAbsolutePosition(this ICoverEntityCore target, long absolutePosition, long? tiltPosition = null, long? width = null)
    {
        target.CallService("set_absolute_position", new MotionBlindsSetAbsolutePositionParameters { AbsolutePosition = absolutePosition, TiltPosition = tiltPosition, Width = width });
    }

    ///<summary>Sets the absolute position of the cover.</summary>
    ///<param name="target">The IEnumerable&lt;ICoverEntityCore&gt; to call this service for</param>
    ///<param name="absolutePosition">Absolute position to move to.</param>
    ///<param name="tiltPosition">Tilt position to move to.</param>
    ///<param name="width">Specify the width that is covered, only for TDBU Combined entities.</param>
    public static void SetAbsolutePosition(this IEnumerable<ICoverEntityCore> target, long absolutePosition, long? tiltPosition = null, long? width = null)
    {
        target.CallService("set_absolute_position", new MotionBlindsSetAbsolutePositionParameters { AbsolutePosition = absolutePosition, TiltPosition = tiltPosition, Width = width });
    }
}

public static class NotifyEntityExtensionMethods
{
    ///<summary>Sends a notification message.</summary>
    public static void SendMessage(this NotifyEntity target, NotifySendMessageParameters data)
    {
        target.CallService("send_message", data);
    }

    ///<summary>Sends a notification message.</summary>
    public static void SendMessage(this IEnumerable<NotifyEntity> target, NotifySendMessageParameters data)
    {
        target.CallService("send_message", data);
    }

    ///<summary>Sends a notification message.</summary>
    ///<param name="target">The NotifyEntity to call this service for</param>
    ///<param name="message">Your notification message.</param>
    ///<param name="title">Title for your notification message.</param>
    public static void SendMessage(this NotifyEntity target, string message, string? title = null)
    {
        target.CallService("send_message", new NotifySendMessageParameters { Message = message, Title = title });
    }

    ///<summary>Sends a notification message.</summary>
    ///<param name="target">The IEnumerable&lt;NotifyEntity&gt; to call this service for</param>
    ///<param name="message">Your notification message.</param>
    ///<param name="title">Title for your notification message.</param>
    public static void SendMessage(this IEnumerable<NotifyEntity> target, string message, string? title = null)
    {
        target.CallService("send_message", new NotifySendMessageParameters { Message = message, Title = title });
    }
}

public static class NumberEntityExtensionMethods
{
    ///<summary>Decrease a number entity value by a certain amount.</summary>
    public static void Decrement(this INumberEntityCore target, NumberDecrementParameters data)
    {
        target.CallService("decrement", data);
    }

    ///<summary>Decrease a number entity value by a certain amount.</summary>
    public static void Decrement(this IEnumerable<INumberEntityCore> target, NumberDecrementParameters data)
    {
        target.CallService("decrement", data);
    }

    ///<summary>Decrease a number entity value by a certain amount.</summary>
    ///<param name="target">The INumberEntityCore to call this service for</param>
    ///<param name="amount">The amount to decrease the number with. If not provided, the step of the number entity will be used.</param>
    public static void Decrement(this INumberEntityCore target, long? amount = null)
    {
        target.CallService("decrement", new NumberDecrementParameters { Amount = amount });
    }

    ///<summary>Decrease a number entity value by a certain amount.</summary>
    ///<param name="target">The IEnumerable&lt;INumberEntityCore&gt; to call this service for</param>
    ///<param name="amount">The amount to decrease the number with. If not provided, the step of the number entity will be used.</param>
    public static void Decrement(this IEnumerable<INumberEntityCore> target, long? amount = null)
    {
        target.CallService("decrement", new NumberDecrementParameters { Amount = amount });
    }

    ///<summary>Increase a number entity value by a certain amount.</summary>
    public static void Increment(this INumberEntityCore target, NumberIncrementParameters data)
    {
        target.CallService("increment", data);
    }

    ///<summary>Increase a number entity value by a certain amount.</summary>
    public static void Increment(this IEnumerable<INumberEntityCore> target, NumberIncrementParameters data)
    {
        target.CallService("increment", data);
    }

    ///<summary>Increase a number entity value by a certain amount.</summary>
    ///<param name="target">The INumberEntityCore to call this service for</param>
    ///<param name="amount">The amount to increase the number with. If not provided, the step of the number entity will be used.</param>
    public static void Increment(this INumberEntityCore target, long? amount = null)
    {
        target.CallService("increment", new NumberIncrementParameters { Amount = amount });
    }

    ///<summary>Increase a number entity value by a certain amount.</summary>
    ///<param name="target">The IEnumerable&lt;INumberEntityCore&gt; to call this service for</param>
    ///<param name="amount">The amount to increase the number with. If not provided, the step of the number entity will be used.</param>
    public static void Increment(this IEnumerable<INumberEntityCore> target, long? amount = null)
    {
        target.CallService("increment", new NumberIncrementParameters { Amount = amount });
    }

    ///<summary>Set a number entity to its maximum value.</summary>
    public static void Max(this INumberEntityCore target, object? data = null)
    {
        target.CallService("max", data);
    }

    ///<summary>Set a number entity to its maximum value.</summary>
    public static void Max(this IEnumerable<INumberEntityCore> target, object? data = null)
    {
        target.CallService("max", data);
    }

    ///<summary>Set a number entity to its minimum value.</summary>
    public static void Min(this INumberEntityCore target, object? data = null)
    {
        target.CallService("min", data);
    }

    ///<summary>Set a number entity to its minimum value.</summary>
    public static void Min(this IEnumerable<INumberEntityCore> target, object? data = null)
    {
        target.CallService("min", data);
    }

    ///<summary>Sets the value of a number.</summary>
    public static void SetValue(this INumberEntityCore target, NumberSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value of a number.</summary>
    public static void SetValue(this IEnumerable<INumberEntityCore> target, NumberSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value of a number.</summary>
    ///<param name="target">The INumberEntityCore to call this service for</param>
    ///<param name="value">The target value to set. eg: 42</param>
    public static void SetValue(this INumberEntityCore target, string value)
    {
        target.CallService("set_value", new NumberSetValueParameters { Value = value });
    }

    ///<summary>Sets the value of a number.</summary>
    ///<param name="target">The IEnumerable&lt;INumberEntityCore&gt; to call this service for</param>
    ///<param name="value">The target value to set. eg: 42</param>
    public static void SetValue(this IEnumerable<INumberEntityCore> target, string value)
    {
        target.CallService("set_value", new NumberSetValueParameters { Value = value });
    }
}

public static class PowercalcEntityExtensionMethods
{
    ///<summary>Start execution of a playbook.</summary>
    public static void ActivatePlaybook(this ISensorEntityCore target, PowercalcActivatePlaybookParameters data)
    {
        target.CallService("activate_playbook", data);
    }

    ///<summary>Start execution of a playbook.</summary>
    public static void ActivatePlaybook(this IEnumerable<ISensorEntityCore> target, PowercalcActivatePlaybookParameters data)
    {
        target.CallService("activate_playbook", data);
    }

    ///<summary>Start execution of a playbook.</summary>
    ///<param name="target">The ISensorEntityCore to call this service for</param>
    ///<param name="playbookId">Playbook identifier. eg: program1</param>
    public static void ActivatePlaybook(this ISensorEntityCore target, string playbookId)
    {
        target.CallService("activate_playbook", new PowercalcActivatePlaybookParameters { PlaybookId = playbookId });
    }

    ///<summary>Start execution of a playbook.</summary>
    ///<param name="target">The IEnumerable&lt;ISensorEntityCore&gt; to call this service for</param>
    ///<param name="playbookId">Playbook identifier. eg: program1</param>
    public static void ActivatePlaybook(this IEnumerable<ISensorEntityCore> target, string playbookId)
    {
        target.CallService("activate_playbook", new PowercalcActivatePlaybookParameters { PlaybookId = playbookId });
    }

    ///<summary>Sets the energy sensor to a given kWh value.</summary>
    public static void CalibrateEnergy(this ISensorEntityCore target, PowercalcCalibrateEnergyParameters data)
    {
        target.CallService("calibrate_energy", data);
    }

    ///<summary>Sets the energy sensor to a given kWh value.</summary>
    public static void CalibrateEnergy(this IEnumerable<ISensorEntityCore> target, PowercalcCalibrateEnergyParameters data)
    {
        target.CallService("calibrate_energy", data);
    }

    ///<summary>Sets the energy sensor to a given kWh value.</summary>
    ///<param name="target">The ISensorEntityCore to call this service for</param>
    ///<param name="value">The value to set. eg: 100</param>
    public static void CalibrateEnergy(this ISensorEntityCore target, string value)
    {
        target.CallService("calibrate_energy", new PowercalcCalibrateEnergyParameters { Value = value });
    }

    ///<summary>Sets the energy sensor to a given kWh value.</summary>
    ///<param name="target">The IEnumerable&lt;ISensorEntityCore&gt; to call this service for</param>
    ///<param name="value">The value to set. eg: 100</param>
    public static void CalibrateEnergy(this IEnumerable<ISensorEntityCore> target, string value)
    {
        target.CallService("calibrate_energy", new PowercalcCalibrateEnergyParameters { Value = value });
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    public static void CalibrateUtilityMeter(this ISensorEntityCore target, PowercalcCalibrateUtilityMeterParameters data)
    {
        target.CallService("calibrate_utility_meter", data);
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    public static void CalibrateUtilityMeter(this IEnumerable<ISensorEntityCore> target, PowercalcCalibrateUtilityMeterParameters data)
    {
        target.CallService("calibrate_utility_meter", data);
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    ///<param name="target">The ISensorEntityCore to call this service for</param>
    ///<param name="value">The value to set. eg: 100</param>
    public static void CalibrateUtilityMeter(this ISensorEntityCore target, string value)
    {
        target.CallService("calibrate_utility_meter", new PowercalcCalibrateUtilityMeterParameters { Value = value });
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    ///<param name="target">The IEnumerable&lt;ISensorEntityCore&gt; to call this service for</param>
    ///<param name="value">The value to set. eg: 100</param>
    public static void CalibrateUtilityMeter(this IEnumerable<ISensorEntityCore> target, string value)
    {
        target.CallService("calibrate_utility_meter", new PowercalcCalibrateUtilityMeterParameters { Value = value });
    }

    ///<summary>Retrieve all entity id&apos;s of a group energy or power sensor</summary>
    public static Task<JsonElement?> GetGroupEntitiesAsync(this ISensorEntityCore target, object? data = null)
    {
        return target.CallServiceWithResponseAsync("get_group_entities", data);
    }

    ///<summary>Retrieve all entity id&apos;s of a group energy or power sensor</summary>
    public static void GetGroupEntities(this ISensorEntityCore target, object? data = null)
    {
        target.CallService("get_group_entities", data);
    }

    ///<summary>Retrieve all entity id&apos;s of a group energy or power sensor</summary>
    public static void GetGroupEntities(this IEnumerable<ISensorEntityCore> target, object? data = null)
    {
        target.CallService("get_group_entities", data);
    }

    ///<summary>Increases the sensor with a given amount.</summary>
    public static void IncreaseDailyEnergy(this ISensorEntityCore target, PowercalcIncreaseDailyEnergyParameters data)
    {
        target.CallService("increase_daily_energy", data);
    }

    ///<summary>Increases the sensor with a given amount.</summary>
    public static void IncreaseDailyEnergy(this IEnumerable<ISensorEntityCore> target, PowercalcIncreaseDailyEnergyParameters data)
    {
        target.CallService("increase_daily_energy", data);
    }

    ///<summary>Increases the sensor with a given amount.</summary>
    ///<param name="target">The ISensorEntityCore to call this service for</param>
    ///<param name="value">Amount to add to the sensor. eg: 100</param>
    public static void IncreaseDailyEnergy(this ISensorEntityCore target, string value)
    {
        target.CallService("increase_daily_energy", new PowercalcIncreaseDailyEnergyParameters { Value = value });
    }

    ///<summary>Increases the sensor with a given amount.</summary>
    ///<param name="target">The IEnumerable&lt;ISensorEntityCore&gt; to call this service for</param>
    ///<param name="value">Amount to add to the sensor. eg: 100</param>
    public static void IncreaseDailyEnergy(this IEnumerable<ISensorEntityCore> target, string value)
    {
        target.CallService("increase_daily_energy", new PowercalcIncreaseDailyEnergyParameters { Value = value });
    }

    ///<summary>Reset an energy sensor to zero kWh.</summary>
    public static void ResetEnergy(this ISensorEntityCore target, object? data = null)
    {
        target.CallService("reset_energy", data);
    }

    ///<summary>Reset an energy sensor to zero kWh.</summary>
    public static void ResetEnergy(this IEnumerable<ISensorEntityCore> target, object? data = null)
    {
        target.CallService("reset_energy", data);
    }

    ///<summary>Stop currently active playbook.</summary>
    public static void StopPlaybook(this ISensorEntityCore target, object? data = null)
    {
        target.CallService("stop_playbook", data);
    }

    ///<summary>Stop currently active playbook.</summary>
    public static void StopPlaybook(this IEnumerable<ISensorEntityCore> target, object? data = null)
    {
        target.CallService("stop_playbook", data);
    }

    ///<summary>Some profiles in the library has different sub profiles. This service allows you to switch to another one.</summary>
    public static void SwitchSubProfile(this ISensorEntityCore target, PowercalcSwitchSubProfileParameters data)
    {
        target.CallService("switch_sub_profile", data);
    }

    ///<summary>Some profiles in the library has different sub profiles. This service allows you to switch to another one.</summary>
    public static void SwitchSubProfile(this IEnumerable<ISensorEntityCore> target, PowercalcSwitchSubProfileParameters data)
    {
        target.CallService("switch_sub_profile", data);
    }

    ///<summary>Some profiles in the library has different sub profiles. This service allows you to switch to another one.</summary>
    ///<param name="target">The ISensorEntityCore to call this service for</param>
    ///<param name="profile">Define one of the possible sub profiles eg: night_vision</param>
    public static void SwitchSubProfile(this ISensorEntityCore target, string profile)
    {
        target.CallService("switch_sub_profile", new PowercalcSwitchSubProfileParameters { Profile = profile });
    }

    ///<summary>Some profiles in the library has different sub profiles. This service allows you to switch to another one.</summary>
    ///<param name="target">The IEnumerable&lt;ISensorEntityCore&gt; to call this service for</param>
    ///<param name="profile">Define one of the possible sub profiles eg: night_vision</param>
    public static void SwitchSubProfile(this IEnumerable<ISensorEntityCore> target, string profile)
    {
        target.CallService("switch_sub_profile", new PowercalcSwitchSubProfileParameters { Profile = profile });
    }
}

public static class RemoteEntityExtensionMethods
{
    ///<summary>Deletes a command or a list of commands from the database.</summary>
    public static void DeleteCommand(this IRemoteEntityCore target, RemoteDeleteCommandParameters data)
    {
        target.CallService("delete_command", data);
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    public static void DeleteCommand(this IEnumerable<IRemoteEntityCore> target, RemoteDeleteCommandParameters data)
    {
        target.CallService("delete_command", data);
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    ///<param name="target">The IRemoteEntityCore to call this service for</param>
    ///<param name="device">Device from which commands will be deleted. eg: television</param>
    ///<param name="command">The single command or the list of commands to be deleted. eg: Mute</param>
    public static void DeleteCommand(this IRemoteEntityCore target, object command, string? device = null)
    {
        target.CallService("delete_command", new RemoteDeleteCommandParameters { Device = device, Command = command });
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    ///<param name="target">The IEnumerable&lt;IRemoteEntityCore&gt; to call this service for</param>
    ///<param name="device">Device from which commands will be deleted. eg: television</param>
    ///<param name="command">The single command or the list of commands to be deleted. eg: Mute</param>
    public static void DeleteCommand(this IEnumerable<IRemoteEntityCore> target, object command, string? device = null)
    {
        target.CallService("delete_command", new RemoteDeleteCommandParameters { Device = device, Command = command });
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    public static void LearnCommand(this IRemoteEntityCore target, RemoteLearnCommandParameters data)
    {
        target.CallService("learn_command", data);
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    public static void LearnCommand(this IEnumerable<IRemoteEntityCore> target, RemoteLearnCommandParameters data)
    {
        target.CallService("learn_command", data);
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    ///<param name="target">The IRemoteEntityCore to call this service for</param>
    ///<param name="device">Device ID to learn command from. eg: television</param>
    ///<param name="command">A single command or a list of commands to learn. eg: Turn on</param>
    ///<param name="commandType">The type of command to be learned.</param>
    ///<param name="alternative">If code must be stored as an alternative. This is useful for discrete codes. Discrete codes are used for toggles that only perform one function. For example, a code to only turn a device on. If it is on already, sending the code won&apos;t change the state.</param>
    ///<param name="timeout">Timeout for the command to be learned.</param>
    public static void LearnCommand(this IRemoteEntityCore target, string? device = null, object? command = null, object? commandType = null, bool? alternative = null, long? timeout = null)
    {
        target.CallService("learn_command", new RemoteLearnCommandParameters { Device = device, Command = command, CommandType = commandType, Alternative = alternative, Timeout = timeout });
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    ///<param name="target">The IEnumerable&lt;IRemoteEntityCore&gt; to call this service for</param>
    ///<param name="device">Device ID to learn command from. eg: television</param>
    ///<param name="command">A single command or a list of commands to learn. eg: Turn on</param>
    ///<param name="commandType">The type of command to be learned.</param>
    ///<param name="alternative">If code must be stored as an alternative. This is useful for discrete codes. Discrete codes are used for toggles that only perform one function. For example, a code to only turn a device on. If it is on already, sending the code won&apos;t change the state.</param>
    ///<param name="timeout">Timeout for the command to be learned.</param>
    public static void LearnCommand(this IEnumerable<IRemoteEntityCore> target, string? device = null, object? command = null, object? commandType = null, bool? alternative = null, long? timeout = null)
    {
        target.CallService("learn_command", new RemoteLearnCommandParameters { Device = device, Command = command, CommandType = commandType, Alternative = alternative, Timeout = timeout });
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    public static void SendCommand(this IRemoteEntityCore target, RemoteSendCommandParameters data)
    {
        target.CallService("send_command", data);
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    public static void SendCommand(this IEnumerable<IRemoteEntityCore> target, RemoteSendCommandParameters data)
    {
        target.CallService("send_command", data);
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    ///<param name="target">The IRemoteEntityCore to call this service for</param>
    ///<param name="device">Device ID to send command to. eg: 32756745</param>
    ///<param name="command">A single command or a list of commands to send. eg: Play</param>
    ///<param name="numRepeats">The number of times you want to repeat the commands.</param>
    ///<param name="delaySecs">The time you want to wait in between repeated commands.</param>
    ///<param name="holdSecs">The time you want to have it held before the release is send.</param>
    public static void SendCommand(this IRemoteEntityCore target, object command, string? device = null, long? numRepeats = null, double? delaySecs = null, double? holdSecs = null)
    {
        target.CallService("send_command", new RemoteSendCommandParameters { Device = device, Command = command, NumRepeats = numRepeats, DelaySecs = delaySecs, HoldSecs = holdSecs });
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    ///<param name="target">The IEnumerable&lt;IRemoteEntityCore&gt; to call this service for</param>
    ///<param name="device">Device ID to send command to. eg: 32756745</param>
    ///<param name="command">A single command or a list of commands to send. eg: Play</param>
    ///<param name="numRepeats">The number of times you want to repeat the commands.</param>
    ///<param name="delaySecs">The time you want to wait in between repeated commands.</param>
    ///<param name="holdSecs">The time you want to have it held before the release is send.</param>
    public static void SendCommand(this IEnumerable<IRemoteEntityCore> target, object command, string? device = null, long? numRepeats = null, double? delaySecs = null, double? holdSecs = null)
    {
        target.CallService("send_command", new RemoteSendCommandParameters { Device = device, Command = command, NumRepeats = numRepeats, DelaySecs = delaySecs, HoldSecs = holdSecs });
    }

    ///<summary>Sends the toggle command.</summary>
    public static void Toggle(this IRemoteEntityCore target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Sends the toggle command.</summary>
    public static void Toggle(this IEnumerable<IRemoteEntityCore> target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Sends the turn off command.</summary>
    public static void TurnOff(this IRemoteEntityCore target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Sends the turn off command.</summary>
    public static void TurnOff(this IEnumerable<IRemoteEntityCore> target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Sends the turn on command.</summary>
    public static void TurnOn(this IRemoteEntityCore target, RemoteTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Sends the turn on command.</summary>
    public static void TurnOn(this IEnumerable<IRemoteEntityCore> target, RemoteTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Sends the turn on command.</summary>
    ///<param name="target">The IRemoteEntityCore to call this service for</param>
    ///<param name="activity">Activity ID or activity name to be started. eg: BedroomTV</param>
    public static void TurnOn(this IRemoteEntityCore target, string? activity = null)
    {
        target.CallService("turn_on", new RemoteTurnOnParameters { Activity = activity });
    }

    ///<summary>Sends the turn on command.</summary>
    ///<param name="target">The IEnumerable&lt;IRemoteEntityCore&gt; to call this service for</param>
    ///<param name="activity">Activity ID or activity name to be started. eg: BedroomTV</param>
    public static void TurnOn(this IEnumerable<IRemoteEntityCore> target, string? activity = null)
    {
        target.CallService("turn_on", new RemoteTurnOnParameters { Activity = activity });
    }
}

public static class SceneEntityExtensionMethods
{
    ///<summary>Deletes a dynamically created scene.</summary>
    public static void Delete(this ISceneEntityCore target, object? data = null)
    {
        target.CallService("delete", data);
    }

    ///<summary>Deletes a dynamically created scene.</summary>
    public static void Delete(this IEnumerable<ISceneEntityCore> target, object? data = null)
    {
        target.CallService("delete", data);
    }

    ///<summary>Activates a scene.</summary>
    public static void TurnOn(this ISceneEntityCore target, SceneTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Activates a scene.</summary>
    public static void TurnOn(this IEnumerable<ISceneEntityCore> target, SceneTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Activates a scene.</summary>
    ///<param name="target">The ISceneEntityCore to call this service for</param>
    ///<param name="transition">Time it takes the devices to transition into the states defined in the scene.</param>
    public static void TurnOn(this ISceneEntityCore target, long? transition = null)
    {
        target.CallService("turn_on", new SceneTurnOnParameters { Transition = transition });
    }

    ///<summary>Activates a scene.</summary>
    ///<param name="target">The IEnumerable&lt;ISceneEntityCore&gt; to call this service for</param>
    ///<param name="transition">Time it takes the devices to transition into the states defined in the scene.</param>
    public static void TurnOn(this IEnumerable<ISceneEntityCore> target, long? transition = null)
    {
        target.CallService("turn_on", new SceneTurnOnParameters { Transition = transition });
    }
}

public static class SelectEntityExtensionMethods
{
    ///<summary>Select an random option for a select entity.</summary>
    public static void Random(this ISelectEntityCore target, SelectRandomParameters data)
    {
        target.CallService("random", data);
    }

    ///<summary>Select an random option for a select entity.</summary>
    public static void Random(this IEnumerable<ISelectEntityCore> target, SelectRandomParameters data)
    {
        target.CallService("random", data);
    }

    ///<summary>Select an random option for a select entity.</summary>
    ///<param name="target">The ISelectEntityCore to call this service for</param>
    ///<param name="options">Limits the options to select from. If not provided, all options will be considered.</param>
    public static void Random(this ISelectEntityCore target, object? options = null)
    {
        target.CallService("random", new SelectRandomParameters { Options = options });
    }

    ///<summary>Select an random option for a select entity.</summary>
    ///<param name="target">The IEnumerable&lt;ISelectEntityCore&gt; to call this service for</param>
    ///<param name="options">Limits the options to select from. If not provided, all options will be considered.</param>
    public static void Random(this IEnumerable<ISelectEntityCore> target, object? options = null)
    {
        target.CallService("random", new SelectRandomParameters { Options = options });
    }

    ///<summary>Selects the first option.</summary>
    public static void SelectFirst(this ISelectEntityCore target, object? data = null)
    {
        target.CallService("select_first", data);
    }

    ///<summary>Selects the first option.</summary>
    public static void SelectFirst(this IEnumerable<ISelectEntityCore> target, object? data = null)
    {
        target.CallService("select_first", data);
    }

    ///<summary>Selects the last option.</summary>
    public static void SelectLast(this ISelectEntityCore target, object? data = null)
    {
        target.CallService("select_last", data);
    }

    ///<summary>Selects the last option.</summary>
    public static void SelectLast(this IEnumerable<ISelectEntityCore> target, object? data = null)
    {
        target.CallService("select_last", data);
    }

    ///<summary>Selects the next option.</summary>
    public static void SelectNext(this ISelectEntityCore target, SelectSelectNextParameters data)
    {
        target.CallService("select_next", data);
    }

    ///<summary>Selects the next option.</summary>
    public static void SelectNext(this IEnumerable<ISelectEntityCore> target, SelectSelectNextParameters data)
    {
        target.CallService("select_next", data);
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="target">The ISelectEntityCore to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first.</param>
    public static void SelectNext(this ISelectEntityCore target, bool? cycle = null)
    {
        target.CallService("select_next", new SelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="target">The IEnumerable&lt;ISelectEntityCore&gt; to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first.</param>
    public static void SelectNext(this IEnumerable<ISelectEntityCore> target, bool? cycle = null)
    {
        target.CallService("select_next", new SelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects an option.</summary>
    public static void SelectOption(this ISelectEntityCore target, SelectSelectOptionParameters data)
    {
        target.CallService("select_option", data);
    }

    ///<summary>Selects an option.</summary>
    public static void SelectOption(this IEnumerable<ISelectEntityCore> target, SelectSelectOptionParameters data)
    {
        target.CallService("select_option", data);
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The ISelectEntityCore to call this service for</param>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public static void SelectOption(this ISelectEntityCore target, object option)
    {
        target.CallService("select_option", new SelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The IEnumerable&lt;ISelectEntityCore&gt; to call this service for</param>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public static void SelectOption(this IEnumerable<ISelectEntityCore> target, object option)
    {
        target.CallService("select_option", new SelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects the previous option.</summary>
    public static void SelectPrevious(this ISelectEntityCore target, SelectSelectPreviousParameters data)
    {
        target.CallService("select_previous", data);
    }

    ///<summary>Selects the previous option.</summary>
    public static void SelectPrevious(this IEnumerable<ISelectEntityCore> target, SelectSelectPreviousParameters data)
    {
        target.CallService("select_previous", data);
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The ISelectEntityCore to call this service for</param>
    ///<param name="cycle">If the option should cycle from the first to the last.</param>
    public static void SelectPrevious(this ISelectEntityCore target, bool? cycle = null)
    {
        target.CallService("select_previous", new SelectSelectPreviousParameters { Cycle = cycle });
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The IEnumerable&lt;ISelectEntityCore&gt; to call this service for</param>
    ///<param name="cycle">If the option should cycle from the first to the last.</param>
    public static void SelectPrevious(this IEnumerable<ISelectEntityCore> target, bool? cycle = null)
    {
        target.CallService("select_previous", new SelectSelectPreviousParameters { Cycle = cycle });
    }
}

public static class SwitchEntityExtensionMethods
{
    ///<summary>Toggles a switch on/off.</summary>
    public static void Toggle(this ISwitchEntityCore target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles a switch on/off.</summary>
    public static void Toggle(this IEnumerable<ISwitchEntityCore> target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Turns a switch off.</summary>
    public static void TurnOff(this ISwitchEntityCore target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns a switch off.</summary>
    public static void TurnOff(this IEnumerable<ISwitchEntityCore> target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns a switch on.</summary>
    public static void TurnOn(this ISwitchEntityCore target, object? data = null)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turns a switch on.</summary>
    public static void TurnOn(this IEnumerable<ISwitchEntityCore> target, object? data = null)
    {
        target.CallService("turn_on", data);
    }
}

public static class TeamtrackerEntityExtensionMethods
{
    ///<summary>Sets the teamtracker sensor based on the input parameters, calls the ESPN API, and populates the sensor attributes.</summary>
    public static void CallApi(this ISensorEntityCore target, TeamtrackerCallApiParameters data)
    {
        target.CallService("call_api", data);
    }

    ///<summary>Sets the teamtracker sensor based on the input parameters, calls the ESPN API, and populates the sensor attributes.</summary>
    public static void CallApi(this IEnumerable<ISensorEntityCore> target, TeamtrackerCallApiParameters data)
    {
        target.CallService("call_api", data);
    }

    ///<summary>Sets the teamtracker sensor based on the input parameters, calls the ESPN API, and populates the sensor attributes.</summary>
    ///<param name="target">The ISensorEntityCore to call this service for</param>
    ///<param name="sportPath">Sport path eg: football</param>
    ///<param name="leaguePath">League path eg: nfl</param>
    ///<param name="teamId">Team ID eg: CLE</param>
    ///<param name="conferenceId">Conference ID (only for NCAA) eg: 5</param>
    public static void CallApi(this ISensorEntityCore target, string sportPath, string leaguePath, string teamId, string? conferenceId = null)
    {
        target.CallService("call_api", new TeamtrackerCallApiParameters { SportPath = sportPath, LeaguePath = leaguePath, TeamId = teamId, ConferenceId = conferenceId });
    }

    ///<summary>Sets the teamtracker sensor based on the input parameters, calls the ESPN API, and populates the sensor attributes.</summary>
    ///<param name="target">The IEnumerable&lt;ISensorEntityCore&gt; to call this service for</param>
    ///<param name="sportPath">Sport path eg: football</param>
    ///<param name="leaguePath">League path eg: nfl</param>
    ///<param name="teamId">Team ID eg: CLE</param>
    ///<param name="conferenceId">Conference ID (only for NCAA) eg: 5</param>
    public static void CallApi(this IEnumerable<ISensorEntityCore> target, string sportPath, string leaguePath, string teamId, string? conferenceId = null)
    {
        target.CallService("call_api", new TeamtrackerCallApiParameters { SportPath = sportPath, LeaguePath = leaguePath, TeamId = teamId, ConferenceId = conferenceId });
    }
}

public static class TextEntityExtensionMethods
{
    ///<summary>Sets the value.</summary>
    public static void SetValue(this TextEntity target, TextSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    public static void SetValue(this IEnumerable<TextEntity> target, TextSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The TextEntity to call this service for</param>
    ///<param name="value">Enter your text. eg: Hello world!</param>
    public static void SetValue(this TextEntity target, string value)
    {
        target.CallService("set_value", new TextSetValueParameters { Value = value });
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The IEnumerable&lt;TextEntity&gt; to call this service for</param>
    ///<param name="value">Enter your text. eg: Hello world!</param>
    public static void SetValue(this IEnumerable<TextEntity> target, string value)
    {
        target.CallService("set_value", new TextSetValueParameters { Value = value });
    }
}

public static class TodoEntityExtensionMethods
{
    ///<summary>Adds a new to-do list item.</summary>
    public static void AddItem(this TodoEntity target, TodoAddItemParameters data)
    {
        target.CallService("add_item", data);
    }

    ///<summary>Adds a new to-do list item.</summary>
    public static void AddItem(this IEnumerable<TodoEntity> target, TodoAddItemParameters data)
    {
        target.CallService("add_item", data);
    }

    ///<summary>Adds a new to-do list item.</summary>
    ///<param name="target">The TodoEntity to call this service for</param>
    ///<param name="item">The name that represents the to-do item. eg: Submit income tax return</param>
    ///<param name="dueDate">The date the to-do item is expected to be completed. eg: 2023-11-17</param>
    ///<param name="dueDatetime">The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</param>
    ///<param name="description">A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</param>
    public static void AddItem(this TodoEntity target, string item, DateOnly? dueDate = null, DateTime? dueDatetime = null, string? description = null)
    {
        target.CallService("add_item", new TodoAddItemParameters { Item = item, DueDate = dueDate, DueDatetime = dueDatetime, Description = description });
    }

    ///<summary>Adds a new to-do list item.</summary>
    ///<param name="target">The IEnumerable&lt;TodoEntity&gt; to call this service for</param>
    ///<param name="item">The name that represents the to-do item. eg: Submit income tax return</param>
    ///<param name="dueDate">The date the to-do item is expected to be completed. eg: 2023-11-17</param>
    ///<param name="dueDatetime">The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</param>
    ///<param name="description">A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</param>
    public static void AddItem(this IEnumerable<TodoEntity> target, string item, DateOnly? dueDate = null, DateTime? dueDatetime = null, string? description = null)
    {
        target.CallService("add_item", new TodoAddItemParameters { Item = item, DueDate = dueDate, DueDatetime = dueDatetime, Description = description });
    }

    ///<summary>Gets items on a to-do list.</summary>
    public static Task<JsonElement?> GetItemsAsync(this TodoEntity target, TodoGetItemsParameters data)
    {
        return target.CallServiceWithResponseAsync("get_items", data);
    }

    ///<summary>Gets items on a to-do list.</summary>
    ///<param name="target">The TodoEntity to call this service for</param>
    ///<param name="status">Only return to-do items with the specified statuses. Returns not completed actions by default. eg: needs_action</param>
    public static Task<JsonElement?> GetItemsAsync(this TodoEntity target, IEnumerable<object>? status = null)
    {
        return target.CallServiceWithResponseAsync("get_items", new TodoGetItemsParameters { Status = status });
    }

    ///<summary>Gets items on a to-do list.</summary>
    public static void GetItems(this TodoEntity target, TodoGetItemsParameters data)
    {
        target.CallService("get_items", data);
    }

    ///<summary>Gets items on a to-do list.</summary>
    public static void GetItems(this IEnumerable<TodoEntity> target, TodoGetItemsParameters data)
    {
        target.CallService("get_items", data);
    }

    ///<summary>Gets items on a to-do list.</summary>
    ///<param name="target">The TodoEntity to call this service for</param>
    ///<param name="status">Only return to-do items with the specified statuses. Returns not completed actions by default. eg: needs_action</param>
    public static void GetItems(this TodoEntity target, IEnumerable<object>? status = null)
    {
        target.CallService("get_items", new TodoGetItemsParameters { Status = status });
    }

    ///<summary>Gets items on a to-do list.</summary>
    ///<param name="target">The IEnumerable&lt;TodoEntity&gt; to call this service for</param>
    ///<param name="status">Only return to-do items with the specified statuses. Returns not completed actions by default. eg: needs_action</param>
    public static void GetItems(this IEnumerable<TodoEntity> target, IEnumerable<object>? status = null)
    {
        target.CallService("get_items", new TodoGetItemsParameters { Status = status });
    }

    ///<summary>Removes all to-do list items that have been completed.</summary>
    public static void RemoveCompletedItems(this TodoEntity target, object? data = null)
    {
        target.CallService("remove_completed_items", data);
    }

    ///<summary>Removes all to-do list items that have been completed.</summary>
    public static void RemoveCompletedItems(this IEnumerable<TodoEntity> target, object? data = null)
    {
        target.CallService("remove_completed_items", data);
    }

    ///<summary>Removes an existing to-do list item by its name or UID.</summary>
    public static void RemoveItem(this TodoEntity target, TodoRemoveItemParameters data)
    {
        target.CallService("remove_item", data);
    }

    ///<summary>Removes an existing to-do list item by its name or UID.</summary>
    public static void RemoveItem(this IEnumerable<TodoEntity> target, TodoRemoveItemParameters data)
    {
        target.CallService("remove_item", data);
    }

    ///<summary>Removes an existing to-do list item by its name or UID.</summary>
    ///<param name="target">The TodoEntity to call this service for</param>
    ///<param name="item">The name/summary of the to-do item. If you have items with duplicate names, you can reference specific ones using their UID instead. eg: Submit income tax return</param>
    public static void RemoveItem(this TodoEntity target, string item)
    {
        target.CallService("remove_item", new TodoRemoveItemParameters { Item = item });
    }

    ///<summary>Removes an existing to-do list item by its name or UID.</summary>
    ///<param name="target">The IEnumerable&lt;TodoEntity&gt; to call this service for</param>
    ///<param name="item">The name/summary of the to-do item. If you have items with duplicate names, you can reference specific ones using their UID instead. eg: Submit income tax return</param>
    public static void RemoveItem(this IEnumerable<TodoEntity> target, string item)
    {
        target.CallService("remove_item", new TodoRemoveItemParameters { Item = item });
    }

    ///<summary>Updates an existing to-do list item based on its name or UID.</summary>
    public static void UpdateItem(this TodoEntity target, TodoUpdateItemParameters data)
    {
        target.CallService("update_item", data);
    }

    ///<summary>Updates an existing to-do list item based on its name or UID.</summary>
    public static void UpdateItem(this IEnumerable<TodoEntity> target, TodoUpdateItemParameters data)
    {
        target.CallService("update_item", data);
    }

    ///<summary>Updates an existing to-do list item based on its name or UID.</summary>
    ///<param name="target">The TodoEntity to call this service for</param>
    ///<param name="item">The name/summary of the to-do item. If you have items with duplicate names, you can reference specific ones using their UID instead. eg: Submit income tax return</param>
    ///<param name="rename">The new name for the to-do item eg: Something else</param>
    ///<param name="status">A status or confirmation of the to-do item. eg: needs_action</param>
    ///<param name="dueDate">The date the to-do item is expected to be completed. eg: 2023-11-17</param>
    ///<param name="dueDatetime">The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</param>
    ///<param name="description">A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</param>
    public static void UpdateItem(this TodoEntity target, string item, string? rename = null, object? status = null, DateOnly? dueDate = null, DateTime? dueDatetime = null, string? description = null)
    {
        target.CallService("update_item", new TodoUpdateItemParameters { Item = item, Rename = rename, Status = status, DueDate = dueDate, DueDatetime = dueDatetime, Description = description });
    }

    ///<summary>Updates an existing to-do list item based on its name or UID.</summary>
    ///<param name="target">The IEnumerable&lt;TodoEntity&gt; to call this service for</param>
    ///<param name="item">The name/summary of the to-do item. If you have items with duplicate names, you can reference specific ones using their UID instead. eg: Submit income tax return</param>
    ///<param name="rename">The new name for the to-do item eg: Something else</param>
    ///<param name="status">A status or confirmation of the to-do item. eg: needs_action</param>
    ///<param name="dueDate">The date the to-do item is expected to be completed. eg: 2023-11-17</param>
    ///<param name="dueDatetime">The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</param>
    ///<param name="description">A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</param>
    public static void UpdateItem(this IEnumerable<TodoEntity> target, string item, string? rename = null, object? status = null, DateOnly? dueDate = null, DateTime? dueDatetime = null, string? description = null)
    {
        target.CallService("update_item", new TodoUpdateItemParameters { Item = item, Rename = rename, Status = status, DueDate = dueDate, DueDatetime = dueDatetime, Description = description });
    }
}

public static class TtsEntityExtensionMethods
{
    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    public static void Speak(this TtsEntity target, TtsSpeakParameters data)
    {
        target.CallService("speak", data);
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    public static void Speak(this IEnumerable<TtsEntity> target, TtsSpeakParameters data)
    {
        target.CallService("speak", data);
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    ///<param name="target">The TtsEntity to call this service for</param>
    ///<param name="mediaPlayerEntityId">Media players to play the message.</param>
    ///<param name="message">The text you want to convert into speech so that you can listen to it on your device. eg: My name is hanna</param>
    ///<param name="cache">Stores this message locally so that when the text is requested again, the output can be produced more quickly.</param>
    ///<param name="language">Language to use for speech generation. eg: ru</param>
    ///<param name="options">A dictionary containing integration-specific options. eg: platform specific</param>
    public static void Speak(this TtsEntity target, string mediaPlayerEntityId, string message, bool? cache = null, string? language = null, object? options = null)
    {
        target.CallService("speak", new TtsSpeakParameters { MediaPlayerEntityId = mediaPlayerEntityId, Message = message, Cache = cache, Language = language, Options = options });
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    ///<param name="target">The IEnumerable&lt;TtsEntity&gt; to call this service for</param>
    ///<param name="mediaPlayerEntityId">Media players to play the message.</param>
    ///<param name="message">The text you want to convert into speech so that you can listen to it on your device. eg: My name is hanna</param>
    ///<param name="cache">Stores this message locally so that when the text is requested again, the output can be produced more quickly.</param>
    ///<param name="language">Language to use for speech generation. eg: ru</param>
    ///<param name="options">A dictionary containing integration-specific options. eg: platform specific</param>
    public static void Speak(this IEnumerable<TtsEntity> target, string mediaPlayerEntityId, string message, bool? cache = null, string? language = null, object? options = null)
    {
        target.CallService("speak", new TtsSpeakParameters { MediaPlayerEntityId = mediaPlayerEntityId, Message = message, Cache = cache, Language = language, Options = options });
    }
}

public static class UpdateEntityExtensionMethods
{
    ///<summary>Removes the skipped version marker from an update.</summary>
    public static void ClearSkipped(this IUpdateEntityCore target, object? data = null)
    {
        target.CallService("clear_skipped", data);
    }

    ///<summary>Removes the skipped version marker from an update.</summary>
    public static void ClearSkipped(this IEnumerable<IUpdateEntityCore> target, object? data = null)
    {
        target.CallService("clear_skipped", data);
    }

    ///<summary>Installs an update for a device or service.</summary>
    public static void Install(this IUpdateEntityCore target, UpdateInstallParameters data)
    {
        target.CallService("install", data);
    }

    ///<summary>Installs an update for a device or service.</summary>
    public static void Install(this IEnumerable<IUpdateEntityCore> target, UpdateInstallParameters data)
    {
        target.CallService("install", data);
    }

    ///<summary>Installs an update for a device or service.</summary>
    ///<param name="target">The IUpdateEntityCore to call this service for</param>
    ///<param name="version">The version to install. If omitted, the latest version will be installed. eg: 1.0.0</param>
    ///<param name="backup">If supported by the integration, this creates a backup before starting the update.</param>
    public static void Install(this IUpdateEntityCore target, string? version = null, bool? backup = null)
    {
        target.CallService("install", new UpdateInstallParameters { Version = version, Backup = backup });
    }

    ///<summary>Installs an update for a device or service.</summary>
    ///<param name="target">The IEnumerable&lt;IUpdateEntityCore&gt; to call this service for</param>
    ///<param name="version">The version to install. If omitted, the latest version will be installed. eg: 1.0.0</param>
    ///<param name="backup">If supported by the integration, this creates a backup before starting the update.</param>
    public static void Install(this IEnumerable<IUpdateEntityCore> target, string? version = null, bool? backup = null)
    {
        target.CallService("install", new UpdateInstallParameters { Version = version, Backup = backup });
    }

    ///<summary>Marks currently available update as skipped.</summary>
    public static void Skip(this IUpdateEntityCore target, object? data = null)
    {
        target.CallService("skip", data);
    }

    ///<summary>Marks currently available update as skipped.</summary>
    public static void Skip(this IEnumerable<IUpdateEntityCore> target, object? data = null)
    {
        target.CallService("skip", data);
    }
}

public static class UtilityMeterEntityExtensionMethods
{
    ///<summary>Resets all counters of a utility meter.</summary>
    public static void Reset(this ISelectEntityCore target, object? data = null)
    {
        target.CallService("reset", data);
    }

    ///<summary>Resets all counters of a utility meter.</summary>
    public static void Reset(this IEnumerable<ISelectEntityCore> target, object? data = null)
    {
        target.CallService("reset", data);
    }
}

public static class VacuumEntityExtensionMethods
{
    ///<summary>Tells the vacuum cleaner to do a spot clean-up.</summary>
    public static void CleanSpot(this IVacuumEntityCore target, object? data = null)
    {
        target.CallService("clean_spot", data);
    }

    ///<summary>Tells the vacuum cleaner to do a spot clean-up.</summary>
    public static void CleanSpot(this IEnumerable<IVacuumEntityCore> target, object? data = null)
    {
        target.CallService("clean_spot", data);
    }

    ///<summary>Locates the vacuum cleaner robot.</summary>
    public static void Locate(this IVacuumEntityCore target, object? data = null)
    {
        target.CallService("locate", data);
    }

    ///<summary>Locates the vacuum cleaner robot.</summary>
    public static void Locate(this IEnumerable<IVacuumEntityCore> target, object? data = null)
    {
        target.CallService("locate", data);
    }

    ///<summary>Pauses the cleaning task.</summary>
    public static void Pause(this IVacuumEntityCore target, object? data = null)
    {
        target.CallService("pause", data);
    }

    ///<summary>Pauses the cleaning task.</summary>
    public static void Pause(this IEnumerable<IVacuumEntityCore> target, object? data = null)
    {
        target.CallService("pause", data);
    }

    ///<summary>Tells the vacuum cleaner to return to its dock.</summary>
    public static void ReturnToBase(this IVacuumEntityCore target, object? data = null)
    {
        target.CallService("return_to_base", data);
    }

    ///<summary>Tells the vacuum cleaner to return to its dock.</summary>
    public static void ReturnToBase(this IEnumerable<IVacuumEntityCore> target, object? data = null)
    {
        target.CallService("return_to_base", data);
    }

    ///<summary>Sends a command to the vacuum cleaner.</summary>
    public static void SendCommand(this IVacuumEntityCore target, VacuumSendCommandParameters data)
    {
        target.CallService("send_command", data);
    }

    ///<summary>Sends a command to the vacuum cleaner.</summary>
    public static void SendCommand(this IEnumerable<IVacuumEntityCore> target, VacuumSendCommandParameters data)
    {
        target.CallService("send_command", data);
    }

    ///<summary>Sends a command to the vacuum cleaner.</summary>
    ///<param name="target">The IVacuumEntityCore to call this service for</param>
    ///<param name="command">Command to execute. The commands are integration-specific. eg: set_dnd_timer</param>
    ///<param name="params">Parameters for the command. The parameters are integration-specific. eg: { &quot;key&quot;: &quot;value&quot; }</param>
    public static void SendCommand(this IVacuumEntityCore target, string command, object? @params = null)
    {
        target.CallService("send_command", new VacuumSendCommandParameters { Command = command, Params = @params });
    }

    ///<summary>Sends a command to the vacuum cleaner.</summary>
    ///<param name="target">The IEnumerable&lt;IVacuumEntityCore&gt; to call this service for</param>
    ///<param name="command">Command to execute. The commands are integration-specific. eg: set_dnd_timer</param>
    ///<param name="params">Parameters for the command. The parameters are integration-specific. eg: { &quot;key&quot;: &quot;value&quot; }</param>
    public static void SendCommand(this IEnumerable<IVacuumEntityCore> target, string command, object? @params = null)
    {
        target.CallService("send_command", new VacuumSendCommandParameters { Command = command, Params = @params });
    }

    ///<summary>Sets the fan speed of the vacuum cleaner.</summary>
    public static void SetFanSpeed(this IVacuumEntityCore target, VacuumSetFanSpeedParameters data)
    {
        target.CallService("set_fan_speed", data);
    }

    ///<summary>Sets the fan speed of the vacuum cleaner.</summary>
    public static void SetFanSpeed(this IEnumerable<IVacuumEntityCore> target, VacuumSetFanSpeedParameters data)
    {
        target.CallService("set_fan_speed", data);
    }

    ///<summary>Sets the fan speed of the vacuum cleaner.</summary>
    ///<param name="target">The IVacuumEntityCore to call this service for</param>
    ///<param name="fanSpeed">Fan speed. The value depends on the integration. Some integrations have speed steps, like &apos;medium&apos;. Some use a percentage, between 0 and 100. eg: low</param>
    public static void SetFanSpeed(this IVacuumEntityCore target, string fanSpeed)
    {
        target.CallService("set_fan_speed", new VacuumSetFanSpeedParameters { FanSpeed = fanSpeed });
    }

    ///<summary>Sets the fan speed of the vacuum cleaner.</summary>
    ///<param name="target">The IEnumerable&lt;IVacuumEntityCore&gt; to call this service for</param>
    ///<param name="fanSpeed">Fan speed. The value depends on the integration. Some integrations have speed steps, like &apos;medium&apos;. Some use a percentage, between 0 and 100. eg: low</param>
    public static void SetFanSpeed(this IEnumerable<IVacuumEntityCore> target, string fanSpeed)
    {
        target.CallService("set_fan_speed", new VacuumSetFanSpeedParameters { FanSpeed = fanSpeed });
    }

    ///<summary>Starts or resumes the cleaning task.</summary>
    public static void Start(this IVacuumEntityCore target, object? data = null)
    {
        target.CallService("start", data);
    }

    ///<summary>Starts or resumes the cleaning task.</summary>
    public static void Start(this IEnumerable<IVacuumEntityCore> target, object? data = null)
    {
        target.CallService("start", data);
    }

    ///<summary>Stops the current cleaning task.</summary>
    public static void Stop(this IVacuumEntityCore target, object? data = null)
    {
        target.CallService("stop", data);
    }

    ///<summary>Stops the current cleaning task.</summary>
    public static void Stop(this IEnumerable<IVacuumEntityCore> target, object? data = null)
    {
        target.CallService("stop", data);
    }
}

public static class WeatherEntityExtensionMethods
{
    ///<summary>Retrieves the forecast from selected weather services.</summary>
    public static Task<JsonElement?> GetForecastsAsync(this IWeatherEntityCore target, WeatherGetForecastsParameters data)
    {
        return target.CallServiceWithResponseAsync("get_forecasts", data);
    }

    ///<summary>Retrieves the forecast from selected weather services.</summary>
    ///<param name="target">The IWeatherEntityCore to call this service for</param>
    ///<param name="type">The scope of the weather forecast.</param>
    public static Task<JsonElement?> GetForecastsAsync(this IWeatherEntityCore target, object @type)
    {
        return target.CallServiceWithResponseAsync("get_forecasts", new WeatherGetForecastsParameters { Type = @type });
    }

    ///<summary>Retrieves the forecast from selected weather services.</summary>
    public static void GetForecasts(this IWeatherEntityCore target, WeatherGetForecastsParameters data)
    {
        target.CallService("get_forecasts", data);
    }

    ///<summary>Retrieves the forecast from selected weather services.</summary>
    public static void GetForecasts(this IEnumerable<IWeatherEntityCore> target, WeatherGetForecastsParameters data)
    {
        target.CallService("get_forecasts", data);
    }

    ///<summary>Retrieves the forecast from selected weather services.</summary>
    ///<param name="target">The IWeatherEntityCore to call this service for</param>
    ///<param name="type">The scope of the weather forecast.</param>
    public static void GetForecasts(this IWeatherEntityCore target, object @type)
    {
        target.CallService("get_forecasts", new WeatherGetForecastsParameters { Type = @type });
    }

    ///<summary>Retrieves the forecast from selected weather services.</summary>
    ///<param name="target">The IEnumerable&lt;IWeatherEntityCore&gt; to call this service for</param>
    ///<param name="type">The scope of the weather forecast.</param>
    public static void GetForecasts(this IEnumerable<IWeatherEntityCore> target, object @type)
    {
        target.CallService("get_forecasts", new WeatherGetForecastsParameters { Type = @type });
    }
}